<project default="run" name="org.eclipse.osee.base.releng/build.xml - Provisions an Eclipse Target">

	<target name="init">
		<property environment="env" />

		<!-- load properties and set timestamp for the build -->
		<loadproperties srcFile="build.properties" />
		<tstamp>
			<format property="buildTimestamp" pattern="yyyyMMddHHmm" />
		</tstamp>

		<property name="SNAPSHOT" value="false" />
		<property name="forceContextQualifier" value="v${buildTimestamp}" />
		<property name="fetchTag" value="HEAD" />

		<!-- calculate workspaceDir as parent of this folder, the project's .releng folder (relengBuilderDir) -->
		<property name="relengBuilderDir" value="${basedir}" />
		<dirname file="${relengBuilderDir}" property="workspaceDir" />

		<property name="writableBuildRoot" value="/tmp/build" />
		<property name="buildDir" value="${writableBuildRoot}/athena" />

		<delete dir="${buildDir}" failonerror="false" />

		<setproxy proxyhost="${http.proxyHost}" proxyport="${http.proxyPort}" />

		<!-- invoke a new Eclipse process and launch the build from the common.releng folder -->
		<property name="relengCommonBuilderDir" value="${workspaceDir}/org.eclipse.dash.common.releng" />
		<property name="downloadsDir" value="${writableBuildRoot}/downloads" />
		<property name="thirdPartyJarsDir" value="${writableBuildRoot}/3rdPartyJars" />
		<property name="relengBaseBuilderDir" value="${workspaceDir}/org.eclipse.releng.basebuilder" />
		<property name="thirdPartyJarsDir" value="${writableBuildRoot}/3rdPartyJars" />

		<condition property="antContribJarUnavailable">
			<not>
				<or>
					<available file="${relengCommonBuilderDir}/lib/ant-contrib.jar" type="file" />
					<available file="${relengBuilderDir}/lib/ant-contrib.jar" type="file" />
					<available file="${thirdPartyJarsDir}/ant-contrib.jar" type="file" />
					<available file="/usr/share/java/ant-contrib.jar" type="file" />
				</or>
			</not>
		</condition>
		<antcall target="check.ant-contrib" />

		<taskdef resource="net/sf/antcontrib/antlib.xml">
			<classpath>
				<pathelement path="${classpath}" />
				<pathelement location="${relengCommonBuilderDir}/lib/ant-contrib.jar" />
				<pathelement location="${relengBuilderDir}/lib/ant-contrib.jar" />
				<pathelement location="${thirdPartyJarsDir}/ant-contrib.jar" />
				<pathelement location="/usr/share/java/ant-contrib.jar" />
			</classpath>
		</taskdef>

		<if>
			<available file="${relengCommonBuilderDir}/tools/scripts/buildAllHelper.xml" type="file" />
			<then>
				<property name="helper" value="${relengCommonBuilderDir}/tools/scripts/buildAllHelper.xml" />
			</then>
			<else>
				<property name="helper" value="tools/scripts/buildAllHelper.xml" />
			</else>
		</if>

		<antfetch antfile="${helper}" return="buildcfg" target="genBuildCfg" />
		<echo>Load properties from ${buildcfg}</echo>
		<property file="${buildcfg}" />

		<available file="${buildDirectory}/label.properties" property="label.properties.exists" />
		<ant target="create.label.properties" antfile="${helper}" />
		<property file="${buildDirectory}/label.properties" />

		<echo message="Base OS: ${baseos}; Base Window System: ${basews}" />
		<condition property="isLinuxGTK">
			<equals arg1="${baseos}.${basews}" arg2="linux.gtk" />
		</condition>
		<condition property="isMacOSXcarbon">
			<equals arg1="${baseos}.${basews}" arg2="macosx.carbon" />
		</condition>
		<condition property="isMacOSXcocoa">
			<equals arg1="${baseos}.${basews}" arg2="macosx.cocoa" />
		</condition>
		<condition property="isWindows">
			<equals arg1="${baseos}.${basews}" arg2="win32.win32" />
		</condition>
	</target>



	<target name="build">
		<echo message="Workspace: ${WORKSPACE}" />
		<echo message="Writable Build Root: ${writableBuildRoot}" />
		<echo message="Java Home: ${JAVA_HOME}" />
		<echo message="Java 6.0 Home: ${JAVA60_HOME}" />
		<echo message="Qualifier: ${forceContextQualifier}" />
		<echo message="Fetch Tag: ${fetchTag}" />

		<fail message="Specify the build workspace path 'WORKSPACE'">
			<condition>
				<not>
					<isset property="WORKSPACE" />
				</not>
			</condition>
		</fail>

		<mkdir dir="${writableBuildRoot}" />
		<mkdir dir="${buildDir}/eclipse" />
		<mkdir dir="${downloadsDir}" />
		<mkdir dir="${thirdPartyJarsDir}" />

		<condition property="antContribJarUnavailable">
			<not>
				<or>
					<available file="${relengCommonBuilderDir}/lib/ant-contrib.jar" type="file" />
					<available file="${relengBuilderDir}/lib/ant-contrib.jar" type="file" />
					<available file="${thirdPartyJarsDir}/ant-contrib.jar" type="file" />
					<available file="/usr/share/java/ant-contrib.jar" type="file" />
				</or>
			</not>
		</condition>
		<antcall target="check.ant-contrib" />
		<!-- This will fail if ant-contrib.jar cannot be found. You can install Ant-Contrib via RPM, or download it here:
					http://downloads.sourceforge.net/ant-contrib/ant-contrib-1.0b2-bin.zip
			-->
		<taskdef resource="net/sf/antcontrib/antlib.xml">
			<classpath>
				<pathelement path="${classpath}" />
				<pathelement location="${relengCommonBuilderDir}/lib/ant-contrib.jar" />
				<pathelement location="${relengBuilderDir}/lib/ant-contrib.jar" />
				<pathelement location="${thirdPartyJarsDir}/ant-contrib.jar" />
				<pathelement location="/usr/share/java/ant-contrib.jar" />
			</classpath>
		</taskdef>

		<!-- check if workspace projects exist -->
		<for param="workspaceProject" list="${relengBaseBuilderDir}, ${relengCommonBuilderDir}, ${relengBuilderDir}" delimiter=", ">
			<sequential>
				<if>
					<not>
						<available file="@{workspaceProject}" type="dir" />
					</not>
					<then>
						<fail>Error!
	Workspace project @{workspaceProject} does not exist.
	Please check it out from HEAD or its latest stable tag.</fail>
					</then>
				</if>
			</sequential>
		</for>

		<if>
			<available file="${relengCommonBuilderDir}/tools/scripts/buildAllHelper.xml" type="file" />
			<then>
				<property name="helper" value="${relengCommonBuilderDir}/tools/scripts/buildAllHelper.xml" />
			</then>
			<else>
				<property name="helper" value="tools/scripts/buildAllHelper.xml" />
			</else>
		</if>

		<ant target="get.pde.build.svn" antfile="${helper}" />
		<ant target="get.ant4eclipse" antfile="${helper}" />

		<if>
			<not>
				<isset property="JAVA_HOME" />
			</not>
			<then>
				<property name="JAVA_HOME" value="${java.home}" />
			</then>
		</if>

		<antfetch return="commandlineArgsList" target="initCommandlineArgsList" antfile="${helper}" />

		<!-- generate -Dflags from known Ant variables: for complete list, see buildAllHelper.xml#initCommandlineArgsList -->
		<var name="args" value="" />
		<for param="arg" list="${commandlineArgsList}" delimiter=", 
				">
			<sequential>
				<if>
					<and>
						<not>
							<equals arg1="${@{arg}}" arg2="" />
						</not>
						<isset property="@{arg}" />
					</and>
					<then>
						<var name="args" value="${args} -D@{arg}=${@{arg}}" />
					</then>
				</if>
			</sequential>
		</for>

		<antfetch target="get.baseoswsarch" return="baseoswsarch" antfile="${helper}" />

		<!-- launch basebuilder to do the build -->
		<for param="launcherjar">
			<path>
				<fileset dir="${relengBaseBuilderDir}/plugins" includes="org.eclipse.equinox.launcher_*.jar" />
			</path>
			<sequential>

				<echo>Run ${JAVA_HOME}/bin/java
	  -enableassertions
	  -jar @{launcherjar}
	  -application org.eclipse.ant.core.antRunner
	  -f ${relengBuilderDir}/build.xml createBase
	  ${args} 
	  ${baseoswsarch} </echo>

				<java taskname="build" jvm="${JAVA_HOME}/bin/java" failonerror="true" maxmemory="400m" timeout="10800000" jar="@{launcherjar}" fork="true">
					<syspropertyset>
						<propertyref builtin="system" />
					</syspropertyset>
					<classpath>
						<fileset dir="${relengBaseBuilderDir}/plugins" includes="org.eclipse.equinox.launcher_*.jar" />
						<pathelement location="${relengBaseBuilderDir}/plugins" />
					</classpath>
					<jvmarg line="-enableassertions" />
					<arg line=" -application org.eclipse.ant.core.antRunner" />
					<arg line=" -f ${relengBuilderDir}/build.xml createBase" />
					<arg line=" ${args} ${baseoswsarch}" />
				</java>
			</sequential>
		</for>

	</target>

	<target name="createBase" depends="init">
		<setproxy proxyhost="${http.proxyHost}" proxyport="${http.proxyPort}" />
		<ant antfile="${relengBuilderDir}/scripts/createEclipseTarget.xml" target="run" inheritall="true" inheritrefs="true" />
	</target>

	<target name="cleanUp">
		<!--	<delete dir="${buildDir}/testresults/html" failonerror="false" />
		<delete>
			<fileset dir="${writableBuildRoot}">
				<include name="**/*" />
			</fileset>
		</delete> -->
	</target>

	<target name="createSnapshot" depends="init">
		<echo>Custom post build step CreateSnapshot</echo>
		<property environment="env" />

		<property name="BUILDTYPE" value="I" />
		<property name="buildFolder" value="${WORKSPACE}/build" />
		<property name="snapshotFolder" value="${buildFolder}/../snapshot/" />

		<echo>Build folder: ${buildFolder} </echo>
		<echo>Snapshot folder: ${snapshotFolder}</echo>
		<echo>Buildtype: ${BUILDTYPE}</echo>
		<echo>Job: ${env.JOB_NAME}</echo>

		<delete quiet="true" dir="${snapshotFolder}" />

		<copy flatten="true" toDir="${snapshotFolder}" failonerror="true" includeemptydirs="false">
			<fileset dir="${buildFolder}/athena" includes="*.zip,*.tar,*.tar.gz" />
			<fileset dir="${buildFolder}" includes="/athena/eclipse/label.properties" />
		</copy>

		<available file="${snapshotFolder}" property="containsFile" />
	</target>

	<target name="run" depends="init,build,createSnapshot,cleanUp">
	</target>

	<target name="check.ant-contrib" if="antContribJarUnavailable">
		<condition property="thirdPartyDownloadLicenseAcceptanceOK">
			<and>
				<isset property="thirdPartyDownloadLicenseAcceptance" />
				<or>
					<equals arg1="${thirdPartyDownloadLicenseAcceptance}" arg2="Y" />
					<equals arg1="${thirdPartyDownloadLicenseAcceptance}" arg2="I accept" />
					<equals arg1="${thirdPartyDownloadLicenseAcceptance}" arg2="&quot;I accept&quot;" />
				</or>
			</and>
		</condition>
		<antcall target="get.ant-contrib" />
		<available file="${relengBuilderDir}/lib/ant-contrib.jar" property="antContribJarAvailable" />
		<fail unless="antContribJarAvailable">Error! 

Ant-Contrib 1.0b2 is required. Download it from http://downloads.sourceforge.net/ant-contrib/ant-contrib-1.0b2-bin.zip,
then place it in one of the following 4 locations. You can also redefine these paths in your build.properties file:

$${relengCommonBuilderDir}/lib/ant-contrib.jar = ${relengCommonBuilderDir}/lib/ant-contrib.jar 
$${relengBuilderDir}/lib/ant-contrib.jar       = ${relengBuilderDir}/lib/ant-contrib.jar
$${thirdPartyJarsDir}/ant-contrib.jar          = ${thirdPartyJarsDir}/ant-contrib.jar
	or
/usr/share/java/ant-contrib.jar
			
Or, to download this automatically, see $${relengCommonBuilderDir}/build.properties#thirdPartyDownloadLicenseAcceptance.
</fail>
	</target>
</project>
