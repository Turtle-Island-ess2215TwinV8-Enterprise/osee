/*
* generated by Xtext
*/
grammar InternalOseeTypes;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package org.eclipse.osee.framework.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.common.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.eclipse.osee.framework.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.xtext.parsetree.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.common.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.osee.framework.services.OseeTypesGrammarAccess;

}

@parser::members {
 
 	private OseeTypesGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(OseeTypesGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleOseeTypeModel
entryRuleOseeTypeModel :
{ before(grammarAccess.getOseeTypeModelRule()); }
	 ruleOseeTypeModel
{ after(grammarAccess.getOseeTypeModelRule()); } 
	 EOF 
;

// Rule OseeTypeModel
ruleOseeTypeModel 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getOseeTypeModelAccess().getGroup()); }
(rule__OseeTypeModel__Group__0)
{ after(grammarAccess.getOseeTypeModelAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleImport
entryRuleImport :
{ before(grammarAccess.getImportRule()); }
	 ruleImport
{ after(grammarAccess.getImportRule()); } 
	 EOF 
;

// Rule Import
ruleImport 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getImportAccess().getGroup()); }
(rule__Import__Group__0)
{ after(grammarAccess.getImportAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNAME_REFERENCE
entryRuleNAME_REFERENCE :
{ before(grammarAccess.getNAME_REFERENCERule()); }
	 ruleNAME_REFERENCE
{ after(grammarAccess.getNAME_REFERENCERule()); } 
	 EOF 
;

// Rule NAME_REFERENCE
ruleNAME_REFERENCE 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getNAME_REFERENCEAccess().getSTRINGTerminalRuleCall()); }
	RULE_STRING
{ after(grammarAccess.getNAME_REFERENCEAccess().getSTRINGTerminalRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQUALIFIED_NAME
entryRuleQUALIFIED_NAME :
{ before(grammarAccess.getQUALIFIED_NAMERule()); }
	 ruleQUALIFIED_NAME
{ after(grammarAccess.getQUALIFIED_NAMERule()); } 
	 EOF 
;

// Rule QUALIFIED_NAME
ruleQUALIFIED_NAME 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getQUALIFIED_NAMEAccess().getGroup()); }
(rule__QUALIFIED_NAME__Group__0)
{ after(grammarAccess.getQUALIFIED_NAMEAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleOseeType
entryRuleOseeType :
{ before(grammarAccess.getOseeTypeRule()); }
	 ruleOseeType
{ after(grammarAccess.getOseeTypeRule()); } 
	 EOF 
;

// Rule OseeType
ruleOseeType 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getOseeTypeAccess().getAlternatives()); }
(rule__OseeType__Alternatives)
{ after(grammarAccess.getOseeTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleArtifactType
entryRuleArtifactType :
{ before(grammarAccess.getArtifactTypeRule()); }
	 ruleArtifactType
{ after(grammarAccess.getArtifactTypeRule()); } 
	 EOF 
;

// Rule ArtifactType
ruleArtifactType 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getArtifactTypeAccess().getGroup()); }
(rule__ArtifactType__Group__0)
{ after(grammarAccess.getArtifactTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAttributeTypeRef
entryRuleAttributeTypeRef :
{ before(grammarAccess.getAttributeTypeRefRule()); }
	 ruleAttributeTypeRef
{ after(grammarAccess.getAttributeTypeRefRule()); } 
	 EOF 
;

// Rule AttributeTypeRef
ruleAttributeTypeRef 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getAttributeTypeRefAccess().getGroup()); }
(rule__AttributeTypeRef__Group__0)
{ after(grammarAccess.getAttributeTypeRefAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAttributeType
entryRuleAttributeType :
{ before(grammarAccess.getAttributeTypeRule()); }
	 ruleAttributeType
{ after(grammarAccess.getAttributeTypeRule()); } 
	 EOF 
;

// Rule AttributeType
ruleAttributeType 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getAttributeTypeAccess().getGroup()); }
(rule__AttributeType__Group__0)
{ after(grammarAccess.getAttributeTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAttributeBaseType
entryRuleAttributeBaseType :
{ before(grammarAccess.getAttributeBaseTypeRule()); }
	 ruleAttributeBaseType
{ after(grammarAccess.getAttributeBaseTypeRule()); } 
	 EOF 
;

// Rule AttributeBaseType
ruleAttributeBaseType 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getAttributeBaseTypeAccess().getAlternatives()); }
(rule__AttributeBaseType__Alternatives)
{ after(grammarAccess.getAttributeBaseTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOseeEnumType
entryRuleOseeEnumType :
{ before(grammarAccess.getOseeEnumTypeRule()); }
	 ruleOseeEnumType
{ after(grammarAccess.getOseeEnumTypeRule()); } 
	 EOF 
;

// Rule OseeEnumType
ruleOseeEnumType 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getOseeEnumTypeAccess().getGroup()); }
(rule__OseeEnumType__Group__0)
{ after(grammarAccess.getOseeEnumTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOseeEnumEntry
entryRuleOseeEnumEntry :
{ before(grammarAccess.getOseeEnumEntryRule()); }
	 ruleOseeEnumEntry
{ after(grammarAccess.getOseeEnumEntryRule()); } 
	 EOF 
;

// Rule OseeEnumEntry
ruleOseeEnumEntry 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getOseeEnumEntryAccess().getGroup()); }
(rule__OseeEnumEntry__Group__0)
{ after(grammarAccess.getOseeEnumEntryAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOseeEnumOverride
entryRuleOseeEnumOverride :
{ before(grammarAccess.getOseeEnumOverrideRule()); }
	 ruleOseeEnumOverride
{ after(grammarAccess.getOseeEnumOverrideRule()); } 
	 EOF 
;

// Rule OseeEnumOverride
ruleOseeEnumOverride 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getOseeEnumOverrideAccess().getGroup()); }
(rule__OseeEnumOverride__Group__0)
{ after(grammarAccess.getOseeEnumOverrideAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOverrideOption
entryRuleOverrideOption :
{ before(grammarAccess.getOverrideOptionRule()); }
	 ruleOverrideOption
{ after(grammarAccess.getOverrideOptionRule()); } 
	 EOF 
;

// Rule OverrideOption
ruleOverrideOption 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getOverrideOptionAccess().getAlternatives()); }
(rule__OverrideOption__Alternatives)
{ after(grammarAccess.getOverrideOptionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAddEnum
entryRuleAddEnum :
{ before(grammarAccess.getAddEnumRule()); }
	 ruleAddEnum
{ after(grammarAccess.getAddEnumRule()); } 
	 EOF 
;

// Rule AddEnum
ruleAddEnum 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getAddEnumAccess().getGroup()); }
(rule__AddEnum__Group__0)
{ after(grammarAccess.getAddEnumAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRemoveEnum
entryRuleRemoveEnum :
{ before(grammarAccess.getRemoveEnumRule()); }
	 ruleRemoveEnum
{ after(grammarAccess.getRemoveEnumRule()); } 
	 EOF 
;

// Rule RemoveEnum
ruleRemoveEnum 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getRemoveEnumAccess().getGroup()); }
(rule__RemoveEnum__Group__0)
{ after(grammarAccess.getRemoveEnumAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRelationType
entryRuleRelationType :
{ before(grammarAccess.getRelationTypeRule()); }
	 ruleRelationType
{ after(grammarAccess.getRelationTypeRule()); } 
	 EOF 
;

// Rule RelationType
ruleRelationType 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getRelationTypeAccess().getGroup()); }
(rule__RelationType__Group__0)
{ after(grammarAccess.getRelationTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRelationOrderType
entryRuleRelationOrderType :
{ before(grammarAccess.getRelationOrderTypeRule()); }
	 ruleRelationOrderType
{ after(grammarAccess.getRelationOrderTypeRule()); } 
	 EOF 
;

// Rule RelationOrderType
ruleRelationOrderType 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getRelationOrderTypeAccess().getAlternatives()); }
(rule__RelationOrderType__Alternatives)
{ after(grammarAccess.getRelationOrderTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}




// Rule RelationMultiplicityEnum
ruleRelationMultiplicityEnum
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationMultiplicityEnumAccess().getAlternatives()); }
(rule__RelationMultiplicityEnum__Alternatives)
{ after(grammarAccess.getRelationMultiplicityEnumAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__OseeTypeModel__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOseeTypeModelAccess().getArtifactTypesAssignment_1_0()); }
(rule__OseeTypeModel__ArtifactTypesAssignment_1_0)
{ after(grammarAccess.getOseeTypeModelAccess().getArtifactTypesAssignment_1_0()); }
)

    |(
{ before(grammarAccess.getOseeTypeModelAccess().getRelationTypesAssignment_1_1()); }
(rule__OseeTypeModel__RelationTypesAssignment_1_1)
{ after(grammarAccess.getOseeTypeModelAccess().getRelationTypesAssignment_1_1()); }
)

    |(
{ before(grammarAccess.getOseeTypeModelAccess().getAttributeTypesAssignment_1_2()); }
(rule__OseeTypeModel__AttributeTypesAssignment_1_2)
{ after(grammarAccess.getOseeTypeModelAccess().getAttributeTypesAssignment_1_2()); }
)

    |(
{ before(grammarAccess.getOseeTypeModelAccess().getEnumTypesAssignment_1_3()); }
(rule__OseeTypeModel__EnumTypesAssignment_1_3)
{ after(grammarAccess.getOseeTypeModelAccess().getEnumTypesAssignment_1_3()); }
)

    |(
{ before(grammarAccess.getOseeTypeModelAccess().getEnumOverridesAssignment_1_4()); }
(rule__OseeTypeModel__EnumOverridesAssignment_1_4)
{ after(grammarAccess.getOseeTypeModelAccess().getEnumOverridesAssignment_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OseeType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOseeTypeAccess().getArtifactTypeParserRuleCall_0()); }
	ruleArtifactType
{ after(grammarAccess.getOseeTypeAccess().getArtifactTypeParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getOseeTypeAccess().getRelationTypeParserRuleCall_1()); }
	ruleRelationType
{ after(grammarAccess.getOseeTypeAccess().getRelationTypeParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getOseeTypeAccess().getAttributeTypeParserRuleCall_2()); }
	ruleAttributeType
{ after(grammarAccess.getOseeTypeAccess().getAttributeTypeParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getOseeTypeAccess().getOseeEnumTypeParserRuleCall_3()); }
	ruleOseeEnumType
{ after(grammarAccess.getOseeTypeAccess().getOseeEnumTypeParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeType__DataProviderAlternatives_8_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeTypeAccess().getDataProviderDefaultAttributeDataProviderKeyword_8_0_0()); }

	'DefaultAttributeDataProvider' 

{ after(grammarAccess.getAttributeTypeAccess().getDataProviderDefaultAttributeDataProviderKeyword_8_0_0()); }
)

    |(
{ before(grammarAccess.getAttributeTypeAccess().getDataProviderUriAttributeDataProviderKeyword_8_0_1()); }

	'UriAttributeDataProvider' 

{ after(grammarAccess.getAttributeTypeAccess().getDataProviderUriAttributeDataProviderKeyword_8_0_1()); }
)

    |(
{ before(grammarAccess.getAttributeTypeAccess().getDataProviderQUALIFIED_NAMEParserRuleCall_8_0_2()); }
	ruleQUALIFIED_NAME
{ after(grammarAccess.getAttributeTypeAccess().getDataProviderQUALIFIED_NAMEParserRuleCall_8_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeType__MaxAlternatives_12_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeTypeAccess().getMaxWHOLE_NUM_STRTerminalRuleCall_12_0_0()); }
	RULE_WHOLE_NUM_STR
{ after(grammarAccess.getAttributeTypeAccess().getMaxWHOLE_NUM_STRTerminalRuleCall_12_0_0()); }
)

    |(
{ before(grammarAccess.getAttributeTypeAccess().getMaxUnlimitedKeyword_12_0_1()); }

	'unlimited' 

{ after(grammarAccess.getAttributeTypeAccess().getMaxUnlimitedKeyword_12_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeType__TaggerIdAlternatives_13_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeTypeAccess().getTaggerIdDefaultAttributeTaggerProviderKeyword_13_1_0_0()); }

	'DefaultAttributeTaggerProvider' 

{ after(grammarAccess.getAttributeTypeAccess().getTaggerIdDefaultAttributeTaggerProviderKeyword_13_1_0_0()); }
)

    |(
{ before(grammarAccess.getAttributeTypeAccess().getTaggerIdQUALIFIED_NAMEParserRuleCall_13_1_0_1()); }
	ruleQUALIFIED_NAME
{ after(grammarAccess.getAttributeTypeAccess().getTaggerIdQUALIFIED_NAMEParserRuleCall_13_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeBaseType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeBaseTypeAccess().getBooleanAttributeKeyword_0()); }

	'BooleanAttribute' 

{ after(grammarAccess.getAttributeBaseTypeAccess().getBooleanAttributeKeyword_0()); }
)

    |(
{ before(grammarAccess.getAttributeBaseTypeAccess().getCompressedContentAttributeKeyword_1()); }

	'CompressedContentAttribute' 

{ after(grammarAccess.getAttributeBaseTypeAccess().getCompressedContentAttributeKeyword_1()); }
)

    |(
{ before(grammarAccess.getAttributeBaseTypeAccess().getDateAttributeKeyword_2()); }

	'DateAttribute' 

{ after(grammarAccess.getAttributeBaseTypeAccess().getDateAttributeKeyword_2()); }
)

    |(
{ before(grammarAccess.getAttributeBaseTypeAccess().getEnumeratedAttributeKeyword_3()); }

	'EnumeratedAttribute' 

{ after(grammarAccess.getAttributeBaseTypeAccess().getEnumeratedAttributeKeyword_3()); }
)

    |(
{ before(grammarAccess.getAttributeBaseTypeAccess().getFloatingPointAttributeKeyword_4()); }

	'FloatingPointAttribute' 

{ after(grammarAccess.getAttributeBaseTypeAccess().getFloatingPointAttributeKeyword_4()); }
)

    |(
{ before(grammarAccess.getAttributeBaseTypeAccess().getIntegerAttributeKeyword_5()); }

	'IntegerAttribute' 

{ after(grammarAccess.getAttributeBaseTypeAccess().getIntegerAttributeKeyword_5()); }
)

    |(
{ before(grammarAccess.getAttributeBaseTypeAccess().getJavaObjectAttributeKeyword_6()); }

	'JavaObjectAttribute' 

{ after(grammarAccess.getAttributeBaseTypeAccess().getJavaObjectAttributeKeyword_6()); }
)

    |(
{ before(grammarAccess.getAttributeBaseTypeAccess().getStringAttributeKeyword_7()); }

	'StringAttribute' 

{ after(grammarAccess.getAttributeBaseTypeAccess().getStringAttributeKeyword_7()); }
)

    |(
{ before(grammarAccess.getAttributeBaseTypeAccess().getWordAttributeKeyword_8()); }

	'WordAttribute' 

{ after(grammarAccess.getAttributeBaseTypeAccess().getWordAttributeKeyword_8()); }
)

    |(
{ before(grammarAccess.getAttributeBaseTypeAccess().getQUALIFIED_NAMEParserRuleCall_9()); }
	ruleQUALIFIED_NAME
{ after(grammarAccess.getAttributeBaseTypeAccess().getQUALIFIED_NAMEParserRuleCall_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OverrideOption__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOverrideOptionAccess().getAddEnumParserRuleCall_0()); }
	ruleAddEnum
{ after(grammarAccess.getOverrideOptionAccess().getAddEnumParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getOverrideOptionAccess().getRemoveEnumParserRuleCall_1()); }
	ruleRemoveEnum
{ after(grammarAccess.getOverrideOptionAccess().getRemoveEnumParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationOrderType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationOrderTypeAccess().getLexicographical_AscendingKeyword_0()); }

	'Lexicographical_Ascending' 

{ after(grammarAccess.getRelationOrderTypeAccess().getLexicographical_AscendingKeyword_0()); }
)

    |(
{ before(grammarAccess.getRelationOrderTypeAccess().getLexicographical_DescendingKeyword_1()); }

	'Lexicographical_Descending' 

{ after(grammarAccess.getRelationOrderTypeAccess().getLexicographical_DescendingKeyword_1()); }
)

    |(
{ before(grammarAccess.getRelationOrderTypeAccess().getUnorderedKeyword_2()); }

	'Unordered' 

{ after(grammarAccess.getRelationOrderTypeAccess().getUnorderedKeyword_2()); }
)

    |(
{ before(grammarAccess.getRelationOrderTypeAccess().getIDTerminalRuleCall_3()); }
	RULE_ID
{ after(grammarAccess.getRelationOrderTypeAccess().getIDTerminalRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationMultiplicityEnum__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationMultiplicityEnumAccess().getONE_TO_ONEEnumLiteralDeclaration_0()); }
(	'ONE_TO_ONE' 
)
{ after(grammarAccess.getRelationMultiplicityEnumAccess().getONE_TO_ONEEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getRelationMultiplicityEnumAccess().getONE_TO_MANYEnumLiteralDeclaration_1()); }
(	'ONE_TO_MANY' 
)
{ after(grammarAccess.getRelationMultiplicityEnumAccess().getONE_TO_MANYEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getRelationMultiplicityEnumAccess().getMANY_TO_ONEEnumLiteralDeclaration_2()); }
(	'MANY_TO_ONE' 
)
{ after(grammarAccess.getRelationMultiplicityEnumAccess().getMANY_TO_ONEEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getRelationMultiplicityEnumAccess().getMANY_TO_MANYEnumLiteralDeclaration_3()); }
(	'MANY_TO_MANY' 
)
{ after(grammarAccess.getRelationMultiplicityEnumAccess().getMANY_TO_MANYEnumLiteralDeclaration_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__OseeTypeModel__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOseeTypeModelAccess().getImportsAssignment_0()); }
(rule__OseeTypeModel__ImportsAssignment_0)*
{ after(grammarAccess.getOseeTypeModelAccess().getImportsAssignment_0()); }
)

	rule__OseeTypeModel__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__OseeTypeModel__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOseeTypeModelAccess().getAlternatives_1()); }
(rule__OseeTypeModel__Alternatives_1)*
{ after(grammarAccess.getOseeTypeModelAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Import__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportKeyword_0()); }

	'import' 

{ after(grammarAccess.getImportAccess().getImportKeyword_0()); }
)

	rule__Import__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportURIAssignment_1()); }
(rule__Import__ImportURIAssignment_1)
{ after(grammarAccess.getImportAccess().getImportURIAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QUALIFIED_NAME__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQUALIFIED_NAMEAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
{ after(grammarAccess.getQUALIFIED_NAMEAccess().getIDTerminalRuleCall_0()); }
)

	rule__QUALIFIED_NAME__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__QUALIFIED_NAME__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQUALIFIED_NAMEAccess().getGroup_1()); }
(rule__QUALIFIED_NAME__Group_1__0)*
{ after(grammarAccess.getQUALIFIED_NAMEAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QUALIFIED_NAME__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQUALIFIED_NAMEAccess().getFullStopKeyword_1_0()); }

	'.' 

{ after(grammarAccess.getQUALIFIED_NAMEAccess().getFullStopKeyword_1_0()); }
)

	rule__QUALIFIED_NAME__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__QUALIFIED_NAME__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQUALIFIED_NAMEAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
{ after(grammarAccess.getQUALIFIED_NAMEAccess().getIDTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ArtifactType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArtifactTypeAccess().getAbstractAssignment_0()); }
(rule__ArtifactType__AbstractAssignment_0)?
{ after(grammarAccess.getArtifactTypeAccess().getAbstractAssignment_0()); }
)

	rule__ArtifactType__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__ArtifactType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArtifactTypeAccess().getArtifactTypeKeyword_1()); }

	'artifactType' 

{ after(grammarAccess.getArtifactTypeAccess().getArtifactTypeKeyword_1()); }
)

	rule__ArtifactType__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__ArtifactType__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArtifactTypeAccess().getNameAssignment_2()); }
(rule__ArtifactType__NameAssignment_2)
{ after(grammarAccess.getArtifactTypeAccess().getNameAssignment_2()); }
)

	rule__ArtifactType__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__ArtifactType__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArtifactTypeAccess().getGroup_3()); }
(rule__ArtifactType__Group_3__0)?
{ after(grammarAccess.getArtifactTypeAccess().getGroup_3()); }
)

	rule__ArtifactType__Group__4
;
finally {
	restoreStackSize(stackSize);
}


rule__ArtifactType__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArtifactTypeAccess().getLeftCurlyBracketKeyword_4()); }

	'{' 

{ after(grammarAccess.getArtifactTypeAccess().getLeftCurlyBracketKeyword_4()); }
)

	rule__ArtifactType__Group__5
;
finally {
	restoreStackSize(stackSize);
}


rule__ArtifactType__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArtifactTypeAccess().getGuidKeyword_5()); }

	'guid' 

{ after(grammarAccess.getArtifactTypeAccess().getGuidKeyword_5()); }
)

	rule__ArtifactType__Group__6
;
finally {
	restoreStackSize(stackSize);
}


rule__ArtifactType__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArtifactTypeAccess().getTypeGuidAssignment_6()); }
(rule__ArtifactType__TypeGuidAssignment_6)
{ after(grammarAccess.getArtifactTypeAccess().getTypeGuidAssignment_6()); }
)

	rule__ArtifactType__Group__7
;
finally {
	restoreStackSize(stackSize);
}


rule__ArtifactType__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArtifactTypeAccess().getValidAttributeTypesAssignment_7()); }
(rule__ArtifactType__ValidAttributeTypesAssignment_7)*
{ after(grammarAccess.getArtifactTypeAccess().getValidAttributeTypesAssignment_7()); }
)

	rule__ArtifactType__Group__8
;
finally {
	restoreStackSize(stackSize);
}


rule__ArtifactType__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArtifactTypeAccess().getRightCurlyBracketKeyword_8()); }

	'}' 

{ after(grammarAccess.getArtifactTypeAccess().getRightCurlyBracketKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__ArtifactType__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArtifactTypeAccess().getExtendsKeyword_3_0()); }

	'extends' 

{ after(grammarAccess.getArtifactTypeAccess().getExtendsKeyword_3_0()); }
)

	rule__ArtifactType__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}


rule__ArtifactType__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArtifactTypeAccess().getSuperArtifactTypesAssignment_3_1()); }
(rule__ArtifactType__SuperArtifactTypesAssignment_3_1)
{ after(grammarAccess.getArtifactTypeAccess().getSuperArtifactTypesAssignment_3_1()); }
)

	rule__ArtifactType__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}


rule__ArtifactType__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArtifactTypeAccess().getGroup_3_2()); }
(rule__ArtifactType__Group_3_2__0)*
{ after(grammarAccess.getArtifactTypeAccess().getGroup_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ArtifactType__Group_3_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArtifactTypeAccess().getCommaKeyword_3_2_0()); }

	',' 

{ after(grammarAccess.getArtifactTypeAccess().getCommaKeyword_3_2_0()); }
)

	rule__ArtifactType__Group_3_2__1
;
finally {
	restoreStackSize(stackSize);
}


rule__ArtifactType__Group_3_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArtifactTypeAccess().getSuperArtifactTypesAssignment_3_2_1()); }
(rule__ArtifactType__SuperArtifactTypesAssignment_3_2_1)
{ after(grammarAccess.getArtifactTypeAccess().getSuperArtifactTypesAssignment_3_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AttributeTypeRef__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeTypeRefAccess().getAttributeKeyword_0()); }

	'attribute' 

{ after(grammarAccess.getAttributeTypeRefAccess().getAttributeKeyword_0()); }
)

	rule__AttributeTypeRef__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeTypeRef__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeTypeRefAccess().getValidAttributeTypeAssignment_1()); }
(rule__AttributeTypeRef__ValidAttributeTypeAssignment_1)
{ after(grammarAccess.getAttributeTypeRefAccess().getValidAttributeTypeAssignment_1()); }
)

	rule__AttributeTypeRef__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeTypeRef__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeTypeRefAccess().getGroup_2()); }
(rule__AttributeTypeRef__Group_2__0)?
{ after(grammarAccess.getAttributeTypeRefAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AttributeTypeRef__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeTypeRefAccess().getBranchGuidKeyword_2_0()); }

	'branchGuid' 

{ after(grammarAccess.getAttributeTypeRefAccess().getBranchGuidKeyword_2_0()); }
)

	rule__AttributeTypeRef__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeTypeRef__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeTypeRefAccess().getBranchGuidAssignment_2_1()); }
(rule__AttributeTypeRef__BranchGuidAssignment_2_1)
{ after(grammarAccess.getAttributeTypeRefAccess().getBranchGuidAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AttributeType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeTypeAccess().getAttributeTypeKeyword_0()); }

	'attributeType' 

{ after(grammarAccess.getAttributeTypeAccess().getAttributeTypeKeyword_0()); }
)

	rule__AttributeType__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeTypeAccess().getNameAssignment_1()); }
(rule__AttributeType__NameAssignment_1)
{ after(grammarAccess.getAttributeTypeAccess().getNameAssignment_1()); }
)

	rule__AttributeType__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeType__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeTypeAccess().getGroup_2()); }
(rule__AttributeType__Group_2__0)
{ after(grammarAccess.getAttributeTypeAccess().getGroup_2()); }
)

	rule__AttributeType__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeType__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeTypeAccess().getGroup_3()); }
(rule__AttributeType__Group_3__0)?
{ after(grammarAccess.getAttributeTypeAccess().getGroup_3()); }
)

	rule__AttributeType__Group__4
;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeType__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeTypeAccess().getLeftCurlyBracketKeyword_4()); }

	'{' 

{ after(grammarAccess.getAttributeTypeAccess().getLeftCurlyBracketKeyword_4()); }
)

	rule__AttributeType__Group__5
;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeType__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeTypeAccess().getGuidKeyword_5()); }

	'guid' 

{ after(grammarAccess.getAttributeTypeAccess().getGuidKeyword_5()); }
)

	rule__AttributeType__Group__6
;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeType__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeTypeAccess().getTypeGuidAssignment_6()); }
(rule__AttributeType__TypeGuidAssignment_6)
{ after(grammarAccess.getAttributeTypeAccess().getTypeGuidAssignment_6()); }
)

	rule__AttributeType__Group__7
;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeType__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeTypeAccess().getDataProviderKeyword_7()); }

	'dataProvider' 

{ after(grammarAccess.getAttributeTypeAccess().getDataProviderKeyword_7()); }
)

	rule__AttributeType__Group__8
;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeType__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeTypeAccess().getDataProviderAssignment_8()); }
(rule__AttributeType__DataProviderAssignment_8)
{ after(grammarAccess.getAttributeTypeAccess().getDataProviderAssignment_8()); }
)

	rule__AttributeType__Group__9
;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeType__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeTypeAccess().getMinKeyword_9()); }

	'min' 

{ after(grammarAccess.getAttributeTypeAccess().getMinKeyword_9()); }
)

	rule__AttributeType__Group__10
;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeType__Group__10
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeTypeAccess().getMinAssignment_10()); }
(rule__AttributeType__MinAssignment_10)
{ after(grammarAccess.getAttributeTypeAccess().getMinAssignment_10()); }
)

	rule__AttributeType__Group__11
;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeType__Group__11
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeTypeAccess().getMaxKeyword_11()); }

	'max' 

{ after(grammarAccess.getAttributeTypeAccess().getMaxKeyword_11()); }
)

	rule__AttributeType__Group__12
;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeType__Group__12
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeTypeAccess().getMaxAssignment_12()); }
(rule__AttributeType__MaxAssignment_12)
{ after(grammarAccess.getAttributeTypeAccess().getMaxAssignment_12()); }
)

	rule__AttributeType__Group__13
;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeType__Group__13
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeTypeAccess().getGroup_13()); }
(rule__AttributeType__Group_13__0)?
{ after(grammarAccess.getAttributeTypeAccess().getGroup_13()); }
)

	rule__AttributeType__Group__14
;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeType__Group__14
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeTypeAccess().getGroup_14()); }
(rule__AttributeType__Group_14__0)?
{ after(grammarAccess.getAttributeTypeAccess().getGroup_14()); }
)

	rule__AttributeType__Group__15
;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeType__Group__15
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeTypeAccess().getGroup_15()); }
(rule__AttributeType__Group_15__0)?
{ after(grammarAccess.getAttributeTypeAccess().getGroup_15()); }
)

	rule__AttributeType__Group__16
;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeType__Group__16
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeTypeAccess().getGroup_16()); }
(rule__AttributeType__Group_16__0)?
{ after(grammarAccess.getAttributeTypeAccess().getGroup_16()); }
)

	rule__AttributeType__Group__17
;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeType__Group__17
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeTypeAccess().getGroup_17()); }
(rule__AttributeType__Group_17__0)?
{ after(grammarAccess.getAttributeTypeAccess().getGroup_17()); }
)

	rule__AttributeType__Group__18
;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeType__Group__18
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeTypeAccess().getRightCurlyBracketKeyword_18()); }

	'}' 

{ after(grammarAccess.getAttributeTypeAccess().getRightCurlyBracketKeyword_18()); }
)

;
finally {
	restoreStackSize(stackSize);
}








































rule__AttributeType__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeTypeAccess().getExtendsKeyword_2_0()); }

	'extends' 

{ after(grammarAccess.getAttributeTypeAccess().getExtendsKeyword_2_0()); }
)

	rule__AttributeType__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeType__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeTypeAccess().getBaseAttributeTypeAssignment_2_1()); }
(rule__AttributeType__BaseAttributeTypeAssignment_2_1)
{ after(grammarAccess.getAttributeTypeAccess().getBaseAttributeTypeAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AttributeType__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeTypeAccess().getOverridesKeyword_3_0()); }

	'overrides' 

{ after(grammarAccess.getAttributeTypeAccess().getOverridesKeyword_3_0()); }
)

	rule__AttributeType__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeType__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeTypeAccess().getOverrideAssignment_3_1()); }
(rule__AttributeType__OverrideAssignment_3_1)
{ after(grammarAccess.getAttributeTypeAccess().getOverrideAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AttributeType__Group_13__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeTypeAccess().getTaggerIdKeyword_13_0()); }

	'taggerId' 

{ after(grammarAccess.getAttributeTypeAccess().getTaggerIdKeyword_13_0()); }
)

	rule__AttributeType__Group_13__1
;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeType__Group_13__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeTypeAccess().getTaggerIdAssignment_13_1()); }
(rule__AttributeType__TaggerIdAssignment_13_1)
{ after(grammarAccess.getAttributeTypeAccess().getTaggerIdAssignment_13_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AttributeType__Group_14__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeTypeAccess().getEnumTypeKeyword_14_0()); }

	'enumType' 

{ after(grammarAccess.getAttributeTypeAccess().getEnumTypeKeyword_14_0()); }
)

	rule__AttributeType__Group_14__1
;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeType__Group_14__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeTypeAccess().getEnumTypeAssignment_14_1()); }
(rule__AttributeType__EnumTypeAssignment_14_1)
{ after(grammarAccess.getAttributeTypeAccess().getEnumTypeAssignment_14_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AttributeType__Group_15__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeTypeAccess().getDescriptionKeyword_15_0()); }

	'description' 

{ after(grammarAccess.getAttributeTypeAccess().getDescriptionKeyword_15_0()); }
)

	rule__AttributeType__Group_15__1
;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeType__Group_15__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeTypeAccess().getDescriptionAssignment_15_1()); }
(rule__AttributeType__DescriptionAssignment_15_1)
{ after(grammarAccess.getAttributeTypeAccess().getDescriptionAssignment_15_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AttributeType__Group_16__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeTypeAccess().getDefaultValueKeyword_16_0()); }

	'defaultValue' 

{ after(grammarAccess.getAttributeTypeAccess().getDefaultValueKeyword_16_0()); }
)

	rule__AttributeType__Group_16__1
;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeType__Group_16__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeTypeAccess().getDefaultValueAssignment_16_1()); }
(rule__AttributeType__DefaultValueAssignment_16_1)
{ after(grammarAccess.getAttributeTypeAccess().getDefaultValueAssignment_16_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AttributeType__Group_17__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeTypeAccess().getFileExtensionKeyword_17_0()); }

	'fileExtension' 

{ after(grammarAccess.getAttributeTypeAccess().getFileExtensionKeyword_17_0()); }
)

	rule__AttributeType__Group_17__1
;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeType__Group_17__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeTypeAccess().getFileExtensionAssignment_17_1()); }
(rule__AttributeType__FileExtensionAssignment_17_1)
{ after(grammarAccess.getAttributeTypeAccess().getFileExtensionAssignment_17_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OseeEnumType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOseeEnumTypeAccess().getOseeEnumTypeKeyword_0()); }

	'oseeEnumType' 

{ after(grammarAccess.getOseeEnumTypeAccess().getOseeEnumTypeKeyword_0()); }
)

	rule__OseeEnumType__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__OseeEnumType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOseeEnumTypeAccess().getNameAssignment_1()); }
(rule__OseeEnumType__NameAssignment_1)
{ after(grammarAccess.getOseeEnumTypeAccess().getNameAssignment_1()); }
)

	rule__OseeEnumType__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__OseeEnumType__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOseeEnumTypeAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getOseeEnumTypeAccess().getLeftCurlyBracketKeyword_2()); }
)

	rule__OseeEnumType__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__OseeEnumType__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOseeEnumTypeAccess().getGuidKeyword_3()); }

	'guid' 

{ after(grammarAccess.getOseeEnumTypeAccess().getGuidKeyword_3()); }
)

	rule__OseeEnumType__Group__4
;
finally {
	restoreStackSize(stackSize);
}


rule__OseeEnumType__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOseeEnumTypeAccess().getTypeGuidAssignment_4()); }
(rule__OseeEnumType__TypeGuidAssignment_4)
{ after(grammarAccess.getOseeEnumTypeAccess().getTypeGuidAssignment_4()); }
)

	rule__OseeEnumType__Group__5
;
finally {
	restoreStackSize(stackSize);
}


rule__OseeEnumType__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOseeEnumTypeAccess().getEnumEntriesAssignment_5()); }
(rule__OseeEnumType__EnumEntriesAssignment_5)*
{ after(grammarAccess.getOseeEnumTypeAccess().getEnumEntriesAssignment_5()); }
)

	rule__OseeEnumType__Group__6
;
finally {
	restoreStackSize(stackSize);
}


rule__OseeEnumType__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOseeEnumTypeAccess().getRightCurlyBracketKeyword_6()); }

	'}' 

{ after(grammarAccess.getOseeEnumTypeAccess().getRightCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__OseeEnumEntry__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOseeEnumEntryAccess().getEntryKeyword_0()); }

	'entry' 

{ after(grammarAccess.getOseeEnumEntryAccess().getEntryKeyword_0()); }
)

	rule__OseeEnumEntry__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__OseeEnumEntry__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOseeEnumEntryAccess().getNameAssignment_1()); }
(rule__OseeEnumEntry__NameAssignment_1)
{ after(grammarAccess.getOseeEnumEntryAccess().getNameAssignment_1()); }
)

	rule__OseeEnumEntry__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__OseeEnumEntry__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOseeEnumEntryAccess().getOrdinalAssignment_2()); }
(rule__OseeEnumEntry__OrdinalAssignment_2)?
{ after(grammarAccess.getOseeEnumEntryAccess().getOrdinalAssignment_2()); }
)

	rule__OseeEnumEntry__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__OseeEnumEntry__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOseeEnumEntryAccess().getGroup_3()); }
(rule__OseeEnumEntry__Group_3__0)?
{ after(grammarAccess.getOseeEnumEntryAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__OseeEnumEntry__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOseeEnumEntryAccess().getEntryGuidKeyword_3_0()); }

	'entryGuid' 

{ after(grammarAccess.getOseeEnumEntryAccess().getEntryGuidKeyword_3_0()); }
)

	rule__OseeEnumEntry__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}


rule__OseeEnumEntry__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOseeEnumEntryAccess().getEntryGuidAssignment_3_1()); }
(rule__OseeEnumEntry__EntryGuidAssignment_3_1)
{ after(grammarAccess.getOseeEnumEntryAccess().getEntryGuidAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OseeEnumOverride__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOseeEnumOverrideAccess().getOverridesEnumKeyword_0()); }

	'overrides enum' 

{ after(grammarAccess.getOseeEnumOverrideAccess().getOverridesEnumKeyword_0()); }
)

	rule__OseeEnumOverride__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__OseeEnumOverride__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOseeEnumOverrideAccess().getOverridenEnumTypeAssignment_1()); }
(rule__OseeEnumOverride__OverridenEnumTypeAssignment_1)
{ after(grammarAccess.getOseeEnumOverrideAccess().getOverridenEnumTypeAssignment_1()); }
)

	rule__OseeEnumOverride__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__OseeEnumOverride__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOseeEnumOverrideAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getOseeEnumOverrideAccess().getLeftCurlyBracketKeyword_2()); }
)

	rule__OseeEnumOverride__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__OseeEnumOverride__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOseeEnumOverrideAccess().getInheritAllAssignment_3()); }
(rule__OseeEnumOverride__InheritAllAssignment_3)?
{ after(grammarAccess.getOseeEnumOverrideAccess().getInheritAllAssignment_3()); }
)

	rule__OseeEnumOverride__Group__4
;
finally {
	restoreStackSize(stackSize);
}


rule__OseeEnumOverride__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOseeEnumOverrideAccess().getOverrideOptionsAssignment_4()); }
(rule__OseeEnumOverride__OverrideOptionsAssignment_4)*
{ after(grammarAccess.getOseeEnumOverrideAccess().getOverrideOptionsAssignment_4()); }
)

	rule__OseeEnumOverride__Group__5
;
finally {
	restoreStackSize(stackSize);
}


rule__OseeEnumOverride__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOseeEnumOverrideAccess().getRightCurlyBracketKeyword_5()); }

	'}' 

{ after(grammarAccess.getOseeEnumOverrideAccess().getRightCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__AddEnum__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddEnumAccess().getAddKeyword_0()); }

	'add' 

{ after(grammarAccess.getAddEnumAccess().getAddKeyword_0()); }
)

	rule__AddEnum__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__AddEnum__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddEnumAccess().getEnumEntryAssignment_1()); }
(rule__AddEnum__EnumEntryAssignment_1)
{ after(grammarAccess.getAddEnumAccess().getEnumEntryAssignment_1()); }
)

	rule__AddEnum__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__AddEnum__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddEnumAccess().getOrdinalAssignment_2()); }
(rule__AddEnum__OrdinalAssignment_2)?
{ after(grammarAccess.getAddEnumAccess().getOrdinalAssignment_2()); }
)

	rule__AddEnum__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__AddEnum__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddEnumAccess().getGroup_3()); }
(rule__AddEnum__Group_3__0)?
{ after(grammarAccess.getAddEnumAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__AddEnum__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddEnumAccess().getEntryGuidKeyword_3_0()); }

	'entryGuid' 

{ after(grammarAccess.getAddEnumAccess().getEntryGuidKeyword_3_0()); }
)

	rule__AddEnum__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}


rule__AddEnum__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddEnumAccess().getEntryGuidAssignment_3_1()); }
(rule__AddEnum__EntryGuidAssignment_3_1)
{ after(grammarAccess.getAddEnumAccess().getEntryGuidAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RemoveEnum__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRemoveEnumAccess().getRemoveKeyword_0()); }

	'remove' 

{ after(grammarAccess.getRemoveEnumAccess().getRemoveKeyword_0()); }
)

	rule__RemoveEnum__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__RemoveEnum__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRemoveEnumAccess().getEnumEntryAssignment_1()); }
(rule__RemoveEnum__EnumEntryAssignment_1)
{ after(grammarAccess.getRemoveEnumAccess().getEnumEntryAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RelationType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationTypeAccess().getRelationTypeKeyword_0()); }

	'relationType' 

{ after(grammarAccess.getRelationTypeAccess().getRelationTypeKeyword_0()); }
)

	rule__RelationType__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationTypeAccess().getNameAssignment_1()); }
(rule__RelationType__NameAssignment_1)
{ after(grammarAccess.getRelationTypeAccess().getNameAssignment_1()); }
)

	rule__RelationType__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationType__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationTypeAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getRelationTypeAccess().getLeftCurlyBracketKeyword_2()); }
)

	rule__RelationType__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationType__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationTypeAccess().getGuidKeyword_3()); }

	'guid' 

{ after(grammarAccess.getRelationTypeAccess().getGuidKeyword_3()); }
)

	rule__RelationType__Group__4
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationType__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationTypeAccess().getTypeGuidAssignment_4()); }
(rule__RelationType__TypeGuidAssignment_4)
{ after(grammarAccess.getRelationTypeAccess().getTypeGuidAssignment_4()); }
)

	rule__RelationType__Group__5
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationType__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationTypeAccess().getSideANameKeyword_5()); }

	'sideAName' 

{ after(grammarAccess.getRelationTypeAccess().getSideANameKeyword_5()); }
)

	rule__RelationType__Group__6
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationType__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationTypeAccess().getSideANameAssignment_6()); }
(rule__RelationType__SideANameAssignment_6)
{ after(grammarAccess.getRelationTypeAccess().getSideANameAssignment_6()); }
)

	rule__RelationType__Group__7
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationType__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationTypeAccess().getSideAArtifactTypeKeyword_7()); }

	'sideAArtifactType' 

{ after(grammarAccess.getRelationTypeAccess().getSideAArtifactTypeKeyword_7()); }
)

	rule__RelationType__Group__8
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationType__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationTypeAccess().getSideAArtifactTypeAssignment_8()); }
(rule__RelationType__SideAArtifactTypeAssignment_8)
{ after(grammarAccess.getRelationTypeAccess().getSideAArtifactTypeAssignment_8()); }
)

	rule__RelationType__Group__9
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationType__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationTypeAccess().getSideBNameKeyword_9()); }

	'sideBName' 

{ after(grammarAccess.getRelationTypeAccess().getSideBNameKeyword_9()); }
)

	rule__RelationType__Group__10
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationType__Group__10
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationTypeAccess().getSideBNameAssignment_10()); }
(rule__RelationType__SideBNameAssignment_10)
{ after(grammarAccess.getRelationTypeAccess().getSideBNameAssignment_10()); }
)

	rule__RelationType__Group__11
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationType__Group__11
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationTypeAccess().getSideBArtifactTypeKeyword_11()); }

	'sideBArtifactType' 

{ after(grammarAccess.getRelationTypeAccess().getSideBArtifactTypeKeyword_11()); }
)

	rule__RelationType__Group__12
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationType__Group__12
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationTypeAccess().getSideBArtifactTypeAssignment_12()); }
(rule__RelationType__SideBArtifactTypeAssignment_12)
{ after(grammarAccess.getRelationTypeAccess().getSideBArtifactTypeAssignment_12()); }
)

	rule__RelationType__Group__13
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationType__Group__13
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationTypeAccess().getDefaultOrderTypeKeyword_13()); }

	'defaultOrderType' 

{ after(grammarAccess.getRelationTypeAccess().getDefaultOrderTypeKeyword_13()); }
)

	rule__RelationType__Group__14
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationType__Group__14
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationTypeAccess().getDefaultOrderTypeAssignment_14()); }
(rule__RelationType__DefaultOrderTypeAssignment_14)
{ after(grammarAccess.getRelationTypeAccess().getDefaultOrderTypeAssignment_14()); }
)

	rule__RelationType__Group__15
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationType__Group__15
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationTypeAccess().getMultiplicityKeyword_15()); }

	'multiplicity' 

{ after(grammarAccess.getRelationTypeAccess().getMultiplicityKeyword_15()); }
)

	rule__RelationType__Group__16
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationType__Group__16
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationTypeAccess().getMultiplicityAssignment_16()); }
(rule__RelationType__MultiplicityAssignment_16)
{ after(grammarAccess.getRelationTypeAccess().getMultiplicityAssignment_16()); }
)

	rule__RelationType__Group__17
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationType__Group__17
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationTypeAccess().getRightCurlyBracketKeyword_17()); }

	'}' 

{ after(grammarAccess.getRelationTypeAccess().getRightCurlyBracketKeyword_17()); }
)

;
finally {
	restoreStackSize(stackSize);
}






































rule__OseeTypeModel__ImportsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOseeTypeModelAccess().getImportsImportParserRuleCall_0_0()); }
	ruleImport{ after(grammarAccess.getOseeTypeModelAccess().getImportsImportParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OseeTypeModel__ArtifactTypesAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOseeTypeModelAccess().getArtifactTypesArtifactTypeParserRuleCall_1_0_0()); }
	ruleArtifactType{ after(grammarAccess.getOseeTypeModelAccess().getArtifactTypesArtifactTypeParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OseeTypeModel__RelationTypesAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOseeTypeModelAccess().getRelationTypesRelationTypeParserRuleCall_1_1_0()); }
	ruleRelationType{ after(grammarAccess.getOseeTypeModelAccess().getRelationTypesRelationTypeParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OseeTypeModel__AttributeTypesAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOseeTypeModelAccess().getAttributeTypesAttributeTypeParserRuleCall_1_2_0()); }
	ruleAttributeType{ after(grammarAccess.getOseeTypeModelAccess().getAttributeTypesAttributeTypeParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OseeTypeModel__EnumTypesAssignment_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOseeTypeModelAccess().getEnumTypesOseeEnumTypeParserRuleCall_1_3_0()); }
	ruleOseeEnumType{ after(grammarAccess.getOseeTypeModelAccess().getEnumTypesOseeEnumTypeParserRuleCall_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OseeTypeModel__EnumOverridesAssignment_1_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOseeTypeModelAccess().getEnumOverridesOseeEnumOverrideParserRuleCall_1_4_0()); }
	ruleOseeEnumOverride{ after(grammarAccess.getOseeTypeModelAccess().getEnumOverridesOseeEnumOverrideParserRuleCall_1_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Import__ImportURIAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportURISTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getImportAccess().getImportURISTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArtifactType__AbstractAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArtifactTypeAccess().getAbstractAbstractKeyword_0_0()); }
(
{ before(grammarAccess.getArtifactTypeAccess().getAbstractAbstractKeyword_0_0()); }

	'abstract' 

{ after(grammarAccess.getArtifactTypeAccess().getAbstractAbstractKeyword_0_0()); }
)

{ after(grammarAccess.getArtifactTypeAccess().getAbstractAbstractKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArtifactType__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArtifactTypeAccess().getNameNAME_REFERENCEParserRuleCall_2_0()); }
	ruleNAME_REFERENCE{ after(grammarAccess.getArtifactTypeAccess().getNameNAME_REFERENCEParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArtifactType__SuperArtifactTypesAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArtifactTypeAccess().getSuperArtifactTypesArtifactTypeCrossReference_3_1_0()); }
(
{ before(grammarAccess.getArtifactTypeAccess().getSuperArtifactTypesArtifactTypeNAME_REFERENCEParserRuleCall_3_1_0_1()); }
	ruleNAME_REFERENCE{ after(grammarAccess.getArtifactTypeAccess().getSuperArtifactTypesArtifactTypeNAME_REFERENCEParserRuleCall_3_1_0_1()); }
)
{ after(grammarAccess.getArtifactTypeAccess().getSuperArtifactTypesArtifactTypeCrossReference_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArtifactType__SuperArtifactTypesAssignment_3_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArtifactTypeAccess().getSuperArtifactTypesArtifactTypeCrossReference_3_2_1_0()); }
(
{ before(grammarAccess.getArtifactTypeAccess().getSuperArtifactTypesArtifactTypeNAME_REFERENCEParserRuleCall_3_2_1_0_1()); }
	ruleNAME_REFERENCE{ after(grammarAccess.getArtifactTypeAccess().getSuperArtifactTypesArtifactTypeNAME_REFERENCEParserRuleCall_3_2_1_0_1()); }
)
{ after(grammarAccess.getArtifactTypeAccess().getSuperArtifactTypesArtifactTypeCrossReference_3_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArtifactType__TypeGuidAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArtifactTypeAccess().getTypeGuidSTRINGTerminalRuleCall_6_0()); }
	RULE_STRING{ after(grammarAccess.getArtifactTypeAccess().getTypeGuidSTRINGTerminalRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArtifactType__ValidAttributeTypesAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArtifactTypeAccess().getValidAttributeTypesAttributeTypeRefParserRuleCall_7_0()); }
	ruleAttributeTypeRef{ after(grammarAccess.getArtifactTypeAccess().getValidAttributeTypesAttributeTypeRefParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeTypeRef__ValidAttributeTypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeTypeRefAccess().getValidAttributeTypeAttributeTypeCrossReference_1_0()); }
(
{ before(grammarAccess.getAttributeTypeRefAccess().getValidAttributeTypeAttributeTypeNAME_REFERENCEParserRuleCall_1_0_1()); }
	ruleNAME_REFERENCE{ after(grammarAccess.getAttributeTypeRefAccess().getValidAttributeTypeAttributeTypeNAME_REFERENCEParserRuleCall_1_0_1()); }
)
{ after(grammarAccess.getAttributeTypeRefAccess().getValidAttributeTypeAttributeTypeCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeTypeRef__BranchGuidAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeTypeRefAccess().getBranchGuidSTRINGTerminalRuleCall_2_1_0()); }
	RULE_STRING{ after(grammarAccess.getAttributeTypeRefAccess().getBranchGuidSTRINGTerminalRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeType__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeTypeAccess().getNameNAME_REFERENCEParserRuleCall_1_0()); }
	ruleNAME_REFERENCE{ after(grammarAccess.getAttributeTypeAccess().getNameNAME_REFERENCEParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeType__BaseAttributeTypeAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeTypeAccess().getBaseAttributeTypeAttributeBaseTypeParserRuleCall_2_1_0()); }
	ruleAttributeBaseType{ after(grammarAccess.getAttributeTypeAccess().getBaseAttributeTypeAttributeBaseTypeParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeType__OverrideAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeTypeAccess().getOverrideAttributeTypeCrossReference_3_1_0()); }
(
{ before(grammarAccess.getAttributeTypeAccess().getOverrideAttributeTypeNAME_REFERENCEParserRuleCall_3_1_0_1()); }
	ruleNAME_REFERENCE{ after(grammarAccess.getAttributeTypeAccess().getOverrideAttributeTypeNAME_REFERENCEParserRuleCall_3_1_0_1()); }
)
{ after(grammarAccess.getAttributeTypeAccess().getOverrideAttributeTypeCrossReference_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeType__TypeGuidAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeTypeAccess().getTypeGuidSTRINGTerminalRuleCall_6_0()); }
	RULE_STRING{ after(grammarAccess.getAttributeTypeAccess().getTypeGuidSTRINGTerminalRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeType__DataProviderAssignment_8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeTypeAccess().getDataProviderAlternatives_8_0()); }
(rule__AttributeType__DataProviderAlternatives_8_0)
{ after(grammarAccess.getAttributeTypeAccess().getDataProviderAlternatives_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeType__MinAssignment_10
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeTypeAccess().getMinWHOLE_NUM_STRTerminalRuleCall_10_0()); }
	RULE_WHOLE_NUM_STR{ after(grammarAccess.getAttributeTypeAccess().getMinWHOLE_NUM_STRTerminalRuleCall_10_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeType__MaxAssignment_12
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeTypeAccess().getMaxAlternatives_12_0()); }
(rule__AttributeType__MaxAlternatives_12_0)
{ after(grammarAccess.getAttributeTypeAccess().getMaxAlternatives_12_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeType__TaggerIdAssignment_13_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeTypeAccess().getTaggerIdAlternatives_13_1_0()); }
(rule__AttributeType__TaggerIdAlternatives_13_1_0)
{ after(grammarAccess.getAttributeTypeAccess().getTaggerIdAlternatives_13_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeType__EnumTypeAssignment_14_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeTypeAccess().getEnumTypeOseeEnumTypeCrossReference_14_1_0()); }
(
{ before(grammarAccess.getAttributeTypeAccess().getEnumTypeOseeEnumTypeNAME_REFERENCEParserRuleCall_14_1_0_1()); }
	ruleNAME_REFERENCE{ after(grammarAccess.getAttributeTypeAccess().getEnumTypeOseeEnumTypeNAME_REFERENCEParserRuleCall_14_1_0_1()); }
)
{ after(grammarAccess.getAttributeTypeAccess().getEnumTypeOseeEnumTypeCrossReference_14_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeType__DescriptionAssignment_15_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeTypeAccess().getDescriptionSTRINGTerminalRuleCall_15_1_0()); }
	RULE_STRING{ after(grammarAccess.getAttributeTypeAccess().getDescriptionSTRINGTerminalRuleCall_15_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeType__DefaultValueAssignment_16_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeTypeAccess().getDefaultValueSTRINGTerminalRuleCall_16_1_0()); }
	RULE_STRING{ after(grammarAccess.getAttributeTypeAccess().getDefaultValueSTRINGTerminalRuleCall_16_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeType__FileExtensionAssignment_17_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeTypeAccess().getFileExtensionSTRINGTerminalRuleCall_17_1_0()); }
	RULE_STRING{ after(grammarAccess.getAttributeTypeAccess().getFileExtensionSTRINGTerminalRuleCall_17_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OseeEnumType__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOseeEnumTypeAccess().getNameNAME_REFERENCEParserRuleCall_1_0()); }
	ruleNAME_REFERENCE{ after(grammarAccess.getOseeEnumTypeAccess().getNameNAME_REFERENCEParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OseeEnumType__TypeGuidAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOseeEnumTypeAccess().getTypeGuidSTRINGTerminalRuleCall_4_0()); }
	RULE_STRING{ after(grammarAccess.getOseeEnumTypeAccess().getTypeGuidSTRINGTerminalRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OseeEnumType__EnumEntriesAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOseeEnumTypeAccess().getEnumEntriesOseeEnumEntryParserRuleCall_5_0()); }
	ruleOseeEnumEntry{ after(grammarAccess.getOseeEnumTypeAccess().getEnumEntriesOseeEnumEntryParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OseeEnumEntry__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOseeEnumEntryAccess().getNameNAME_REFERENCEParserRuleCall_1_0()); }
	ruleNAME_REFERENCE{ after(grammarAccess.getOseeEnumEntryAccess().getNameNAME_REFERENCEParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OseeEnumEntry__OrdinalAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOseeEnumEntryAccess().getOrdinalWHOLE_NUM_STRTerminalRuleCall_2_0()); }
	RULE_WHOLE_NUM_STR{ after(grammarAccess.getOseeEnumEntryAccess().getOrdinalWHOLE_NUM_STRTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OseeEnumEntry__EntryGuidAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOseeEnumEntryAccess().getEntryGuidSTRINGTerminalRuleCall_3_1_0()); }
	RULE_STRING{ after(grammarAccess.getOseeEnumEntryAccess().getEntryGuidSTRINGTerminalRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OseeEnumOverride__OverridenEnumTypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOseeEnumOverrideAccess().getOverridenEnumTypeOseeEnumTypeCrossReference_1_0()); }
(
{ before(grammarAccess.getOseeEnumOverrideAccess().getOverridenEnumTypeOseeEnumTypeNAME_REFERENCEParserRuleCall_1_0_1()); }
	ruleNAME_REFERENCE{ after(grammarAccess.getOseeEnumOverrideAccess().getOverridenEnumTypeOseeEnumTypeNAME_REFERENCEParserRuleCall_1_0_1()); }
)
{ after(grammarAccess.getOseeEnumOverrideAccess().getOverridenEnumTypeOseeEnumTypeCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OseeEnumOverride__InheritAllAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOseeEnumOverrideAccess().getInheritAllInheritAllKeyword_3_0()); }
(
{ before(grammarAccess.getOseeEnumOverrideAccess().getInheritAllInheritAllKeyword_3_0()); }

	'inheritAll' 

{ after(grammarAccess.getOseeEnumOverrideAccess().getInheritAllInheritAllKeyword_3_0()); }
)

{ after(grammarAccess.getOseeEnumOverrideAccess().getInheritAllInheritAllKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OseeEnumOverride__OverrideOptionsAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOseeEnumOverrideAccess().getOverrideOptionsOverrideOptionParserRuleCall_4_0()); }
	ruleOverrideOption{ after(grammarAccess.getOseeEnumOverrideAccess().getOverrideOptionsOverrideOptionParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AddEnum__EnumEntryAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddEnumAccess().getEnumEntryNAME_REFERENCEParserRuleCall_1_0()); }
	ruleNAME_REFERENCE{ after(grammarAccess.getAddEnumAccess().getEnumEntryNAME_REFERENCEParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AddEnum__OrdinalAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddEnumAccess().getOrdinalWHOLE_NUM_STRTerminalRuleCall_2_0()); }
	RULE_WHOLE_NUM_STR{ after(grammarAccess.getAddEnumAccess().getOrdinalWHOLE_NUM_STRTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AddEnum__EntryGuidAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddEnumAccess().getEntryGuidSTRINGTerminalRuleCall_3_1_0()); }
	RULE_STRING{ after(grammarAccess.getAddEnumAccess().getEntryGuidSTRINGTerminalRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RemoveEnum__EnumEntryAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRemoveEnumAccess().getEnumEntryOseeEnumEntryCrossReference_1_0()); }
(
{ before(grammarAccess.getRemoveEnumAccess().getEnumEntryOseeEnumEntryNAME_REFERENCEParserRuleCall_1_0_1()); }
	ruleNAME_REFERENCE{ after(grammarAccess.getRemoveEnumAccess().getEnumEntryOseeEnumEntryNAME_REFERENCEParserRuleCall_1_0_1()); }
)
{ after(grammarAccess.getRemoveEnumAccess().getEnumEntryOseeEnumEntryCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationType__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationTypeAccess().getNameNAME_REFERENCEParserRuleCall_1_0()); }
	ruleNAME_REFERENCE{ after(grammarAccess.getRelationTypeAccess().getNameNAME_REFERENCEParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationType__TypeGuidAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationTypeAccess().getTypeGuidSTRINGTerminalRuleCall_4_0()); }
	RULE_STRING{ after(grammarAccess.getRelationTypeAccess().getTypeGuidSTRINGTerminalRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationType__SideANameAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationTypeAccess().getSideANameSTRINGTerminalRuleCall_6_0()); }
	RULE_STRING{ after(grammarAccess.getRelationTypeAccess().getSideANameSTRINGTerminalRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationType__SideAArtifactTypeAssignment_8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationTypeAccess().getSideAArtifactTypeArtifactTypeCrossReference_8_0()); }
(
{ before(grammarAccess.getRelationTypeAccess().getSideAArtifactTypeArtifactTypeNAME_REFERENCEParserRuleCall_8_0_1()); }
	ruleNAME_REFERENCE{ after(grammarAccess.getRelationTypeAccess().getSideAArtifactTypeArtifactTypeNAME_REFERENCEParserRuleCall_8_0_1()); }
)
{ after(grammarAccess.getRelationTypeAccess().getSideAArtifactTypeArtifactTypeCrossReference_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationType__SideBNameAssignment_10
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationTypeAccess().getSideBNameSTRINGTerminalRuleCall_10_0()); }
	RULE_STRING{ after(grammarAccess.getRelationTypeAccess().getSideBNameSTRINGTerminalRuleCall_10_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationType__SideBArtifactTypeAssignment_12
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationTypeAccess().getSideBArtifactTypeArtifactTypeCrossReference_12_0()); }
(
{ before(grammarAccess.getRelationTypeAccess().getSideBArtifactTypeArtifactTypeNAME_REFERENCEParserRuleCall_12_0_1()); }
	ruleNAME_REFERENCE{ after(grammarAccess.getRelationTypeAccess().getSideBArtifactTypeArtifactTypeNAME_REFERENCEParserRuleCall_12_0_1()); }
)
{ after(grammarAccess.getRelationTypeAccess().getSideBArtifactTypeArtifactTypeCrossReference_12_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationType__DefaultOrderTypeAssignment_14
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationTypeAccess().getDefaultOrderTypeRelationOrderTypeParserRuleCall_14_0()); }
	ruleRelationOrderType{ after(grammarAccess.getRelationTypeAccess().getDefaultOrderTypeRelationOrderTypeParserRuleCall_14_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationType__MultiplicityAssignment_16
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationTypeAccess().getMultiplicityRelationMultiplicityEnumEnumRuleCall_16_0()); }
	ruleRelationMultiplicityEnum{ after(grammarAccess.getRelationTypeAccess().getMultiplicityRelationMultiplicityEnumEnumRuleCall_16_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_WHOLE_NUM_STR : ('0'..'9')+;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


