/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package org.eclipse.osee.framework.oseeTypes.provider;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

import org.eclipse.osee.framework.oseeTypes.util.OseeTypesAdapterFactory;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class OseeTypesItemProviderAdapterFactory extends OseeTypesAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
   /**
    * This keeps track of the root adapter factory that delegates to this adapter factory.
    * <!-- begin-user-doc -->
    * <!-- end-user-doc -->
    * @generated
    */
   protected ComposedAdapterFactory parentAdapterFactory;

   /**
    * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
    * <!-- begin-user-doc -->
    * <!-- end-user-doc -->
    * @generated
    */
   protected IChangeNotifier changeNotifier = new ChangeNotifier();

   /**
    * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
    * <!-- begin-user-doc -->
    * <!-- end-user-doc -->
    * @generated
    */
   protected Collection<Object> supportedTypes = new ArrayList<Object>();

   /**
    * This constructs an instance.
    * <!-- begin-user-doc -->
    * <!-- end-user-doc -->
    * @generated
    */
   public OseeTypesItemProviderAdapterFactory() {
      supportedTypes.add(IEditingDomainItemProvider.class);
      supportedTypes.add(IStructuredItemContentProvider.class);
      supportedTypes.add(ITreeItemContentProvider.class);
      supportedTypes.add(IItemLabelProvider.class);
      supportedTypes.add(IItemPropertySource.class);
   }

   /**
    * This keeps track of the one adapter used for all {@link org.eclipse.osee.framework.oseeTypes.OseeTypeModel} instances.
    * <!-- begin-user-doc -->
    * <!-- end-user-doc -->
    * @generated
    */
   protected OseeTypeModelItemProvider oseeTypeModelItemProvider;

   /**
    * This creates an adapter for a {@link org.eclipse.osee.framework.oseeTypes.OseeTypeModel}.
    * <!-- begin-user-doc -->
    * <!-- end-user-doc -->
    * @generated
    */
   @Override
   public Adapter createOseeTypeModelAdapter() {
      if (oseeTypeModelItemProvider == null) {
         oseeTypeModelItemProvider = new OseeTypeModelItemProvider(this);
      }

      return oseeTypeModelItemProvider;
   }

   /**
    * This keeps track of the one adapter used for all {@link org.eclipse.osee.framework.oseeTypes.Import} instances.
    * <!-- begin-user-doc -->
    * <!-- end-user-doc -->
    * @generated
    */
   protected ImportItemProvider importItemProvider;

   /**
    * This creates an adapter for a {@link org.eclipse.osee.framework.oseeTypes.Import}.
    * <!-- begin-user-doc -->
    * <!-- end-user-doc -->
    * @generated
    */
   @Override
   public Adapter createImportAdapter() {
      if (importItemProvider == null) {
         importItemProvider = new ImportItemProvider(this);
      }

      return importItemProvider;
   }

   /**
    * This keeps track of the one adapter used for all {@link org.eclipse.osee.framework.oseeTypes.OseeElement} instances.
    * <!-- begin-user-doc -->
    * <!-- end-user-doc -->
    * @generated
    */
   protected OseeElementItemProvider oseeElementItemProvider;

   /**
    * This creates an adapter for a {@link org.eclipse.osee.framework.oseeTypes.OseeElement}.
    * <!-- begin-user-doc -->
    * <!-- end-user-doc -->
    * @generated
    */
   @Override
   public Adapter createOseeElementAdapter() {
      if (oseeElementItemProvider == null) {
         oseeElementItemProvider = new OseeElementItemProvider(this);
      }

      return oseeElementItemProvider;
   }

   /**
    * This keeps track of the one adapter used for all {@link org.eclipse.osee.framework.oseeTypes.OseeType} instances.
    * <!-- begin-user-doc -->
    * <!-- end-user-doc -->
    * @generated
    */
   protected OseeTypeItemProvider oseeTypeItemProvider;

   /**
    * This creates an adapter for a {@link org.eclipse.osee.framework.oseeTypes.OseeType}.
    * <!-- begin-user-doc -->
    * <!-- end-user-doc -->
    * @generated
    */
   @Override
   public Adapter createOseeTypeAdapter() {
      if (oseeTypeItemProvider == null) {
         oseeTypeItemProvider = new OseeTypeItemProvider(this);
      }

      return oseeTypeItemProvider;
   }

   /**
    * This keeps track of the one adapter used for all {@link org.eclipse.osee.framework.oseeTypes.ArtifactType} instances.
    * <!-- begin-user-doc -->
    * <!-- end-user-doc -->
    * @generated
    */
   protected ArtifactTypeItemProvider artifactTypeItemProvider;

   /**
    * This creates an adapter for a {@link org.eclipse.osee.framework.oseeTypes.ArtifactType}.
    * <!-- begin-user-doc -->
    * <!-- end-user-doc -->
    * @generated
    */
   @Override
   public Adapter createArtifactTypeAdapter() {
      if (artifactTypeItemProvider == null) {
         artifactTypeItemProvider = new ArtifactTypeItemProvider(this);
      }

      return artifactTypeItemProvider;
   }

   /**
    * This keeps track of the one adapter used for all {@link org.eclipse.osee.framework.oseeTypes.AttributeTypeRef} instances.
    * <!-- begin-user-doc -->
    * <!-- end-user-doc -->
    * @generated
    */
   protected AttributeTypeRefItemProvider attributeTypeRefItemProvider;

   /**
    * This creates an adapter for a {@link org.eclipse.osee.framework.oseeTypes.AttributeTypeRef}.
    * <!-- begin-user-doc -->
    * <!-- end-user-doc -->
    * @generated
    */
   @Override
   public Adapter createAttributeTypeRefAdapter() {
      if (attributeTypeRefItemProvider == null) {
         attributeTypeRefItemProvider = new AttributeTypeRefItemProvider(this);
      }

      return attributeTypeRefItemProvider;
   }

   /**
    * This keeps track of the one adapter used for all {@link org.eclipse.osee.framework.oseeTypes.AttributeType} instances.
    * <!-- begin-user-doc -->
    * <!-- end-user-doc -->
    * @generated
    */
   protected AttributeTypeItemProvider attributeTypeItemProvider;

   /**
    * This creates an adapter for a {@link org.eclipse.osee.framework.oseeTypes.AttributeType}.
    * <!-- begin-user-doc -->
    * <!-- end-user-doc -->
    * @generated
    */
   @Override
   public Adapter createAttributeTypeAdapter() {
      if (attributeTypeItemProvider == null) {
         attributeTypeItemProvider = new AttributeTypeItemProvider(this);
      }

      return attributeTypeItemProvider;
   }

   /**
    * This keeps track of the one adapter used for all {@link org.eclipse.osee.framework.oseeTypes.OseeEnumType} instances.
    * <!-- begin-user-doc -->
    * <!-- end-user-doc -->
    * @generated
    */
   protected OseeEnumTypeItemProvider oseeEnumTypeItemProvider;

   /**
    * This creates an adapter for a {@link org.eclipse.osee.framework.oseeTypes.OseeEnumType}.
    * <!-- begin-user-doc -->
    * <!-- end-user-doc -->
    * @generated
    */
   @Override
   public Adapter createOseeEnumTypeAdapter() {
      if (oseeEnumTypeItemProvider == null) {
         oseeEnumTypeItemProvider = new OseeEnumTypeItemProvider(this);
      }

      return oseeEnumTypeItemProvider;
   }

   /**
    * This keeps track of the one adapter used for all {@link org.eclipse.osee.framework.oseeTypes.OseeEnumEntry} instances.
    * <!-- begin-user-doc -->
    * <!-- end-user-doc -->
    * @generated
    */
   protected OseeEnumEntryItemProvider oseeEnumEntryItemProvider;

   /**
    * This creates an adapter for a {@link org.eclipse.osee.framework.oseeTypes.OseeEnumEntry}.
    * <!-- begin-user-doc -->
    * <!-- end-user-doc -->
    * @generated
    */
   @Override
   public Adapter createOseeEnumEntryAdapter() {
      if (oseeEnumEntryItemProvider == null) {
         oseeEnumEntryItemProvider = new OseeEnumEntryItemProvider(this);
      }

      return oseeEnumEntryItemProvider;
   }

   /**
    * This keeps track of the one adapter used for all {@link org.eclipse.osee.framework.oseeTypes.OseeEnumOverride} instances.
    * <!-- begin-user-doc -->
    * <!-- end-user-doc -->
    * @generated
    */
   protected OseeEnumOverrideItemProvider oseeEnumOverrideItemProvider;

   /**
    * This creates an adapter for a {@link org.eclipse.osee.framework.oseeTypes.OseeEnumOverride}.
    * <!-- begin-user-doc -->
    * <!-- end-user-doc -->
    * @generated
    */
   @Override
   public Adapter createOseeEnumOverrideAdapter() {
      if (oseeEnumOverrideItemProvider == null) {
         oseeEnumOverrideItemProvider = new OseeEnumOverrideItemProvider(this);
      }

      return oseeEnumOverrideItemProvider;
   }

   /**
    * This keeps track of the one adapter used for all {@link org.eclipse.osee.framework.oseeTypes.OverrideOption} instances.
    * <!-- begin-user-doc -->
    * <!-- end-user-doc -->
    * @generated
    */
   protected OverrideOptionItemProvider overrideOptionItemProvider;

   /**
    * This creates an adapter for a {@link org.eclipse.osee.framework.oseeTypes.OverrideOption}.
    * <!-- begin-user-doc -->
    * <!-- end-user-doc -->
    * @generated
    */
   @Override
   public Adapter createOverrideOptionAdapter() {
      if (overrideOptionItemProvider == null) {
         overrideOptionItemProvider = new OverrideOptionItemProvider(this);
      }

      return overrideOptionItemProvider;
   }

   /**
    * This keeps track of the one adapter used for all {@link org.eclipse.osee.framework.oseeTypes.AddEnum} instances.
    * <!-- begin-user-doc -->
    * <!-- end-user-doc -->
    * @generated
    */
   protected AddEnumItemProvider addEnumItemProvider;

   /**
    * This creates an adapter for a {@link org.eclipse.osee.framework.oseeTypes.AddEnum}.
    * <!-- begin-user-doc -->
    * <!-- end-user-doc -->
    * @generated
    */
   @Override
   public Adapter createAddEnumAdapter() {
      if (addEnumItemProvider == null) {
         addEnumItemProvider = new AddEnumItemProvider(this);
      }

      return addEnumItemProvider;
   }

   /**
    * This keeps track of the one adapter used for all {@link org.eclipse.osee.framework.oseeTypes.RemoveEnum} instances.
    * <!-- begin-user-doc -->
    * <!-- end-user-doc -->
    * @generated
    */
   protected RemoveEnumItemProvider removeEnumItemProvider;

   /**
    * This creates an adapter for a {@link org.eclipse.osee.framework.oseeTypes.RemoveEnum}.
    * <!-- begin-user-doc -->
    * <!-- end-user-doc -->
    * @generated
    */
   @Override
   public Adapter createRemoveEnumAdapter() {
      if (removeEnumItemProvider == null) {
         removeEnumItemProvider = new RemoveEnumItemProvider(this);
      }

      return removeEnumItemProvider;
   }

   /**
    * This keeps track of the one adapter used for all {@link org.eclipse.osee.framework.oseeTypes.RelationType} instances.
    * <!-- begin-user-doc -->
    * <!-- end-user-doc -->
    * @generated
    */
   protected RelationTypeItemProvider relationTypeItemProvider;

   /**
    * This creates an adapter for a {@link org.eclipse.osee.framework.oseeTypes.RelationType}.
    * <!-- begin-user-doc -->
    * <!-- end-user-doc -->
    * @generated
    */
   @Override
   public Adapter createRelationTypeAdapter() {
      if (relationTypeItemProvider == null) {
         relationTypeItemProvider = new RelationTypeItemProvider(this);
      }

      return relationTypeItemProvider;
   }

   /**
    * This returns the root adapter factory that contains this factory.
    * <!-- begin-user-doc -->
    * <!-- end-user-doc -->
    * @generated
    */
   public ComposeableAdapterFactory getRootAdapterFactory() {
      return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
   }

   /**
    * This sets the composed adapter factory that contains this factory.
    * <!-- begin-user-doc -->
    * <!-- end-user-doc -->
    * @generated
    */
   public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
      this.parentAdapterFactory = parentAdapterFactory;
   }

   /**
    * <!-- begin-user-doc -->
    * <!-- end-user-doc -->
    * @generated
    */
   @Override
   public boolean isFactoryForType(Object type) {
      return supportedTypes.contains(type) || super.isFactoryForType(type);
   }

   /**
    * This implementation substitutes the factory itself as the key for the adapter.
    * <!-- begin-user-doc -->
    * <!-- end-user-doc -->
    * @generated
    */
   @Override
   public Adapter adapt(Notifier notifier, Object type) {
      return super.adapt(notifier, this);
   }

   /**
    * <!-- begin-user-doc -->
    * <!-- end-user-doc -->
    * @generated
    */
   @Override
   public Object adapt(Object object, Object type) {
      if (isFactoryForType(type)) {
         Object adapter = super.adapt(object, type);
         if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter))) {
            return adapter;
         }
      }

      return null;
   }

   /**
    * This adds a listener.
    * <!-- begin-user-doc -->
    * <!-- end-user-doc -->
    * @generated
    */
   public void addListener(INotifyChangedListener notifyChangedListener) {
      changeNotifier.addListener(notifyChangedListener);
   }

   /**
    * This removes a listener.
    * <!-- begin-user-doc -->
    * <!-- end-user-doc -->
    * @generated
    */
   public void removeListener(INotifyChangedListener notifyChangedListener) {
      changeNotifier.removeListener(notifyChangedListener);
   }

   /**
    * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
    * <!-- begin-user-doc -->
    * <!-- end-user-doc -->
    * @generated
    */
   public void fireNotifyChanged(Notification notification) {
      changeNotifier.fireNotifyChanged(notification);

      if (parentAdapterFactory != null) {
         parentAdapterFactory.fireNotifyChanged(notification);
      }
   }

   /**
    * This disposes all of the item providers created by this factory. 
    * <!-- begin-user-doc -->
    * <!-- end-user-doc -->
    * @generated
    */
   public void dispose() {
      if (oseeTypeModelItemProvider != null) oseeTypeModelItemProvider.dispose();
      if (importItemProvider != null) importItemProvider.dispose();
      if (oseeElementItemProvider != null) oseeElementItemProvider.dispose();
      if (oseeTypeItemProvider != null) oseeTypeItemProvider.dispose();
      if (artifactTypeItemProvider != null) artifactTypeItemProvider.dispose();
      if (attributeTypeRefItemProvider != null) attributeTypeRefItemProvider.dispose();
      if (attributeTypeItemProvider != null) attributeTypeItemProvider.dispose();
      if (oseeEnumTypeItemProvider != null) oseeEnumTypeItemProvider.dispose();
      if (oseeEnumEntryItemProvider != null) oseeEnumEntryItemProvider.dispose();
      if (oseeEnumOverrideItemProvider != null) oseeEnumOverrideItemProvider.dispose();
      if (overrideOptionItemProvider != null) overrideOptionItemProvider.dispose();
      if (addEnumItemProvider != null) addEnumItemProvider.dispose();
      if (removeEnumItemProvider != null) removeEnumItemProvider.dispose();
      if (relationTypeItemProvider != null) relationTypeItemProvider.dispose();
   }

}
