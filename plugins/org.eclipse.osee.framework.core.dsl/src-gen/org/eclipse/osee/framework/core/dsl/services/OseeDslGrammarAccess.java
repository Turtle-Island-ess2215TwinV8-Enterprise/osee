/*
 * generated by Xtext
 */

package org.eclipse.osee.framework.core.dsl.services;

import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;
import org.eclipse.xtext.service.GrammarProvider;
import com.google.inject.Inject;
import com.google.inject.Singleton;

@Singleton
public class OseeDslGrammarAccess extends AbstractGrammarElementFinder {

   public class OseeDslElements extends AbstractParserRuleElementFinder {
      private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "OseeDsl");
      private final Group cGroup = (Group) rule.eContents().get(1);
      private final Assignment cImportsAssignment_0 = (Assignment) cGroup.eContents().get(0);
      private final RuleCall cImportsImportParserRuleCall_0_0 = (RuleCall) cImportsAssignment_0.eContents().get(0);
      private final Alternatives cAlternatives_1 = (Alternatives) cGroup.eContents().get(1);
      private final Assignment cArtifactTypesAssignment_1_0 = (Assignment) cAlternatives_1.eContents().get(0);
      private final RuleCall cArtifactTypesXArtifactTypeParserRuleCall_1_0_0 =
         (RuleCall) cArtifactTypesAssignment_1_0.eContents().get(0);
      private final Assignment cRelationTypesAssignment_1_1 = (Assignment) cAlternatives_1.eContents().get(1);
      private final RuleCall cRelationTypesXRelationTypeParserRuleCall_1_1_0 =
         (RuleCall) cRelationTypesAssignment_1_1.eContents().get(0);
      private final Assignment cAttributeTypesAssignment_1_2 = (Assignment) cAlternatives_1.eContents().get(2);
      private final RuleCall cAttributeTypesXAttributeTypeParserRuleCall_1_2_0 =
         (RuleCall) cAttributeTypesAssignment_1_2.eContents().get(0);
      private final Assignment cEnumTypesAssignment_1_3 = (Assignment) cAlternatives_1.eContents().get(3);
      private final RuleCall cEnumTypesXOseeEnumTypeParserRuleCall_1_3_0 =
         (RuleCall) cEnumTypesAssignment_1_3.eContents().get(0);
      private final Assignment cEnumOverridesAssignment_1_4 = (Assignment) cAlternatives_1.eContents().get(4);
      private final RuleCall cEnumOverridesXOseeEnumOverrideParserRuleCall_1_4_0 =
         (RuleCall) cEnumOverridesAssignment_1_4.eContents().get(0);
      private final Alternatives cAlternatives_2 = (Alternatives) cGroup.eContents().get(2);
      private final Assignment cBranchRefsAssignment_2_0 = (Assignment) cAlternatives_2.eContents().get(0);
      private final RuleCall cBranchRefsXBranchRefParserRuleCall_2_0_0 =
         (RuleCall) cBranchRefsAssignment_2_0.eContents().get(0);
      private final Assignment cArtifactRefsAssignment_2_1 = (Assignment) cAlternatives_2.eContents().get(1);
      private final RuleCall cArtifactRefsXArtifactRefParserRuleCall_2_1_0 =
         (RuleCall) cArtifactRefsAssignment_2_1.eContents().get(0);
      private final Assignment cAccessDeclarationsAssignment_3 = (Assignment) cGroup.eContents().get(3);
      private final RuleCall cAccessDeclarationsAccessContextParserRuleCall_3_0 =
         (RuleCall) cAccessDeclarationsAssignment_3.eContents().get(0);

      //OseeDsl:
      //	imports+=Import* (artifactTypes+=XArtifactType | relationTypes+=XRelationType | attributeTypes+=XAttributeType |
      //	enumTypes+=XOseeEnumType | enumOverrides+=XOseeEnumOverride)* (branchRefs+=XBranchRef | artifactRefs+=XArtifactRef)*
      //	accessDeclarations+=AccessContext*;
      @Override
      public ParserRule getRule() {
         return rule;
      }

      //imports+=Import* (artifactTypes+=XArtifactType | relationTypes+=XRelationType | attributeTypes+=XAttributeType |
      //enumTypes+=XOseeEnumType | enumOverrides+=XOseeEnumOverride)* (branchRefs+=XBranchRef | artifactRefs+=XArtifactRef)*
      //accessDeclarations+=AccessContext*
      public Group getGroup() {
         return cGroup;
      }

      //imports+=Import*
      public Assignment getImportsAssignment_0() {
         return cImportsAssignment_0;
      }

      //Import
      public RuleCall getImportsImportParserRuleCall_0_0() {
         return cImportsImportParserRuleCall_0_0;
      }

      //(artifactTypes+=XArtifactType | relationTypes+=XRelationType | attributeTypes+=XAttributeType | enumTypes+=XOseeEnumType
      //| enumOverrides+=XOseeEnumOverride)*
      public Alternatives getAlternatives_1() {
         return cAlternatives_1;
      }

      //artifactTypes+=XArtifactType
      public Assignment getArtifactTypesAssignment_1_0() {
         return cArtifactTypesAssignment_1_0;
      }

      //XArtifactType
      public RuleCall getArtifactTypesXArtifactTypeParserRuleCall_1_0_0() {
         return cArtifactTypesXArtifactTypeParserRuleCall_1_0_0;
      }

      //relationTypes+=XRelationType
      public Assignment getRelationTypesAssignment_1_1() {
         return cRelationTypesAssignment_1_1;
      }

      //XRelationType
      public RuleCall getRelationTypesXRelationTypeParserRuleCall_1_1_0() {
         return cRelationTypesXRelationTypeParserRuleCall_1_1_0;
      }

      //attributeTypes+=XAttributeType
      public Assignment getAttributeTypesAssignment_1_2() {
         return cAttributeTypesAssignment_1_2;
      }

      //XAttributeType
      public RuleCall getAttributeTypesXAttributeTypeParserRuleCall_1_2_0() {
         return cAttributeTypesXAttributeTypeParserRuleCall_1_2_0;
      }

      //enumTypes+=XOseeEnumType
      public Assignment getEnumTypesAssignment_1_3() {
         return cEnumTypesAssignment_1_3;
      }

      //XOseeEnumType
      public RuleCall getEnumTypesXOseeEnumTypeParserRuleCall_1_3_0() {
         return cEnumTypesXOseeEnumTypeParserRuleCall_1_3_0;
      }

      //enumOverrides+=XOseeEnumOverride
      public Assignment getEnumOverridesAssignment_1_4() {
         return cEnumOverridesAssignment_1_4;
      }

      //XOseeEnumOverride
      public RuleCall getEnumOverridesXOseeEnumOverrideParserRuleCall_1_4_0() {
         return cEnumOverridesXOseeEnumOverrideParserRuleCall_1_4_0;
      }

      //(branchRefs+=XBranchRef | artifactRefs+=XArtifactRef)*
      public Alternatives getAlternatives_2() {
         return cAlternatives_2;
      }

      //branchRefs+=XBranchRef
      public Assignment getBranchRefsAssignment_2_0() {
         return cBranchRefsAssignment_2_0;
      }

      //XBranchRef
      public RuleCall getBranchRefsXBranchRefParserRuleCall_2_0_0() {
         return cBranchRefsXBranchRefParserRuleCall_2_0_0;
      }

      //artifactRefs+=XArtifactRef
      public Assignment getArtifactRefsAssignment_2_1() {
         return cArtifactRefsAssignment_2_1;
      }

      //XArtifactRef
      public RuleCall getArtifactRefsXArtifactRefParserRuleCall_2_1_0() {
         return cArtifactRefsXArtifactRefParserRuleCall_2_1_0;
      }

      //accessDeclarations+=AccessContext*
      public Assignment getAccessDeclarationsAssignment_3() {
         return cAccessDeclarationsAssignment_3;
      }

      //AccessContext
      public RuleCall getAccessDeclarationsAccessContextParserRuleCall_3_0() {
         return cAccessDeclarationsAccessContextParserRuleCall_3_0;
      }
   }

   public class ImportElements extends AbstractParserRuleElementFinder {
      private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Import");
      private final Group cGroup = (Group) rule.eContents().get(1);
      private final Keyword cImportKeyword_0 = (Keyword) cGroup.eContents().get(0);
      private final Assignment cImportURIAssignment_1 = (Assignment) cGroup.eContents().get(1);
      private final RuleCall cImportURISTRINGTerminalRuleCall_1_0 =
         (RuleCall) cImportURIAssignment_1.eContents().get(0);

      //Import:
      //	"import" importURI=STRING;
      @Override
      public ParserRule getRule() {
         return rule;
      }

      //"import" importURI=STRING
      public Group getGroup() {
         return cGroup;
      }

      //"import"
      public Keyword getImportKeyword_0() {
         return cImportKeyword_0;
      }

      //importURI=STRING
      public Assignment getImportURIAssignment_1() {
         return cImportURIAssignment_1;
      }

      //STRING
      public RuleCall getImportURISTRINGTerminalRuleCall_1_0() {
         return cImportURISTRINGTerminalRuleCall_1_0;
      }
   }

   public class NAME_REFERENCEElements extends AbstractParserRuleElementFinder {
      private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "NAME_REFERENCE");
      private final RuleCall cSTRINGTerminalRuleCall = (RuleCall) rule.eContents().get(1);

      //NAME_REFERENCE returns ecore::EString:
      //	STRING;
      @Override
      public ParserRule getRule() {
         return rule;
      }

      //STRING
      public RuleCall getSTRINGTerminalRuleCall() {
         return cSTRINGTerminalRuleCall;
      }
   }

   public class ATTRIBUTE_TYPE_REFERENCEElements extends AbstractParserRuleElementFinder {
      private final ParserRule rule =
         (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ATTRIBUTE_TYPE_REFERENCE");
      private final RuleCall cSTRINGTerminalRuleCall = (RuleCall) rule.eContents().get(1);

      //ATTRIBUTE_TYPE_REFERENCE returns ecore::EString:
      //	STRING;
      @Override
      public ParserRule getRule() {
         return rule;
      }

      //STRING
      public RuleCall getSTRINGTerminalRuleCall() {
         return cSTRINGTerminalRuleCall;
      }
   }

   public class ARTIFACT_TYPE_REFERENCEElements extends AbstractParserRuleElementFinder {
      private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ARTIFACT_TYPE_REFERENCE");
      private final RuleCall cSTRINGTerminalRuleCall = (RuleCall) rule.eContents().get(1);

      //ARTIFACT_TYPE_REFERENCE returns ecore::EString:
      //	STRING;
      @Override
      public ParserRule getRule() {
         return rule;
      }

      //STRING
      public RuleCall getSTRINGTerminalRuleCall() {
         return cSTRINGTerminalRuleCall;
      }
   }

   public class RELATION_TYPE_REFERENCEElements extends AbstractParserRuleElementFinder {
      private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "RELATION_TYPE_REFERENCE");
      private final RuleCall cSTRINGTerminalRuleCall = (RuleCall) rule.eContents().get(1);

      //RELATION_TYPE_REFERENCE returns ecore::EString:
      //	STRING;
      @Override
      public ParserRule getRule() {
         return rule;
      }

      //STRING
      public RuleCall getSTRINGTerminalRuleCall() {
         return cSTRINGTerminalRuleCall;
      }
   }

   public class ENUM_TYPE_REFERENCEElements extends AbstractParserRuleElementFinder {
      private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ENUM_TYPE_REFERENCE");
      private final RuleCall cSTRINGTerminalRuleCall = (RuleCall) rule.eContents().get(1);

      //ENUM_TYPE_REFERENCE returns ecore::EString:
      //	STRING;
      @Override
      public ParserRule getRule() {
         return rule;
      }

      //STRING
      public RuleCall getSTRINGTerminalRuleCall() {
         return cSTRINGTerminalRuleCall;
      }
   }

   public class ENUM_ENTRY_TYPE_REFERENCEElements extends AbstractParserRuleElementFinder {
      private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(),
         "ENUM_ENTRY_TYPE_REFERENCE");
      private final RuleCall cSTRINGTerminalRuleCall = (RuleCall) rule.eContents().get(1);

      //ENUM_ENTRY_TYPE_REFERENCE returns ecore::EString:
      //	STRING;
      @Override
      public ParserRule getRule() {
         return rule;
      }

      //STRING
      public RuleCall getSTRINGTerminalRuleCall() {
         return cSTRINGTerminalRuleCall;
      }
   }

   public class QUALIFIED_NAMEElements extends AbstractParserRuleElementFinder {
      private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "QUALIFIED_NAME");
      private final Group cGroup = (Group) rule.eContents().get(1);
      private final RuleCall cIDTerminalRuleCall_0 = (RuleCall) cGroup.eContents().get(0);
      private final Group cGroup_1 = (Group) cGroup.eContents().get(1);
      private final Keyword cFullStopKeyword_1_0 = (Keyword) cGroup_1.eContents().get(0);
      private final RuleCall cIDTerminalRuleCall_1_1 = (RuleCall) cGroup_1.eContents().get(1);

      //QUALIFIED_NAME returns ecore::EString:
      //	ID ("." ID)*;
      @Override
      public ParserRule getRule() {
         return rule;
      }

      //ID ("." ID)*
      public Group getGroup() {
         return cGroup;
      }

      //ID
      public RuleCall getIDTerminalRuleCall_0() {
         return cIDTerminalRuleCall_0;
      }

      //("." ID)*
      public Group getGroup_1() {
         return cGroup_1;
      }

      //"."
      public Keyword getFullStopKeyword_1_0() {
         return cFullStopKeyword_1_0;
      }

      //ID
      public RuleCall getIDTerminalRuleCall_1_1() {
         return cIDTerminalRuleCall_1_1;
      }
   }

   public class OseeElementElements extends AbstractParserRuleElementFinder {
      private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "OseeElement");
      private final Alternatives cAlternatives = (Alternatives) rule.eContents().get(1);
      private final RuleCall cXOseeEnumOverrideParserRuleCall_0 = (RuleCall) cAlternatives.eContents().get(0);
      private final RuleCall cOseeTypeParserRuleCall_1 = (RuleCall) cAlternatives.eContents().get(1);

      /////////////////////////////////////////
      ////  OSEE TYPE MODEL                  //
      /////////////////////////////////////////
      //OseeElement:
      //	XOseeEnumOverride | OseeType;
      @Override
      public ParserRule getRule() {
         return rule;
      }

      //XOseeEnumOverride | OseeType
      public Alternatives getAlternatives() {
         return cAlternatives;
      }

      //XOseeEnumOverride
      public RuleCall getXOseeEnumOverrideParserRuleCall_0() {
         return cXOseeEnumOverrideParserRuleCall_0;
      }

      //OseeType
      public RuleCall getOseeTypeParserRuleCall_1() {
         return cOseeTypeParserRuleCall_1;
      }
   }

   public class OseeTypeElements extends AbstractParserRuleElementFinder {
      private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "OseeType");
      private final Alternatives cAlternatives = (Alternatives) rule.eContents().get(1);
      private final RuleCall cXArtifactTypeParserRuleCall_0 = (RuleCall) cAlternatives.eContents().get(0);
      private final RuleCall cXRelationTypeParserRuleCall_1 = (RuleCall) cAlternatives.eContents().get(1);
      private final RuleCall cXAttributeTypeParserRuleCall_2 = (RuleCall) cAlternatives.eContents().get(2);
      private final RuleCall cXOseeEnumTypeParserRuleCall_3 = (RuleCall) cAlternatives.eContents().get(3);

      //OseeType:
      //	XArtifactType | XRelationType | XAttributeType | XOseeEnumType;
      @Override
      public ParserRule getRule() {
         return rule;
      }

      //XArtifactType | XRelationType | XAttributeType | XOseeEnumType
      public Alternatives getAlternatives() {
         return cAlternatives;
      }

      //XArtifactType
      public RuleCall getXArtifactTypeParserRuleCall_0() {
         return cXArtifactTypeParserRuleCall_0;
      }

      //XRelationType
      public RuleCall getXRelationTypeParserRuleCall_1() {
         return cXRelationTypeParserRuleCall_1;
      }

      //XAttributeType
      public RuleCall getXAttributeTypeParserRuleCall_2() {
         return cXAttributeTypeParserRuleCall_2;
      }

      //XOseeEnumType
      public RuleCall getXOseeEnumTypeParserRuleCall_3() {
         return cXOseeEnumTypeParserRuleCall_3;
      }
   }

   public class XArtifactTypeElements extends AbstractParserRuleElementFinder {
      private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "XArtifactType");
      private final Group cGroup = (Group) rule.eContents().get(1);
      private final Assignment cAbstractAssignment_0 = (Assignment) cGroup.eContents().get(0);
      private final Keyword cAbstractAbstractKeyword_0_0 = (Keyword) cAbstractAssignment_0.eContents().get(0);
      private final Keyword cArtifactTypeKeyword_1 = (Keyword) cGroup.eContents().get(1);
      private final Assignment cNameAssignment_2 = (Assignment) cGroup.eContents().get(2);
      private final RuleCall cNameARTIFACT_TYPE_REFERENCEParserRuleCall_2_0 =
         (RuleCall) cNameAssignment_2.eContents().get(0);
      private final Group cGroup_3 = (Group) cGroup.eContents().get(3);
      private final Keyword cExtendsKeyword_3_0 = (Keyword) cGroup_3.eContents().get(0);
      private final Assignment cSuperArtifactTypesAssignment_3_1 = (Assignment) cGroup_3.eContents().get(1);
      private final CrossReference cSuperArtifactTypesXArtifactTypeCrossReference_3_1_0 =
         (CrossReference) cSuperArtifactTypesAssignment_3_1.eContents().get(0);
      private final RuleCall cSuperArtifactTypesXArtifactTypeARTIFACT_TYPE_REFERENCEParserRuleCall_3_1_0_1 =
         (RuleCall) cSuperArtifactTypesXArtifactTypeCrossReference_3_1_0.eContents().get(1);
      private final Group cGroup_3_2 = (Group) cGroup_3.eContents().get(2);
      private final Keyword cCommaKeyword_3_2_0 = (Keyword) cGroup_3_2.eContents().get(0);
      private final Assignment cSuperArtifactTypesAssignment_3_2_1 = (Assignment) cGroup_3_2.eContents().get(1);
      private final CrossReference cSuperArtifactTypesXArtifactTypeCrossReference_3_2_1_0 =
         (CrossReference) cSuperArtifactTypesAssignment_3_2_1.eContents().get(0);
      private final RuleCall cSuperArtifactTypesXArtifactTypeARTIFACT_TYPE_REFERENCEParserRuleCall_3_2_1_0_1 =
         (RuleCall) cSuperArtifactTypesXArtifactTypeCrossReference_3_2_1_0.eContents().get(1);
      private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword) cGroup.eContents().get(4);
      private final Keyword cGuidKeyword_5 = (Keyword) cGroup.eContents().get(5);
      private final Assignment cTypeGuidAssignment_6 = (Assignment) cGroup.eContents().get(6);
      private final RuleCall cTypeGuidSTRINGTerminalRuleCall_6_0 = (RuleCall) cTypeGuidAssignment_6.eContents().get(0);
      private final Assignment cValidAttributeTypesAssignment_7 = (Assignment) cGroup.eContents().get(7);
      private final RuleCall cValidAttributeTypesXAttributeTypeRefParserRuleCall_7_0 =
         (RuleCall) cValidAttributeTypesAssignment_7.eContents().get(0);
      private final Keyword cRightCurlyBracketKeyword_8 = (Keyword) cGroup.eContents().get(8);

      //XArtifactType:
      //	abstract?="abstract"? "artifactType" name=ARTIFACT_TYPE_REFERENCE ("extends"
      //	superArtifactTypes+=[XArtifactType|ARTIFACT_TYPE_REFERENCE] (","
      //	superArtifactTypes+=[XArtifactType|ARTIFACT_TYPE_REFERENCE])*)? "{" "guid" typeGuid=STRING
      //	validAttributeTypes+=XAttributeTypeRef* "}";
      @Override
      public ParserRule getRule() {
         return rule;
      }

      //abstract?="abstract"? "artifactType" name=ARTIFACT_TYPE_REFERENCE ("extends"
      //superArtifactTypes+=[XArtifactType|ARTIFACT_TYPE_REFERENCE] (","
      //superArtifactTypes+=[XArtifactType|ARTIFACT_TYPE_REFERENCE])*)? "{" "guid" typeGuid=STRING
      //validAttributeTypes+=XAttributeTypeRef* "}"
      public Group getGroup() {
         return cGroup;
      }

      //abstract?="abstract"?
      public Assignment getAbstractAssignment_0() {
         return cAbstractAssignment_0;
      }

      //"abstract"
      public Keyword getAbstractAbstractKeyword_0_0() {
         return cAbstractAbstractKeyword_0_0;
      }

      //"artifactType"
      public Keyword getArtifactTypeKeyword_1() {
         return cArtifactTypeKeyword_1;
      }

      //name=ARTIFACT_TYPE_REFERENCE
      public Assignment getNameAssignment_2() {
         return cNameAssignment_2;
      }

      //ARTIFACT_TYPE_REFERENCE
      public RuleCall getNameARTIFACT_TYPE_REFERENCEParserRuleCall_2_0() {
         return cNameARTIFACT_TYPE_REFERENCEParserRuleCall_2_0;
      }

      //("extends" superArtifactTypes+=[XArtifactType|ARTIFACT_TYPE_REFERENCE] (","
      //superArtifactTypes+=[XArtifactType|ARTIFACT_TYPE_REFERENCE])*)?
      public Group getGroup_3() {
         return cGroup_3;
      }

      //"extends"
      public Keyword getExtendsKeyword_3_0() {
         return cExtendsKeyword_3_0;
      }

      //superArtifactTypes+=[XArtifactType|ARTIFACT_TYPE_REFERENCE]
      public Assignment getSuperArtifactTypesAssignment_3_1() {
         return cSuperArtifactTypesAssignment_3_1;
      }

      //[XArtifactType|ARTIFACT_TYPE_REFERENCE]
      public CrossReference getSuperArtifactTypesXArtifactTypeCrossReference_3_1_0() {
         return cSuperArtifactTypesXArtifactTypeCrossReference_3_1_0;
      }

      //ARTIFACT_TYPE_REFERENCE
      public RuleCall getSuperArtifactTypesXArtifactTypeARTIFACT_TYPE_REFERENCEParserRuleCall_3_1_0_1() {
         return cSuperArtifactTypesXArtifactTypeARTIFACT_TYPE_REFERENCEParserRuleCall_3_1_0_1;
      }

      //("," superArtifactTypes+=[XArtifactType|ARTIFACT_TYPE_REFERENCE])*
      public Group getGroup_3_2() {
         return cGroup_3_2;
      }

      //","
      public Keyword getCommaKeyword_3_2_0() {
         return cCommaKeyword_3_2_0;
      }

      //superArtifactTypes+=[XArtifactType|ARTIFACT_TYPE_REFERENCE]
      public Assignment getSuperArtifactTypesAssignment_3_2_1() {
         return cSuperArtifactTypesAssignment_3_2_1;
      }

      //[XArtifactType|ARTIFACT_TYPE_REFERENCE]
      public CrossReference getSuperArtifactTypesXArtifactTypeCrossReference_3_2_1_0() {
         return cSuperArtifactTypesXArtifactTypeCrossReference_3_2_1_0;
      }

      //ARTIFACT_TYPE_REFERENCE
      public RuleCall getSuperArtifactTypesXArtifactTypeARTIFACT_TYPE_REFERENCEParserRuleCall_3_2_1_0_1() {
         return cSuperArtifactTypesXArtifactTypeARTIFACT_TYPE_REFERENCEParserRuleCall_3_2_1_0_1;
      }

      //"{"
      public Keyword getLeftCurlyBracketKeyword_4() {
         return cLeftCurlyBracketKeyword_4;
      }

      //"guid"
      public Keyword getGuidKeyword_5() {
         return cGuidKeyword_5;
      }

      //typeGuid=STRING
      public Assignment getTypeGuidAssignment_6() {
         return cTypeGuidAssignment_6;
      }

      //STRING
      public RuleCall getTypeGuidSTRINGTerminalRuleCall_6_0() {
         return cTypeGuidSTRINGTerminalRuleCall_6_0;
      }

      //validAttributeTypes+=XAttributeTypeRef*
      public Assignment getValidAttributeTypesAssignment_7() {
         return cValidAttributeTypesAssignment_7;
      }

      //XAttributeTypeRef
      public RuleCall getValidAttributeTypesXAttributeTypeRefParserRuleCall_7_0() {
         return cValidAttributeTypesXAttributeTypeRefParserRuleCall_7_0;
      }

      //"}"
      public Keyword getRightCurlyBracketKeyword_8() {
         return cRightCurlyBracketKeyword_8;
      }
   }

   public class XAttributeTypeRefElements extends AbstractParserRuleElementFinder {
      private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "XAttributeTypeRef");
      private final Group cGroup = (Group) rule.eContents().get(1);
      private final Keyword cAttributeKeyword_0 = (Keyword) cGroup.eContents().get(0);
      private final Assignment cValidAttributeTypeAssignment_1 = (Assignment) cGroup.eContents().get(1);
      private final CrossReference cValidAttributeTypeXAttributeTypeCrossReference_1_0 =
         (CrossReference) cValidAttributeTypeAssignment_1.eContents().get(0);
      private final RuleCall cValidAttributeTypeXAttributeTypeATTRIBUTE_TYPE_REFERENCEParserRuleCall_1_0_1 =
         (RuleCall) cValidAttributeTypeXAttributeTypeCrossReference_1_0.eContents().get(1);
      private final Group cGroup_2 = (Group) cGroup.eContents().get(2);
      private final Keyword cBranchGuidKeyword_2_0 = (Keyword) cGroup_2.eContents().get(0);
      private final Assignment cBranchGuidAssignment_2_1 = (Assignment) cGroup_2.eContents().get(1);
      private final RuleCall cBranchGuidSTRINGTerminalRuleCall_2_1_0 =
         (RuleCall) cBranchGuidAssignment_2_1.eContents().get(0);

      //XAttributeTypeRef:
      //	"attribute" validAttributeType=[XAttributeType|ATTRIBUTE_TYPE_REFERENCE] ("branchGuid" branchGuid=STRING)?;
      @Override
      public ParserRule getRule() {
         return rule;
      }

      //"attribute" validAttributeType=[XAttributeType|ATTRIBUTE_TYPE_REFERENCE] ("branchGuid" branchGuid=STRING)?
      public Group getGroup() {
         return cGroup;
      }

      //"attribute"
      public Keyword getAttributeKeyword_0() {
         return cAttributeKeyword_0;
      }

      //validAttributeType=[XAttributeType|ATTRIBUTE_TYPE_REFERENCE]
      public Assignment getValidAttributeTypeAssignment_1() {
         return cValidAttributeTypeAssignment_1;
      }

      //[XAttributeType|ATTRIBUTE_TYPE_REFERENCE]
      public CrossReference getValidAttributeTypeXAttributeTypeCrossReference_1_0() {
         return cValidAttributeTypeXAttributeTypeCrossReference_1_0;
      }

      //ATTRIBUTE_TYPE_REFERENCE
      public RuleCall getValidAttributeTypeXAttributeTypeATTRIBUTE_TYPE_REFERENCEParserRuleCall_1_0_1() {
         return cValidAttributeTypeXAttributeTypeATTRIBUTE_TYPE_REFERENCEParserRuleCall_1_0_1;
      }

      //("branchGuid" branchGuid=STRING)?
      public Group getGroup_2() {
         return cGroup_2;
      }

      //"branchGuid"
      public Keyword getBranchGuidKeyword_2_0() {
         return cBranchGuidKeyword_2_0;
      }

      //branchGuid=STRING
      public Assignment getBranchGuidAssignment_2_1() {
         return cBranchGuidAssignment_2_1;
      }

      //STRING
      public RuleCall getBranchGuidSTRINGTerminalRuleCall_2_1_0() {
         return cBranchGuidSTRINGTerminalRuleCall_2_1_0;
      }
   }

   public class XAttributeTypeElements extends AbstractParserRuleElementFinder {
      private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "XAttributeType");
      private final Group cGroup = (Group) rule.eContents().get(1);
      private final Keyword cAttributeTypeKeyword_0 = (Keyword) cGroup.eContents().get(0);
      private final Assignment cNameAssignment_1 = (Assignment) cGroup.eContents().get(1);
      private final RuleCall cNameATTRIBUTE_TYPE_REFERENCEParserRuleCall_1_0 =
         (RuleCall) cNameAssignment_1.eContents().get(0);
      private final Group cGroup_2 = (Group) cGroup.eContents().get(2);
      private final Keyword cExtendsKeyword_2_0 = (Keyword) cGroup_2.eContents().get(0);
      private final Assignment cBaseAttributeTypeAssignment_2_1 = (Assignment) cGroup_2.eContents().get(1);
      private final RuleCall cBaseAttributeTypeAttributeBaseTypeParserRuleCall_2_1_0 =
         (RuleCall) cBaseAttributeTypeAssignment_2_1.eContents().get(0);
      private final Group cGroup_3 = (Group) cGroup.eContents().get(3);
      private final Keyword cOverridesKeyword_3_0 = (Keyword) cGroup_3.eContents().get(0);
      private final Assignment cOverrideAssignment_3_1 = (Assignment) cGroup_3.eContents().get(1);
      private final CrossReference cOverrideXAttributeTypeCrossReference_3_1_0 =
         (CrossReference) cOverrideAssignment_3_1.eContents().get(0);
      private final RuleCall cOverrideXAttributeTypeATTRIBUTE_TYPE_REFERENCEParserRuleCall_3_1_0_1 =
         (RuleCall) cOverrideXAttributeTypeCrossReference_3_1_0.eContents().get(1);
      private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword) cGroup.eContents().get(4);
      private final Keyword cGuidKeyword_5 = (Keyword) cGroup.eContents().get(5);
      private final Assignment cTypeGuidAssignment_6 = (Assignment) cGroup.eContents().get(6);
      private final RuleCall cTypeGuidSTRINGTerminalRuleCall_6_0 = (RuleCall) cTypeGuidAssignment_6.eContents().get(0);
      private final Keyword cDataProviderKeyword_7 = (Keyword) cGroup.eContents().get(7);
      private final Assignment cDataProviderAssignment_8 = (Assignment) cGroup.eContents().get(8);
      private final Alternatives cDataProviderAlternatives_8_0 =
         (Alternatives) cDataProviderAssignment_8.eContents().get(0);
      private final Keyword cDataProviderDefaultAttributeDataProviderKeyword_8_0_0 =
         (Keyword) cDataProviderAlternatives_8_0.eContents().get(0);
      private final Keyword cDataProviderUriAttributeDataProviderKeyword_8_0_1 =
         (Keyword) cDataProviderAlternatives_8_0.eContents().get(1);
      private final RuleCall cDataProviderQUALIFIED_NAMEParserRuleCall_8_0_2 =
         (RuleCall) cDataProviderAlternatives_8_0.eContents().get(2);
      private final Keyword cMinKeyword_9 = (Keyword) cGroup.eContents().get(9);
      private final Assignment cMinAssignment_10 = (Assignment) cGroup.eContents().get(10);
      private final RuleCall cMinWHOLE_NUM_STRTerminalRuleCall_10_0 = (RuleCall) cMinAssignment_10.eContents().get(0);
      private final Keyword cMaxKeyword_11 = (Keyword) cGroup.eContents().get(11);
      private final Assignment cMaxAssignment_12 = (Assignment) cGroup.eContents().get(12);
      private final Alternatives cMaxAlternatives_12_0 = (Alternatives) cMaxAssignment_12.eContents().get(0);
      private final RuleCall cMaxWHOLE_NUM_STRTerminalRuleCall_12_0_0 =
         (RuleCall) cMaxAlternatives_12_0.eContents().get(0);
      private final Keyword cMaxUnlimitedKeyword_12_0_1 = (Keyword) cMaxAlternatives_12_0.eContents().get(1);
      private final Group cGroup_13 = (Group) cGroup.eContents().get(13);
      private final Keyword cTaggerIdKeyword_13_0 = (Keyword) cGroup_13.eContents().get(0);
      private final Assignment cTaggerIdAssignment_13_1 = (Assignment) cGroup_13.eContents().get(1);
      private final Alternatives cTaggerIdAlternatives_13_1_0 =
         (Alternatives) cTaggerIdAssignment_13_1.eContents().get(0);
      private final Keyword cTaggerIdDefaultAttributeTaggerProviderKeyword_13_1_0_0 =
         (Keyword) cTaggerIdAlternatives_13_1_0.eContents().get(0);
      private final RuleCall cTaggerIdQUALIFIED_NAMEParserRuleCall_13_1_0_1 =
         (RuleCall) cTaggerIdAlternatives_13_1_0.eContents().get(1);
      private final Group cGroup_14 = (Group) cGroup.eContents().get(14);
      private final Keyword cEnumTypeKeyword_14_0 = (Keyword) cGroup_14.eContents().get(0);
      private final Assignment cEnumTypeAssignment_14_1 = (Assignment) cGroup_14.eContents().get(1);
      private final CrossReference cEnumTypeXOseeEnumTypeCrossReference_14_1_0 =
         (CrossReference) cEnumTypeAssignment_14_1.eContents().get(0);
      private final RuleCall cEnumTypeXOseeEnumTypeENUM_TYPE_REFERENCEParserRuleCall_14_1_0_1 =
         (RuleCall) cEnumTypeXOseeEnumTypeCrossReference_14_1_0.eContents().get(1);
      private final Group cGroup_15 = (Group) cGroup.eContents().get(15);
      private final Keyword cDescriptionKeyword_15_0 = (Keyword) cGroup_15.eContents().get(0);
      private final Assignment cDescriptionAssignment_15_1 = (Assignment) cGroup_15.eContents().get(1);
      private final RuleCall cDescriptionSTRINGTerminalRuleCall_15_1_0 =
         (RuleCall) cDescriptionAssignment_15_1.eContents().get(0);
      private final Group cGroup_16 = (Group) cGroup.eContents().get(16);
      private final Keyword cDefaultValueKeyword_16_0 = (Keyword) cGroup_16.eContents().get(0);
      private final Assignment cDefaultValueAssignment_16_1 = (Assignment) cGroup_16.eContents().get(1);
      private final RuleCall cDefaultValueSTRINGTerminalRuleCall_16_1_0 =
         (RuleCall) cDefaultValueAssignment_16_1.eContents().get(0);
      private final Group cGroup_17 = (Group) cGroup.eContents().get(17);
      private final Keyword cFileExtensionKeyword_17_0 = (Keyword) cGroup_17.eContents().get(0);
      private final Assignment cFileExtensionAssignment_17_1 = (Assignment) cGroup_17.eContents().get(1);
      private final RuleCall cFileExtensionSTRINGTerminalRuleCall_17_1_0 =
         (RuleCall) cFileExtensionAssignment_17_1.eContents().get(0);
      private final Keyword cRightCurlyBracketKeyword_18 = (Keyword) cGroup.eContents().get(18);

      //XAttributeType:
      //	"attributeType" name=ATTRIBUTE_TYPE_REFERENCE ("extends" baseAttributeType=AttributeBaseType) ("overrides"
      //	override=[XAttributeType|ATTRIBUTE_TYPE_REFERENCE])? "{" "guid" typeGuid=STRING "dataProvider"
      //	dataProvider=("DefaultAttributeDataProvider" | "UriAttributeDataProvider" | QUALIFIED_NAME) "min" min=WHOLE_NUM_STR
      //	"max" max=(WHOLE_NUM_STR | "unlimited") ("taggerId" taggerId=("DefaultAttributeTaggerProvider" | QUALIFIED_NAME))?
      //	("enumType" enumType=[XOseeEnumType|ENUM_TYPE_REFERENCE])? ("description" description=STRING)? ("defaultValue"
      //	defaultValue=STRING)? ("fileExtension" fileExtension=STRING)? "}";
      @Override
      public ParserRule getRule() {
         return rule;
      }

      //"attributeType" name=ATTRIBUTE_TYPE_REFERENCE ("extends" baseAttributeType=AttributeBaseType) ("overrides"
      //override=[XAttributeType|ATTRIBUTE_TYPE_REFERENCE])? "{" "guid" typeGuid=STRING "dataProvider"
      //dataProvider=("DefaultAttributeDataProvider" | "UriAttributeDataProvider" | QUALIFIED_NAME) "min" min=WHOLE_NUM_STR
      //"max" max=(WHOLE_NUM_STR | "unlimited") ("taggerId" taggerId=("DefaultAttributeTaggerProvider" | QUALIFIED_NAME))?
      //("enumType" enumType=[XOseeEnumType|ENUM_TYPE_REFERENCE])? ("description" description=STRING)? ("defaultValue"
      //defaultValue=STRING)? ("fileExtension" fileExtension=STRING)? "}"
      public Group getGroup() {
         return cGroup;
      }

      //"attributeType"
      public Keyword getAttributeTypeKeyword_0() {
         return cAttributeTypeKeyword_0;
      }

      //name=ATTRIBUTE_TYPE_REFERENCE
      public Assignment getNameAssignment_1() {
         return cNameAssignment_1;
      }

      //ATTRIBUTE_TYPE_REFERENCE
      public RuleCall getNameATTRIBUTE_TYPE_REFERENCEParserRuleCall_1_0() {
         return cNameATTRIBUTE_TYPE_REFERENCEParserRuleCall_1_0;
      }

      //"extends" baseAttributeType=AttributeBaseType
      public Group getGroup_2() {
         return cGroup_2;
      }

      //"extends"
      public Keyword getExtendsKeyword_2_0() {
         return cExtendsKeyword_2_0;
      }

      //baseAttributeType=AttributeBaseType
      public Assignment getBaseAttributeTypeAssignment_2_1() {
         return cBaseAttributeTypeAssignment_2_1;
      }

      //AttributeBaseType
      public RuleCall getBaseAttributeTypeAttributeBaseTypeParserRuleCall_2_1_0() {
         return cBaseAttributeTypeAttributeBaseTypeParserRuleCall_2_1_0;
      }

      //("overrides" override=[XAttributeType|ATTRIBUTE_TYPE_REFERENCE])?
      public Group getGroup_3() {
         return cGroup_3;
      }

      //"overrides"
      public Keyword getOverridesKeyword_3_0() {
         return cOverridesKeyword_3_0;
      }

      //override=[XAttributeType|ATTRIBUTE_TYPE_REFERENCE]
      public Assignment getOverrideAssignment_3_1() {
         return cOverrideAssignment_3_1;
      }

      //[XAttributeType|ATTRIBUTE_TYPE_REFERENCE]
      public CrossReference getOverrideXAttributeTypeCrossReference_3_1_0() {
         return cOverrideXAttributeTypeCrossReference_3_1_0;
      }

      //ATTRIBUTE_TYPE_REFERENCE
      public RuleCall getOverrideXAttributeTypeATTRIBUTE_TYPE_REFERENCEParserRuleCall_3_1_0_1() {
         return cOverrideXAttributeTypeATTRIBUTE_TYPE_REFERENCEParserRuleCall_3_1_0_1;
      }

      //"{"
      public Keyword getLeftCurlyBracketKeyword_4() {
         return cLeftCurlyBracketKeyword_4;
      }

      //"guid"
      public Keyword getGuidKeyword_5() {
         return cGuidKeyword_5;
      }

      //typeGuid=STRING
      public Assignment getTypeGuidAssignment_6() {
         return cTypeGuidAssignment_6;
      }

      //STRING
      public RuleCall getTypeGuidSTRINGTerminalRuleCall_6_0() {
         return cTypeGuidSTRINGTerminalRuleCall_6_0;
      }

      //"dataProvider"
      public Keyword getDataProviderKeyword_7() {
         return cDataProviderKeyword_7;
      }

      //dataProvider=("DefaultAttributeDataProvider" | "UriAttributeDataProvider" | QUALIFIED_NAME)
      public Assignment getDataProviderAssignment_8() {
         return cDataProviderAssignment_8;
      }

      //"DefaultAttributeDataProvider" | "UriAttributeDataProvider" | QUALIFIED_NAME
      public Alternatives getDataProviderAlternatives_8_0() {
         return cDataProviderAlternatives_8_0;
      }

      //"DefaultAttributeDataProvider"
      public Keyword getDataProviderDefaultAttributeDataProviderKeyword_8_0_0() {
         return cDataProviderDefaultAttributeDataProviderKeyword_8_0_0;
      }

      //"UriAttributeDataProvider"
      public Keyword getDataProviderUriAttributeDataProviderKeyword_8_0_1() {
         return cDataProviderUriAttributeDataProviderKeyword_8_0_1;
      }

      //QUALIFIED_NAME
      public RuleCall getDataProviderQUALIFIED_NAMEParserRuleCall_8_0_2() {
         return cDataProviderQUALIFIED_NAMEParserRuleCall_8_0_2;
      }

      //"min"
      public Keyword getMinKeyword_9() {
         return cMinKeyword_9;
      }

      //min=WHOLE_NUM_STR
      public Assignment getMinAssignment_10() {
         return cMinAssignment_10;
      }

      //WHOLE_NUM_STR
      public RuleCall getMinWHOLE_NUM_STRTerminalRuleCall_10_0() {
         return cMinWHOLE_NUM_STRTerminalRuleCall_10_0;
      }

      //"max"
      public Keyword getMaxKeyword_11() {
         return cMaxKeyword_11;
      }

      //max=(WHOLE_NUM_STR | "unlimited")
      public Assignment getMaxAssignment_12() {
         return cMaxAssignment_12;
      }

      //WHOLE_NUM_STR | "unlimited"
      public Alternatives getMaxAlternatives_12_0() {
         return cMaxAlternatives_12_0;
      }

      //WHOLE_NUM_STR
      public RuleCall getMaxWHOLE_NUM_STRTerminalRuleCall_12_0_0() {
         return cMaxWHOLE_NUM_STRTerminalRuleCall_12_0_0;
      }

      //"unlimited"
      public Keyword getMaxUnlimitedKeyword_12_0_1() {
         return cMaxUnlimitedKeyword_12_0_1;
      }

      //("taggerId" taggerId=("DefaultAttributeTaggerProvider" | QUALIFIED_NAME))?
      public Group getGroup_13() {
         return cGroup_13;
      }

      //"taggerId"
      public Keyword getTaggerIdKeyword_13_0() {
         return cTaggerIdKeyword_13_0;
      }

      //taggerId=("DefaultAttributeTaggerProvider" | QUALIFIED_NAME)
      public Assignment getTaggerIdAssignment_13_1() {
         return cTaggerIdAssignment_13_1;
      }

      //"DefaultAttributeTaggerProvider" | QUALIFIED_NAME
      public Alternatives getTaggerIdAlternatives_13_1_0() {
         return cTaggerIdAlternatives_13_1_0;
      }

      //"DefaultAttributeTaggerProvider"
      public Keyword getTaggerIdDefaultAttributeTaggerProviderKeyword_13_1_0_0() {
         return cTaggerIdDefaultAttributeTaggerProviderKeyword_13_1_0_0;
      }

      //QUALIFIED_NAME
      public RuleCall getTaggerIdQUALIFIED_NAMEParserRuleCall_13_1_0_1() {
         return cTaggerIdQUALIFIED_NAMEParserRuleCall_13_1_0_1;
      }

      //("enumType" enumType=[XOseeEnumType|ENUM_TYPE_REFERENCE])?
      public Group getGroup_14() {
         return cGroup_14;
      }

      //"enumType"
      public Keyword getEnumTypeKeyword_14_0() {
         return cEnumTypeKeyword_14_0;
      }

      //enumType=[XOseeEnumType|ENUM_TYPE_REFERENCE]
      public Assignment getEnumTypeAssignment_14_1() {
         return cEnumTypeAssignment_14_1;
      }

      //[XOseeEnumType|ENUM_TYPE_REFERENCE]
      public CrossReference getEnumTypeXOseeEnumTypeCrossReference_14_1_0() {
         return cEnumTypeXOseeEnumTypeCrossReference_14_1_0;
      }

      //ENUM_TYPE_REFERENCE
      public RuleCall getEnumTypeXOseeEnumTypeENUM_TYPE_REFERENCEParserRuleCall_14_1_0_1() {
         return cEnumTypeXOseeEnumTypeENUM_TYPE_REFERENCEParserRuleCall_14_1_0_1;
      }

      //("description" description=STRING)?
      public Group getGroup_15() {
         return cGroup_15;
      }

      //"description"
      public Keyword getDescriptionKeyword_15_0() {
         return cDescriptionKeyword_15_0;
      }

      //description=STRING
      public Assignment getDescriptionAssignment_15_1() {
         return cDescriptionAssignment_15_1;
      }

      //STRING
      public RuleCall getDescriptionSTRINGTerminalRuleCall_15_1_0() {
         return cDescriptionSTRINGTerminalRuleCall_15_1_0;
      }

      //("defaultValue" defaultValue=STRING)?
      public Group getGroup_16() {
         return cGroup_16;
      }

      //"defaultValue"
      public Keyword getDefaultValueKeyword_16_0() {
         return cDefaultValueKeyword_16_0;
      }

      //defaultValue=STRING
      public Assignment getDefaultValueAssignment_16_1() {
         return cDefaultValueAssignment_16_1;
      }

      //STRING
      public RuleCall getDefaultValueSTRINGTerminalRuleCall_16_1_0() {
         return cDefaultValueSTRINGTerminalRuleCall_16_1_0;
      }

      //("fileExtension" fileExtension=STRING)?
      public Group getGroup_17() {
         return cGroup_17;
      }

      //"fileExtension"
      public Keyword getFileExtensionKeyword_17_0() {
         return cFileExtensionKeyword_17_0;
      }

      //fileExtension=STRING
      public Assignment getFileExtensionAssignment_17_1() {
         return cFileExtensionAssignment_17_1;
      }

      //STRING
      public RuleCall getFileExtensionSTRINGTerminalRuleCall_17_1_0() {
         return cFileExtensionSTRINGTerminalRuleCall_17_1_0;
      }

      //"}"
      public Keyword getRightCurlyBracketKeyword_18() {
         return cRightCurlyBracketKeyword_18;
      }
   }

   public class AttributeBaseTypeElements extends AbstractParserRuleElementFinder {
      private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AttributeBaseType");
      private final Alternatives cAlternatives = (Alternatives) rule.eContents().get(1);
      private final Keyword cBooleanAttributeKeyword_0 = (Keyword) cAlternatives.eContents().get(0);
      private final Keyword cCompressedContentAttributeKeyword_1 = (Keyword) cAlternatives.eContents().get(1);
      private final Keyword cDateAttributeKeyword_2 = (Keyword) cAlternatives.eContents().get(2);
      private final Keyword cEnumeratedAttributeKeyword_3 = (Keyword) cAlternatives.eContents().get(3);
      private final Keyword cFloatingPointAttributeKeyword_4 = (Keyword) cAlternatives.eContents().get(4);
      private final Keyword cIntegerAttributeKeyword_5 = (Keyword) cAlternatives.eContents().get(5);
      private final Keyword cJavaObjectAttributeKeyword_6 = (Keyword) cAlternatives.eContents().get(6);
      private final Keyword cStringAttributeKeyword_7 = (Keyword) cAlternatives.eContents().get(7);
      private final Keyword cWordAttributeKeyword_8 = (Keyword) cAlternatives.eContents().get(8);
      private final RuleCall cQUALIFIED_NAMEParserRuleCall_9 = (RuleCall) cAlternatives.eContents().get(9);

      //AttributeBaseType returns ecore::EString:
      //	"BooleanAttribute" | "CompressedContentAttribute" | "DateAttribute" | "EnumeratedAttribute" | "FloatingPointAttribute"
      //	| "IntegerAttribute" | "JavaObjectAttribute" | "StringAttribute" | "WordAttribute" | QUALIFIED_NAME;
      @Override
      public ParserRule getRule() {
         return rule;
      }

      //"BooleanAttribute" | "CompressedContentAttribute" | "DateAttribute" | "EnumeratedAttribute" | "FloatingPointAttribute" |
      //"IntegerAttribute" | "JavaObjectAttribute" | "StringAttribute" | "WordAttribute" | QUALIFIED_NAME
      public Alternatives getAlternatives() {
         return cAlternatives;
      }

      //"BooleanAttribute"
      public Keyword getBooleanAttributeKeyword_0() {
         return cBooleanAttributeKeyword_0;
      }

      //"CompressedContentAttribute"
      public Keyword getCompressedContentAttributeKeyword_1() {
         return cCompressedContentAttributeKeyword_1;
      }

      //"DateAttribute"
      public Keyword getDateAttributeKeyword_2() {
         return cDateAttributeKeyword_2;
      }

      //"EnumeratedAttribute"
      public Keyword getEnumeratedAttributeKeyword_3() {
         return cEnumeratedAttributeKeyword_3;
      }

      //"FloatingPointAttribute"
      public Keyword getFloatingPointAttributeKeyword_4() {
         return cFloatingPointAttributeKeyword_4;
      }

      //"IntegerAttribute"
      public Keyword getIntegerAttributeKeyword_5() {
         return cIntegerAttributeKeyword_5;
      }

      //"JavaObjectAttribute"
      public Keyword getJavaObjectAttributeKeyword_6() {
         return cJavaObjectAttributeKeyword_6;
      }

      //"StringAttribute"
      public Keyword getStringAttributeKeyword_7() {
         return cStringAttributeKeyword_7;
      }

      //"WordAttribute"
      public Keyword getWordAttributeKeyword_8() {
         return cWordAttributeKeyword_8;
      }

      //QUALIFIED_NAME
      public RuleCall getQUALIFIED_NAMEParserRuleCall_9() {
         return cQUALIFIED_NAMEParserRuleCall_9;
      }
   }

   public class XOseeEnumTypeElements extends AbstractParserRuleElementFinder {
      private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "XOseeEnumType");
      private final Group cGroup = (Group) rule.eContents().get(1);
      private final Keyword cOseeEnumTypeKeyword_0 = (Keyword) cGroup.eContents().get(0);
      private final Assignment cNameAssignment_1 = (Assignment) cGroup.eContents().get(1);
      private final RuleCall cNameENUM_TYPE_REFERENCEParserRuleCall_1_0 = (RuleCall) cNameAssignment_1.eContents().get(
         0);
      private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword) cGroup.eContents().get(2);
      private final Keyword cGuidKeyword_3 = (Keyword) cGroup.eContents().get(3);
      private final Assignment cTypeGuidAssignment_4 = (Assignment) cGroup.eContents().get(4);
      private final RuleCall cTypeGuidSTRINGTerminalRuleCall_4_0 = (RuleCall) cTypeGuidAssignment_4.eContents().get(0);
      private final Assignment cEnumEntriesAssignment_5 = (Assignment) cGroup.eContents().get(5);
      private final RuleCall cEnumEntriesXOseeEnumEntryParserRuleCall_5_0 =
         (RuleCall) cEnumEntriesAssignment_5.eContents().get(0);
      private final Keyword cRightCurlyBracketKeyword_6 = (Keyword) cGroup.eContents().get(6);

      //XOseeEnumType:
      //	"oseeEnumType" name=ENUM_TYPE_REFERENCE "{" "guid" typeGuid=STRING enumEntries+=XOseeEnumEntry* "}";
      @Override
      public ParserRule getRule() {
         return rule;
      }

      //"oseeEnumType" name=ENUM_TYPE_REFERENCE "{" "guid" typeGuid=STRING enumEntries+=XOseeEnumEntry* "}"
      public Group getGroup() {
         return cGroup;
      }

      //"oseeEnumType"
      public Keyword getOseeEnumTypeKeyword_0() {
         return cOseeEnumTypeKeyword_0;
      }

      //name=ENUM_TYPE_REFERENCE
      public Assignment getNameAssignment_1() {
         return cNameAssignment_1;
      }

      //ENUM_TYPE_REFERENCE
      public RuleCall getNameENUM_TYPE_REFERENCEParserRuleCall_1_0() {
         return cNameENUM_TYPE_REFERENCEParserRuleCall_1_0;
      }

      //"{"
      public Keyword getLeftCurlyBracketKeyword_2() {
         return cLeftCurlyBracketKeyword_2;
      }

      //"guid"
      public Keyword getGuidKeyword_3() {
         return cGuidKeyword_3;
      }

      //typeGuid=STRING
      public Assignment getTypeGuidAssignment_4() {
         return cTypeGuidAssignment_4;
      }

      //STRING
      public RuleCall getTypeGuidSTRINGTerminalRuleCall_4_0() {
         return cTypeGuidSTRINGTerminalRuleCall_4_0;
      }

      //enumEntries+=XOseeEnumEntry*
      public Assignment getEnumEntriesAssignment_5() {
         return cEnumEntriesAssignment_5;
      }

      //XOseeEnumEntry
      public RuleCall getEnumEntriesXOseeEnumEntryParserRuleCall_5_0() {
         return cEnumEntriesXOseeEnumEntryParserRuleCall_5_0;
      }

      //"}"
      public Keyword getRightCurlyBracketKeyword_6() {
         return cRightCurlyBracketKeyword_6;
      }
   }

   public class XOseeEnumEntryElements extends AbstractParserRuleElementFinder {
      private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "XOseeEnumEntry");
      private final Group cGroup = (Group) rule.eContents().get(1);
      private final Keyword cEntryKeyword_0 = (Keyword) cGroup.eContents().get(0);
      private final Assignment cNameAssignment_1 = (Assignment) cGroup.eContents().get(1);
      private final RuleCall cNameENUM_ENTRY_TYPE_REFERENCEParserRuleCall_1_0 =
         (RuleCall) cNameAssignment_1.eContents().get(0);
      private final Assignment cOrdinalAssignment_2 = (Assignment) cGroup.eContents().get(2);
      private final RuleCall cOrdinalWHOLE_NUM_STRTerminalRuleCall_2_0 =
         (RuleCall) cOrdinalAssignment_2.eContents().get(0);
      private final Group cGroup_3 = (Group) cGroup.eContents().get(3);
      private final Keyword cEntryGuidKeyword_3_0 = (Keyword) cGroup_3.eContents().get(0);
      private final Assignment cEntryGuidAssignment_3_1 = (Assignment) cGroup_3.eContents().get(1);
      private final RuleCall cEntryGuidSTRINGTerminalRuleCall_3_1_0 =
         (RuleCall) cEntryGuidAssignment_3_1.eContents().get(0);

      //XOseeEnumEntry:
      //	"entry" name=ENUM_ENTRY_TYPE_REFERENCE ordinal=WHOLE_NUM_STR? ("entryGuid" entryGuid=STRING)?;
      @Override
      public ParserRule getRule() {
         return rule;
      }

      //"entry" name=ENUM_ENTRY_TYPE_REFERENCE ordinal=WHOLE_NUM_STR? ("entryGuid" entryGuid=STRING)?
      public Group getGroup() {
         return cGroup;
      }

      //"entry"
      public Keyword getEntryKeyword_0() {
         return cEntryKeyword_0;
      }

      //name=ENUM_ENTRY_TYPE_REFERENCE
      public Assignment getNameAssignment_1() {
         return cNameAssignment_1;
      }

      //ENUM_ENTRY_TYPE_REFERENCE
      public RuleCall getNameENUM_ENTRY_TYPE_REFERENCEParserRuleCall_1_0() {
         return cNameENUM_ENTRY_TYPE_REFERENCEParserRuleCall_1_0;
      }

      //ordinal=WHOLE_NUM_STR?
      public Assignment getOrdinalAssignment_2() {
         return cOrdinalAssignment_2;
      }

      //WHOLE_NUM_STR
      public RuleCall getOrdinalWHOLE_NUM_STRTerminalRuleCall_2_0() {
         return cOrdinalWHOLE_NUM_STRTerminalRuleCall_2_0;
      }

      //("entryGuid" entryGuid=STRING)?
      public Group getGroup_3() {
         return cGroup_3;
      }

      //"entryGuid"
      public Keyword getEntryGuidKeyword_3_0() {
         return cEntryGuidKeyword_3_0;
      }

      //entryGuid=STRING
      public Assignment getEntryGuidAssignment_3_1() {
         return cEntryGuidAssignment_3_1;
      }

      //STRING
      public RuleCall getEntryGuidSTRINGTerminalRuleCall_3_1_0() {
         return cEntryGuidSTRINGTerminalRuleCall_3_1_0;
      }
   }

   public class XOseeEnumOverrideElements extends AbstractParserRuleElementFinder {
      private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "XOseeEnumOverride");
      private final Group cGroup = (Group) rule.eContents().get(1);
      private final Keyword cOverridesEnumKeyword_0 = (Keyword) cGroup.eContents().get(0);
      private final Assignment cOverridenEnumTypeAssignment_1 = (Assignment) cGroup.eContents().get(1);
      private final CrossReference cOverridenEnumTypeXOseeEnumTypeCrossReference_1_0 =
         (CrossReference) cOverridenEnumTypeAssignment_1.eContents().get(0);
      private final RuleCall cOverridenEnumTypeXOseeEnumTypeENUM_TYPE_REFERENCEParserRuleCall_1_0_1 =
         (RuleCall) cOverridenEnumTypeXOseeEnumTypeCrossReference_1_0.eContents().get(1);
      private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword) cGroup.eContents().get(2);
      private final Assignment cInheritAllAssignment_3 = (Assignment) cGroup.eContents().get(3);
      private final Keyword cInheritAllInheritAllKeyword_3_0 = (Keyword) cInheritAllAssignment_3.eContents().get(0);
      private final Assignment cOverrideOptionsAssignment_4 = (Assignment) cGroup.eContents().get(4);
      private final RuleCall cOverrideOptionsOverrideOptionParserRuleCall_4_0 =
         (RuleCall) cOverrideOptionsAssignment_4.eContents().get(0);
      private final Keyword cRightCurlyBracketKeyword_5 = (Keyword) cGroup.eContents().get(5);

      //XOseeEnumOverride:
      //	"overrides enum" overridenEnumType=[XOseeEnumType|ENUM_TYPE_REFERENCE] "{" inheritAll?="inheritAll"?
      //	overrideOptions+=OverrideOption* "}";
      @Override
      public ParserRule getRule() {
         return rule;
      }

      //"overrides enum" overridenEnumType=[XOseeEnumType|ENUM_TYPE_REFERENCE] "{" inheritAll?="inheritAll"?
      //overrideOptions+=OverrideOption* "}"
      public Group getGroup() {
         return cGroup;
      }

      //"overrides enum"
      public Keyword getOverridesEnumKeyword_0() {
         return cOverridesEnumKeyword_0;
      }

      //overridenEnumType=[XOseeEnumType|ENUM_TYPE_REFERENCE]
      public Assignment getOverridenEnumTypeAssignment_1() {
         return cOverridenEnumTypeAssignment_1;
      }

      //[XOseeEnumType|ENUM_TYPE_REFERENCE]
      public CrossReference getOverridenEnumTypeXOseeEnumTypeCrossReference_1_0() {
         return cOverridenEnumTypeXOseeEnumTypeCrossReference_1_0;
      }

      //ENUM_TYPE_REFERENCE
      public RuleCall getOverridenEnumTypeXOseeEnumTypeENUM_TYPE_REFERENCEParserRuleCall_1_0_1() {
         return cOverridenEnumTypeXOseeEnumTypeENUM_TYPE_REFERENCEParserRuleCall_1_0_1;
      }

      //"{"
      public Keyword getLeftCurlyBracketKeyword_2() {
         return cLeftCurlyBracketKeyword_2;
      }

      //inheritAll?="inheritAll"?
      public Assignment getInheritAllAssignment_3() {
         return cInheritAllAssignment_3;
      }

      //"inheritAll"
      public Keyword getInheritAllInheritAllKeyword_3_0() {
         return cInheritAllInheritAllKeyword_3_0;
      }

      //overrideOptions+=OverrideOption*
      public Assignment getOverrideOptionsAssignment_4() {
         return cOverrideOptionsAssignment_4;
      }

      //OverrideOption
      public RuleCall getOverrideOptionsOverrideOptionParserRuleCall_4_0() {
         return cOverrideOptionsOverrideOptionParserRuleCall_4_0;
      }

      //"}"
      public Keyword getRightCurlyBracketKeyword_5() {
         return cRightCurlyBracketKeyword_5;
      }
   }

   public class OverrideOptionElements extends AbstractParserRuleElementFinder {
      private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "OverrideOption");
      private final Alternatives cAlternatives = (Alternatives) rule.eContents().get(1);
      private final RuleCall cAddEnumParserRuleCall_0 = (RuleCall) cAlternatives.eContents().get(0);
      private final RuleCall cRemoveEnumParserRuleCall_1 = (RuleCall) cAlternatives.eContents().get(1);

      //OverrideOption:
      //	AddEnum | RemoveEnum;
      @Override
      public ParserRule getRule() {
         return rule;
      }

      //AddEnum | RemoveEnum
      public Alternatives getAlternatives() {
         return cAlternatives;
      }

      //AddEnum
      public RuleCall getAddEnumParserRuleCall_0() {
         return cAddEnumParserRuleCall_0;
      }

      //RemoveEnum
      public RuleCall getRemoveEnumParserRuleCall_1() {
         return cRemoveEnumParserRuleCall_1;
      }
   }

   public class AddEnumElements extends AbstractParserRuleElementFinder {
      private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AddEnum");
      private final Group cGroup = (Group) rule.eContents().get(1);
      private final Keyword cAddKeyword_0 = (Keyword) cGroup.eContents().get(0);
      private final Assignment cEnumEntryAssignment_1 = (Assignment) cGroup.eContents().get(1);
      private final RuleCall cEnumEntryENUM_ENTRY_TYPE_REFERENCEParserRuleCall_1_0 =
         (RuleCall) cEnumEntryAssignment_1.eContents().get(0);
      private final Assignment cOrdinalAssignment_2 = (Assignment) cGroup.eContents().get(2);
      private final RuleCall cOrdinalWHOLE_NUM_STRTerminalRuleCall_2_0 =
         (RuleCall) cOrdinalAssignment_2.eContents().get(0);
      private final Group cGroup_3 = (Group) cGroup.eContents().get(3);
      private final Keyword cEntryGuidKeyword_3_0 = (Keyword) cGroup_3.eContents().get(0);
      private final Assignment cEntryGuidAssignment_3_1 = (Assignment) cGroup_3.eContents().get(1);
      private final RuleCall cEntryGuidSTRINGTerminalRuleCall_3_1_0 =
         (RuleCall) cEntryGuidAssignment_3_1.eContents().get(0);

      //AddEnum:
      //	"add" enumEntry=ENUM_ENTRY_TYPE_REFERENCE ordinal=WHOLE_NUM_STR? ("entryGuid" entryGuid=STRING)?;
      @Override
      public ParserRule getRule() {
         return rule;
      }

      //"add" enumEntry=ENUM_ENTRY_TYPE_REFERENCE ordinal=WHOLE_NUM_STR? ("entryGuid" entryGuid=STRING)?
      public Group getGroup() {
         return cGroup;
      }

      //"add"
      public Keyword getAddKeyword_0() {
         return cAddKeyword_0;
      }

      //enumEntry=ENUM_ENTRY_TYPE_REFERENCE
      public Assignment getEnumEntryAssignment_1() {
         return cEnumEntryAssignment_1;
      }

      //ENUM_ENTRY_TYPE_REFERENCE
      public RuleCall getEnumEntryENUM_ENTRY_TYPE_REFERENCEParserRuleCall_1_0() {
         return cEnumEntryENUM_ENTRY_TYPE_REFERENCEParserRuleCall_1_0;
      }

      //ordinal=WHOLE_NUM_STR?
      public Assignment getOrdinalAssignment_2() {
         return cOrdinalAssignment_2;
      }

      //WHOLE_NUM_STR
      public RuleCall getOrdinalWHOLE_NUM_STRTerminalRuleCall_2_0() {
         return cOrdinalWHOLE_NUM_STRTerminalRuleCall_2_0;
      }

      //("entryGuid" entryGuid=STRING)?
      public Group getGroup_3() {
         return cGroup_3;
      }

      //"entryGuid"
      public Keyword getEntryGuidKeyword_3_0() {
         return cEntryGuidKeyword_3_0;
      }

      //entryGuid=STRING
      public Assignment getEntryGuidAssignment_3_1() {
         return cEntryGuidAssignment_3_1;
      }

      //STRING
      public RuleCall getEntryGuidSTRINGTerminalRuleCall_3_1_0() {
         return cEntryGuidSTRINGTerminalRuleCall_3_1_0;
      }
   }

   public class RemoveEnumElements extends AbstractParserRuleElementFinder {
      private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "RemoveEnum");
      private final Group cGroup = (Group) rule.eContents().get(1);
      private final Keyword cRemoveKeyword_0 = (Keyword) cGroup.eContents().get(0);
      private final Assignment cEnumEntryAssignment_1 = (Assignment) cGroup.eContents().get(1);
      private final CrossReference cEnumEntryXOseeEnumEntryCrossReference_1_0 =
         (CrossReference) cEnumEntryAssignment_1.eContents().get(0);
      private final RuleCall cEnumEntryXOseeEnumEntryENUM_ENTRY_TYPE_REFERENCEParserRuleCall_1_0_1 =
         (RuleCall) cEnumEntryXOseeEnumEntryCrossReference_1_0.eContents().get(1);

      //RemoveEnum:
      //	"remove" enumEntry=[XOseeEnumEntry|ENUM_ENTRY_TYPE_REFERENCE];
      @Override
      public ParserRule getRule() {
         return rule;
      }

      //"remove" enumEntry=[XOseeEnumEntry|ENUM_ENTRY_TYPE_REFERENCE]
      public Group getGroup() {
         return cGroup;
      }

      //"remove"
      public Keyword getRemoveKeyword_0() {
         return cRemoveKeyword_0;
      }

      //enumEntry=[XOseeEnumEntry|ENUM_ENTRY_TYPE_REFERENCE]
      public Assignment getEnumEntryAssignment_1() {
         return cEnumEntryAssignment_1;
      }

      //[XOseeEnumEntry|ENUM_ENTRY_TYPE_REFERENCE]
      public CrossReference getEnumEntryXOseeEnumEntryCrossReference_1_0() {
         return cEnumEntryXOseeEnumEntryCrossReference_1_0;
      }

      //ENUM_ENTRY_TYPE_REFERENCE
      public RuleCall getEnumEntryXOseeEnumEntryENUM_ENTRY_TYPE_REFERENCEParserRuleCall_1_0_1() {
         return cEnumEntryXOseeEnumEntryENUM_ENTRY_TYPE_REFERENCEParserRuleCall_1_0_1;
      }
   }

   public class XRelationTypeElements extends AbstractParserRuleElementFinder {
      private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "XRelationType");
      private final Group cGroup = (Group) rule.eContents().get(1);
      private final Keyword cRelationTypeKeyword_0 = (Keyword) cGroup.eContents().get(0);
      private final Assignment cNameAssignment_1 = (Assignment) cGroup.eContents().get(1);
      private final RuleCall cNameRELATION_TYPE_REFERENCEParserRuleCall_1_0 =
         (RuleCall) cNameAssignment_1.eContents().get(0);
      private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword) cGroup.eContents().get(2);
      private final Keyword cGuidKeyword_3 = (Keyword) cGroup.eContents().get(3);
      private final Assignment cTypeGuidAssignment_4 = (Assignment) cGroup.eContents().get(4);
      private final RuleCall cTypeGuidSTRINGTerminalRuleCall_4_0 = (RuleCall) cTypeGuidAssignment_4.eContents().get(0);
      private final Keyword cSideANameKeyword_5 = (Keyword) cGroup.eContents().get(5);
      private final Assignment cSideANameAssignment_6 = (Assignment) cGroup.eContents().get(6);
      private final RuleCall cSideANameSTRINGTerminalRuleCall_6_0 =
         (RuleCall) cSideANameAssignment_6.eContents().get(0);
      private final Keyword cSideAArtifactTypeKeyword_7 = (Keyword) cGroup.eContents().get(7);
      private final Assignment cSideAArtifactTypeAssignment_8 = (Assignment) cGroup.eContents().get(8);
      private final CrossReference cSideAArtifactTypeXArtifactTypeCrossReference_8_0 =
         (CrossReference) cSideAArtifactTypeAssignment_8.eContents().get(0);
      private final RuleCall cSideAArtifactTypeXArtifactTypeARTIFACT_TYPE_REFERENCEParserRuleCall_8_0_1 =
         (RuleCall) cSideAArtifactTypeXArtifactTypeCrossReference_8_0.eContents().get(1);
      private final Keyword cSideBNameKeyword_9 = (Keyword) cGroup.eContents().get(9);
      private final Assignment cSideBNameAssignment_10 = (Assignment) cGroup.eContents().get(10);
      private final RuleCall cSideBNameSTRINGTerminalRuleCall_10_0 =
         (RuleCall) cSideBNameAssignment_10.eContents().get(0);
      private final Keyword cSideBArtifactTypeKeyword_11 = (Keyword) cGroup.eContents().get(11);
      private final Assignment cSideBArtifactTypeAssignment_12 = (Assignment) cGroup.eContents().get(12);
      private final CrossReference cSideBArtifactTypeXArtifactTypeCrossReference_12_0 =
         (CrossReference) cSideBArtifactTypeAssignment_12.eContents().get(0);
      private final RuleCall cSideBArtifactTypeXArtifactTypeARTIFACT_TYPE_REFERENCEParserRuleCall_12_0_1 =
         (RuleCall) cSideBArtifactTypeXArtifactTypeCrossReference_12_0.eContents().get(1);
      private final Keyword cDefaultOrderTypeKeyword_13 = (Keyword) cGroup.eContents().get(13);
      private final Assignment cDefaultOrderTypeAssignment_14 = (Assignment) cGroup.eContents().get(14);
      private final RuleCall cDefaultOrderTypeRelationOrderTypeParserRuleCall_14_0 =
         (RuleCall) cDefaultOrderTypeAssignment_14.eContents().get(0);
      private final Keyword cMultiplicityKeyword_15 = (Keyword) cGroup.eContents().get(15);
      private final Assignment cMultiplicityAssignment_16 = (Assignment) cGroup.eContents().get(16);
      private final RuleCall cMultiplicityRelationMultiplicityEnumEnumRuleCall_16_0 =
         (RuleCall) cMultiplicityAssignment_16.eContents().get(0);
      private final Keyword cRightCurlyBracketKeyword_17 = (Keyword) cGroup.eContents().get(17);

      //XRelationType:
      //	"relationType" name=RELATION_TYPE_REFERENCE "{" "guid" typeGuid=STRING "sideAName" sideAName=STRING
      //	"sideAArtifactType" sideAArtifactType=[XArtifactType|ARTIFACT_TYPE_REFERENCE] "sideBName" sideBName=STRING
      //	"sideBArtifactType" sideBArtifactType=[XArtifactType|ARTIFACT_TYPE_REFERENCE] "defaultOrderType"
      //	defaultOrderType=RelationOrderType "multiplicity" multiplicity=RelationMultiplicityEnum "}";
      @Override
      public ParserRule getRule() {
         return rule;
      }

      //"relationType" name=RELATION_TYPE_REFERENCE "{" "guid" typeGuid=STRING "sideAName" sideAName=STRING "sideAArtifactType"
      //sideAArtifactType=[XArtifactType|ARTIFACT_TYPE_REFERENCE] "sideBName" sideBName=STRING "sideBArtifactType"
      //sideBArtifactType=[XArtifactType|ARTIFACT_TYPE_REFERENCE] "defaultOrderType" defaultOrderType=RelationOrderType
      //"multiplicity" multiplicity=RelationMultiplicityEnum "}"
      public Group getGroup() {
         return cGroup;
      }

      //"relationType"
      public Keyword getRelationTypeKeyword_0() {
         return cRelationTypeKeyword_0;
      }

      //name=RELATION_TYPE_REFERENCE
      public Assignment getNameAssignment_1() {
         return cNameAssignment_1;
      }

      //RELATION_TYPE_REFERENCE
      public RuleCall getNameRELATION_TYPE_REFERENCEParserRuleCall_1_0() {
         return cNameRELATION_TYPE_REFERENCEParserRuleCall_1_0;
      }

      //"{"
      public Keyword getLeftCurlyBracketKeyword_2() {
         return cLeftCurlyBracketKeyword_2;
      }

      //"guid"
      public Keyword getGuidKeyword_3() {
         return cGuidKeyword_3;
      }

      //typeGuid=STRING
      public Assignment getTypeGuidAssignment_4() {
         return cTypeGuidAssignment_4;
      }

      //STRING
      public RuleCall getTypeGuidSTRINGTerminalRuleCall_4_0() {
         return cTypeGuidSTRINGTerminalRuleCall_4_0;
      }

      //"sideAName"
      public Keyword getSideANameKeyword_5() {
         return cSideANameKeyword_5;
      }

      //sideAName=STRING
      public Assignment getSideANameAssignment_6() {
         return cSideANameAssignment_6;
      }

      //STRING
      public RuleCall getSideANameSTRINGTerminalRuleCall_6_0() {
         return cSideANameSTRINGTerminalRuleCall_6_0;
      }

      //"sideAArtifactType"
      public Keyword getSideAArtifactTypeKeyword_7() {
         return cSideAArtifactTypeKeyword_7;
      }

      //sideAArtifactType=[XArtifactType|ARTIFACT_TYPE_REFERENCE]
      public Assignment getSideAArtifactTypeAssignment_8() {
         return cSideAArtifactTypeAssignment_8;
      }

      //[XArtifactType|ARTIFACT_TYPE_REFERENCE]
      public CrossReference getSideAArtifactTypeXArtifactTypeCrossReference_8_0() {
         return cSideAArtifactTypeXArtifactTypeCrossReference_8_0;
      }

      //ARTIFACT_TYPE_REFERENCE
      public RuleCall getSideAArtifactTypeXArtifactTypeARTIFACT_TYPE_REFERENCEParserRuleCall_8_0_1() {
         return cSideAArtifactTypeXArtifactTypeARTIFACT_TYPE_REFERENCEParserRuleCall_8_0_1;
      }

      //"sideBName"
      public Keyword getSideBNameKeyword_9() {
         return cSideBNameKeyword_9;
      }

      //sideBName=STRING
      public Assignment getSideBNameAssignment_10() {
         return cSideBNameAssignment_10;
      }

      //STRING
      public RuleCall getSideBNameSTRINGTerminalRuleCall_10_0() {
         return cSideBNameSTRINGTerminalRuleCall_10_0;
      }

      //"sideBArtifactType"
      public Keyword getSideBArtifactTypeKeyword_11() {
         return cSideBArtifactTypeKeyword_11;
      }

      //sideBArtifactType=[XArtifactType|ARTIFACT_TYPE_REFERENCE]
      public Assignment getSideBArtifactTypeAssignment_12() {
         return cSideBArtifactTypeAssignment_12;
      }

      //[XArtifactType|ARTIFACT_TYPE_REFERENCE]
      public CrossReference getSideBArtifactTypeXArtifactTypeCrossReference_12_0() {
         return cSideBArtifactTypeXArtifactTypeCrossReference_12_0;
      }

      //ARTIFACT_TYPE_REFERENCE
      public RuleCall getSideBArtifactTypeXArtifactTypeARTIFACT_TYPE_REFERENCEParserRuleCall_12_0_1() {
         return cSideBArtifactTypeXArtifactTypeARTIFACT_TYPE_REFERENCEParserRuleCall_12_0_1;
      }

      //"defaultOrderType"
      public Keyword getDefaultOrderTypeKeyword_13() {
         return cDefaultOrderTypeKeyword_13;
      }

      //defaultOrderType=RelationOrderType
      public Assignment getDefaultOrderTypeAssignment_14() {
         return cDefaultOrderTypeAssignment_14;
      }

      //RelationOrderType
      public RuleCall getDefaultOrderTypeRelationOrderTypeParserRuleCall_14_0() {
         return cDefaultOrderTypeRelationOrderTypeParserRuleCall_14_0;
      }

      //"multiplicity"
      public Keyword getMultiplicityKeyword_15() {
         return cMultiplicityKeyword_15;
      }

      //multiplicity=RelationMultiplicityEnum
      public Assignment getMultiplicityAssignment_16() {
         return cMultiplicityAssignment_16;
      }

      //RelationMultiplicityEnum
      public RuleCall getMultiplicityRelationMultiplicityEnumEnumRuleCall_16_0() {
         return cMultiplicityRelationMultiplicityEnumEnumRuleCall_16_0;
      }

      //"}"
      public Keyword getRightCurlyBracketKeyword_17() {
         return cRightCurlyBracketKeyword_17;
      }
   }

   public class RelationOrderTypeElements extends AbstractParserRuleElementFinder {
      private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "RelationOrderType");
      private final Alternatives cAlternatives = (Alternatives) rule.eContents().get(1);
      private final Keyword cLexicographical_AscendingKeyword_0 = (Keyword) cAlternatives.eContents().get(0);
      private final Keyword cLexicographical_DescendingKeyword_1 = (Keyword) cAlternatives.eContents().get(1);
      private final Keyword cUnorderedKeyword_2 = (Keyword) cAlternatives.eContents().get(2);
      private final RuleCall cIDTerminalRuleCall_3 = (RuleCall) cAlternatives.eContents().get(3);

      //RelationOrderType returns ecore::EString:
      //	"Lexicographical_Ascending" | "Lexicographical_Descending" | "Unordered" | ID;
      @Override
      public ParserRule getRule() {
         return rule;
      }

      //"Lexicographical_Ascending" | "Lexicographical_Descending" | "Unordered" | ID
      public Alternatives getAlternatives() {
         return cAlternatives;
      }

      //"Lexicographical_Ascending"
      public Keyword getLexicographical_AscendingKeyword_0() {
         return cLexicographical_AscendingKeyword_0;
      }

      //"Lexicographical_Descending"
      public Keyword getLexicographical_DescendingKeyword_1() {
         return cLexicographical_DescendingKeyword_1;
      }

      //"Unordered"
      public Keyword getUnorderedKeyword_2() {
         return cUnorderedKeyword_2;
      }

      //ID
      public RuleCall getIDTerminalRuleCall_3() {
         return cIDTerminalRuleCall_3;
      }
   }

   public class ARTIFACT_INSTANCE_REFERENCEElements extends AbstractParserRuleElementFinder {
      private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(),
         "ARTIFACT_INSTANCE_REFERENCE");
      private final RuleCall cSTRINGTerminalRuleCall = (RuleCall) rule.eContents().get(1);

      /////////////////////////////////////////
      ////  OSEE ARTIFACT INSTANCE REFERENCE //
      /////////////////////////////////////////
      //ARTIFACT_INSTANCE_REFERENCE returns ecore::EString:
      //	STRING;
      @Override
      public ParserRule getRule() {
         return rule;
      }

      //STRING
      public RuleCall getSTRINGTerminalRuleCall() {
         return cSTRINGTerminalRuleCall;
      }
   }

   public class XArtifactRefElements extends AbstractParserRuleElementFinder {
      private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "XArtifactRef");
      private final Group cGroup = (Group) rule.eContents().get(1);
      private final Keyword cArtifactKeyword_0 = (Keyword) cGroup.eContents().get(0);
      private final Assignment cNameAssignment_1 = (Assignment) cGroup.eContents().get(1);
      private final RuleCall cNameARTIFACT_INSTANCE_REFERENCEParserRuleCall_1_0 =
         (RuleCall) cNameAssignment_1.eContents().get(0);
      private final Keyword cArtGuidKeyword_2 = (Keyword) cGroup.eContents().get(2);
      private final Assignment cGuidAssignment_3 = (Assignment) cGroup.eContents().get(3);
      private final RuleCall cGuidSTRINGTerminalRuleCall_3_0 = (RuleCall) cGuidAssignment_3.eContents().get(0);
      private final Keyword cSemicolonKeyword_4 = (Keyword) cGroup.eContents().get(4);

      //XArtifactRef:
      //	"artifact" name=ARTIFACT_INSTANCE_REFERENCE "artGuid" guid=STRING ";";
      @Override
      public ParserRule getRule() {
         return rule;
      }

      //"artifact" name=ARTIFACT_INSTANCE_REFERENCE "artGuid" guid=STRING ";"
      public Group getGroup() {
         return cGroup;
      }

      //"artifact"
      public Keyword getArtifactKeyword_0() {
         return cArtifactKeyword_0;
      }

      //name=ARTIFACT_INSTANCE_REFERENCE
      public Assignment getNameAssignment_1() {
         return cNameAssignment_1;
      }

      //ARTIFACT_INSTANCE_REFERENCE
      public RuleCall getNameARTIFACT_INSTANCE_REFERENCEParserRuleCall_1_0() {
         return cNameARTIFACT_INSTANCE_REFERENCEParserRuleCall_1_0;
      }

      //"artGuid"
      public Keyword getArtGuidKeyword_2() {
         return cArtGuidKeyword_2;
      }

      //guid=STRING
      public Assignment getGuidAssignment_3() {
         return cGuidAssignment_3;
      }

      //STRING
      public RuleCall getGuidSTRINGTerminalRuleCall_3_0() {
         return cGuidSTRINGTerminalRuleCall_3_0;
      }

      //";"
      public Keyword getSemicolonKeyword_4() {
         return cSemicolonKeyword_4;
      }
   }

   public class BRANCH_INSTANCE_REFERENCEElements extends AbstractParserRuleElementFinder {
      private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(),
         "BRANCH_INSTANCE_REFERENCE");
      private final RuleCall cSTRINGTerminalRuleCall = (RuleCall) rule.eContents().get(1);

      //BRANCH_INSTANCE_REFERENCE returns ecore::EString:
      //	STRING;
      @Override
      public ParserRule getRule() {
         return rule;
      }

      //STRING
      public RuleCall getSTRINGTerminalRuleCall() {
         return cSTRINGTerminalRuleCall;
      }
   }

   public class XBranchRefElements extends AbstractParserRuleElementFinder {
      private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "XBranchRef");
      private final Group cGroup = (Group) rule.eContents().get(1);
      private final Keyword cBranchKeyword_0 = (Keyword) cGroup.eContents().get(0);
      private final Assignment cNameAssignment_1 = (Assignment) cGroup.eContents().get(1);
      private final RuleCall cNameBRANCH_INSTANCE_REFERENCEParserRuleCall_1_0 =
         (RuleCall) cNameAssignment_1.eContents().get(0);
      private final Keyword cBranchGuidKeyword_2 = (Keyword) cGroup.eContents().get(2);
      private final Assignment cGuidAssignment_3 = (Assignment) cGroup.eContents().get(3);
      private final RuleCall cGuidSTRINGTerminalRuleCall_3_0 = (RuleCall) cGuidAssignment_3.eContents().get(0);
      private final Keyword cSemicolonKeyword_4 = (Keyword) cGroup.eContents().get(4);

      //XBranchRef:
      //	"branch" name=BRANCH_INSTANCE_REFERENCE "branchGuid" guid=STRING ";";
      @Override
      public ParserRule getRule() {
         return rule;
      }

      //"branch" name=BRANCH_INSTANCE_REFERENCE "branchGuid" guid=STRING ";"
      public Group getGroup() {
         return cGroup;
      }

      //"branch"
      public Keyword getBranchKeyword_0() {
         return cBranchKeyword_0;
      }

      //name=BRANCH_INSTANCE_REFERENCE
      public Assignment getNameAssignment_1() {
         return cNameAssignment_1;
      }

      //BRANCH_INSTANCE_REFERENCE
      public RuleCall getNameBRANCH_INSTANCE_REFERENCEParserRuleCall_1_0() {
         return cNameBRANCH_INSTANCE_REFERENCEParserRuleCall_1_0;
      }

      //"branchGuid"
      public Keyword getBranchGuidKeyword_2() {
         return cBranchGuidKeyword_2;
      }

      //guid=STRING
      public Assignment getGuidAssignment_3() {
         return cGuidAssignment_3;
      }

      //STRING
      public RuleCall getGuidSTRINGTerminalRuleCall_3_0() {
         return cGuidSTRINGTerminalRuleCall_3_0;
      }

      //";"
      public Keyword getSemicolonKeyword_4() {
         return cSemicolonKeyword_4;
      }
   }

   public class ACCESS_CONTEXT_TYPE_REFRENCEElements extends AbstractParserRuleElementFinder {
      private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(),
         "ACCESS_CONTEXT_TYPE_REFRENCE");
      private final RuleCall cSTRINGTerminalRuleCall = (RuleCall) rule.eContents().get(1);

      /////////////////////////////////////////
      ////  OSEE ACCESS MODEL                //
      /////////////////////////////////////////
      //ACCESS_CONTEXT_TYPE_REFRENCE returns ecore::EString:
      //	STRING;
      @Override
      public ParserRule getRule() {
         return rule;
      }

      //STRING
      public RuleCall getSTRINGTerminalRuleCall() {
         return cSTRINGTerminalRuleCall;
      }
   }

   public class AccessContextElements extends AbstractParserRuleElementFinder {
      private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AccessContext");
      private final Group cGroup = (Group) rule.eContents().get(1);
      private final Keyword cAccessContextKeyword_0 = (Keyword) cGroup.eContents().get(0);
      private final Assignment cNameAssignment_1 = (Assignment) cGroup.eContents().get(1);
      private final RuleCall cNameACCESS_CONTEXT_TYPE_REFRENCEParserRuleCall_1_0 =
         (RuleCall) cNameAssignment_1.eContents().get(0);
      private final Group cGroup_2 = (Group) cGroup.eContents().get(2);
      private final Keyword cExtendsKeyword_2_0 = (Keyword) cGroup_2.eContents().get(0);
      private final Assignment cSuperAccessContextsAssignment_2_1 = (Assignment) cGroup_2.eContents().get(1);
      private final CrossReference cSuperAccessContextsAccessContextCrossReference_2_1_0 =
         (CrossReference) cSuperAccessContextsAssignment_2_1.eContents().get(0);
      private final RuleCall cSuperAccessContextsAccessContextACCESS_CONTEXT_TYPE_REFRENCEParserRuleCall_2_1_0_1 =
         (RuleCall) cSuperAccessContextsAccessContextCrossReference_2_1_0.eContents().get(1);
      private final Group cGroup_2_2 = (Group) cGroup_2.eContents().get(2);
      private final Keyword cCommaKeyword_2_2_0 = (Keyword) cGroup_2_2.eContents().get(0);
      private final Assignment cSuperAccessContextsAssignment_2_2_1 = (Assignment) cGroup_2_2.eContents().get(1);
      private final CrossReference cSuperAccessContextsAccessContextCrossReference_2_2_1_0 =
         (CrossReference) cSuperAccessContextsAssignment_2_2_1.eContents().get(0);
      private final RuleCall cSuperAccessContextsAccessContextACCESS_CONTEXT_TYPE_REFRENCEParserRuleCall_2_2_1_0_1 =
         (RuleCall) cSuperAccessContextsAccessContextCrossReference_2_2_1_0.eContents().get(1);
      private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword) cGroup.eContents().get(3);
      private final Keyword cGuidKeyword_4 = (Keyword) cGroup.eContents().get(4);
      private final Assignment cGuidAssignment_5 = (Assignment) cGroup.eContents().get(5);
      private final RuleCall cGuidSTRINGTerminalRuleCall_5_0 = (RuleCall) cGuidAssignment_5.eContents().get(0);
      private final Keyword cSemicolonKeyword_6 = (Keyword) cGroup.eContents().get(6);
      private final Alternatives cAlternatives_7 = (Alternatives) cGroup.eContents().get(7);
      private final Assignment cAccessRulesAssignment_7_0 = (Assignment) cAlternatives_7.eContents().get(0);
      private final RuleCall cAccessRulesObjectRestrictionParserRuleCall_7_0_0 =
         (RuleCall) cAccessRulesAssignment_7_0.eContents().get(0);
      private final Assignment cHierarchyRestrictionsAssignment_7_1 = (Assignment) cAlternatives_7.eContents().get(1);
      private final RuleCall cHierarchyRestrictionsHierarchyRestrictionParserRuleCall_7_1_0 =
         (RuleCall) cHierarchyRestrictionsAssignment_7_1.eContents().get(0);
      private final Keyword cRightCurlyBracketKeyword_8 = (Keyword) cGroup.eContents().get(8);

      //AccessContext:
      //	"accessContext" name=ACCESS_CONTEXT_TYPE_REFRENCE ("extends"
      //	superAccessContexts+=[AccessContext|ACCESS_CONTEXT_TYPE_REFRENCE] (","
      //	superAccessContexts+=[AccessContext|ACCESS_CONTEXT_TYPE_REFRENCE])*)? "{" "guid" guid=STRING ";"
      //	(accessRules+=ObjectRestriction | hierarchyRestrictions+=HierarchyRestriction)+ "}";
      @Override
      public ParserRule getRule() {
         return rule;
      }

      //"accessContext" name=ACCESS_CONTEXT_TYPE_REFRENCE ("extends"
      //superAccessContexts+=[AccessContext|ACCESS_CONTEXT_TYPE_REFRENCE] (","
      //superAccessContexts+=[AccessContext|ACCESS_CONTEXT_TYPE_REFRENCE])*)? "{" "guid" guid=STRING ";"
      //(accessRules+=ObjectRestriction | hierarchyRestrictions+=HierarchyRestriction)+ "}"
      public Group getGroup() {
         return cGroup;
      }

      //"accessContext"
      public Keyword getAccessContextKeyword_0() {
         return cAccessContextKeyword_0;
      }

      //name=ACCESS_CONTEXT_TYPE_REFRENCE
      public Assignment getNameAssignment_1() {
         return cNameAssignment_1;
      }

      //ACCESS_CONTEXT_TYPE_REFRENCE
      public RuleCall getNameACCESS_CONTEXT_TYPE_REFRENCEParserRuleCall_1_0() {
         return cNameACCESS_CONTEXT_TYPE_REFRENCEParserRuleCall_1_0;
      }

      //("extends" superAccessContexts+=[AccessContext|ACCESS_CONTEXT_TYPE_REFRENCE] (","
      //superAccessContexts+=[AccessContext|ACCESS_CONTEXT_TYPE_REFRENCE])*)?
      public Group getGroup_2() {
         return cGroup_2;
      }

      //"extends"
      public Keyword getExtendsKeyword_2_0() {
         return cExtendsKeyword_2_0;
      }

      //superAccessContexts+=[AccessContext|ACCESS_CONTEXT_TYPE_REFRENCE]
      public Assignment getSuperAccessContextsAssignment_2_1() {
         return cSuperAccessContextsAssignment_2_1;
      }

      //[AccessContext|ACCESS_CONTEXT_TYPE_REFRENCE]
      public CrossReference getSuperAccessContextsAccessContextCrossReference_2_1_0() {
         return cSuperAccessContextsAccessContextCrossReference_2_1_0;
      }

      //ACCESS_CONTEXT_TYPE_REFRENCE
      public RuleCall getSuperAccessContextsAccessContextACCESS_CONTEXT_TYPE_REFRENCEParserRuleCall_2_1_0_1() {
         return cSuperAccessContextsAccessContextACCESS_CONTEXT_TYPE_REFRENCEParserRuleCall_2_1_0_1;
      }

      //("," superAccessContexts+=[AccessContext|ACCESS_CONTEXT_TYPE_REFRENCE])*
      public Group getGroup_2_2() {
         return cGroup_2_2;
      }

      //","
      public Keyword getCommaKeyword_2_2_0() {
         return cCommaKeyword_2_2_0;
      }

      //superAccessContexts+=[AccessContext|ACCESS_CONTEXT_TYPE_REFRENCE]
      public Assignment getSuperAccessContextsAssignment_2_2_1() {
         return cSuperAccessContextsAssignment_2_2_1;
      }

      //[AccessContext|ACCESS_CONTEXT_TYPE_REFRENCE]
      public CrossReference getSuperAccessContextsAccessContextCrossReference_2_2_1_0() {
         return cSuperAccessContextsAccessContextCrossReference_2_2_1_0;
      }

      //ACCESS_CONTEXT_TYPE_REFRENCE
      public RuleCall getSuperAccessContextsAccessContextACCESS_CONTEXT_TYPE_REFRENCEParserRuleCall_2_2_1_0_1() {
         return cSuperAccessContextsAccessContextACCESS_CONTEXT_TYPE_REFRENCEParserRuleCall_2_2_1_0_1;
      }

      //"{"
      public Keyword getLeftCurlyBracketKeyword_3() {
         return cLeftCurlyBracketKeyword_3;
      }

      //"guid"
      public Keyword getGuidKeyword_4() {
         return cGuidKeyword_4;
      }

      //guid=STRING
      public Assignment getGuidAssignment_5() {
         return cGuidAssignment_5;
      }

      //STRING
      public RuleCall getGuidSTRINGTerminalRuleCall_5_0() {
         return cGuidSTRINGTerminalRuleCall_5_0;
      }

      //";"
      public Keyword getSemicolonKeyword_6() {
         return cSemicolonKeyword_6;
      }

      //(accessRules+=ObjectRestriction | hierarchyRestrictions+=HierarchyRestriction)+
      public Alternatives getAlternatives_7() {
         return cAlternatives_7;
      }

      //accessRules+=ObjectRestriction
      public Assignment getAccessRulesAssignment_7_0() {
         return cAccessRulesAssignment_7_0;
      }

      //ObjectRestriction
      public RuleCall getAccessRulesObjectRestrictionParserRuleCall_7_0_0() {
         return cAccessRulesObjectRestrictionParserRuleCall_7_0_0;
      }

      //hierarchyRestrictions+=HierarchyRestriction
      public Assignment getHierarchyRestrictionsAssignment_7_1() {
         return cHierarchyRestrictionsAssignment_7_1;
      }

      //HierarchyRestriction
      public RuleCall getHierarchyRestrictionsHierarchyRestrictionParserRuleCall_7_1_0() {
         return cHierarchyRestrictionsHierarchyRestrictionParserRuleCall_7_1_0;
      }

      //"}"
      public Keyword getRightCurlyBracketKeyword_8() {
         return cRightCurlyBracketKeyword_8;
      }
   }

   public class HierarchyRestrictionElements extends AbstractParserRuleElementFinder {
      private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "HierarchyRestriction");
      private final Group cGroup = (Group) rule.eContents().get(1);
      private final Keyword cChildrenOfKeyword_0 = (Keyword) cGroup.eContents().get(0);
      private final Assignment cArtifactAssignment_1 = (Assignment) cGroup.eContents().get(1);
      private final CrossReference cArtifactXArtifactRefCrossReference_1_0 =
         (CrossReference) cArtifactAssignment_1.eContents().get(0);
      private final RuleCall cArtifactXArtifactRefARTIFACT_INSTANCE_REFERENCEParserRuleCall_1_0_1 =
         (RuleCall) cArtifactXArtifactRefCrossReference_1_0.eContents().get(1);
      private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword) cGroup.eContents().get(2);
      private final Assignment cAccessRulesAssignment_3 = (Assignment) cGroup.eContents().get(3);
      private final RuleCall cAccessRulesObjectRestrictionParserRuleCall_3_0 =
         (RuleCall) cAccessRulesAssignment_3.eContents().get(0);
      private final Keyword cRightCurlyBracketKeyword_4 = (Keyword) cGroup.eContents().get(4);

      //HierarchyRestriction:
      //	"childrenOf" artifact=[XArtifactRef|ARTIFACT_INSTANCE_REFERENCE] "{" accessRules+=ObjectRestriction+ "}";
      @Override
      public ParserRule getRule() {
         return rule;
      }

      //"childrenOf" artifact=[XArtifactRef|ARTIFACT_INSTANCE_REFERENCE] "{" accessRules+=ObjectRestriction+ "}"
      public Group getGroup() {
         return cGroup;
      }

      //"childrenOf"
      public Keyword getChildrenOfKeyword_0() {
         return cChildrenOfKeyword_0;
      }

      //artifact=[XArtifactRef|ARTIFACT_INSTANCE_REFERENCE]
      public Assignment getArtifactAssignment_1() {
         return cArtifactAssignment_1;
      }

      //[XArtifactRef|ARTIFACT_INSTANCE_REFERENCE]
      public CrossReference getArtifactXArtifactRefCrossReference_1_0() {
         return cArtifactXArtifactRefCrossReference_1_0;
      }

      //ARTIFACT_INSTANCE_REFERENCE
      public RuleCall getArtifactXArtifactRefARTIFACT_INSTANCE_REFERENCEParserRuleCall_1_0_1() {
         return cArtifactXArtifactRefARTIFACT_INSTANCE_REFERENCEParserRuleCall_1_0_1;
      }

      //"{"
      public Keyword getLeftCurlyBracketKeyword_2() {
         return cLeftCurlyBracketKeyword_2;
      }

      //accessRules+=ObjectRestriction+
      public Assignment getAccessRulesAssignment_3() {
         return cAccessRulesAssignment_3;
      }

      //ObjectRestriction
      public RuleCall getAccessRulesObjectRestrictionParserRuleCall_3_0() {
         return cAccessRulesObjectRestrictionParserRuleCall_3_0;
      }

      //"}"
      public Keyword getRightCurlyBracketKeyword_4() {
         return cRightCurlyBracketKeyword_4;
      }
   }

   public class ObjectRestrictionElements extends AbstractParserRuleElementFinder {
      private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ObjectRestriction");
      private final Alternatives cAlternatives = (Alternatives) rule.eContents().get(1);
      private final RuleCall cArtifactInstanceRestrictionParserRuleCall_0 = (RuleCall) cAlternatives.eContents().get(0);
      private final RuleCall cArtifactTypeRestrictionParserRuleCall_1 = (RuleCall) cAlternatives.eContents().get(1);
      private final RuleCall cRelationTypeRestrictionParserRuleCall_2 = (RuleCall) cAlternatives.eContents().get(2);
      private final RuleCall cAttributeTypeRestrictionParserRuleCall_3 = (RuleCall) cAlternatives.eContents().get(3);

      //ObjectRestriction:
      //	ArtifactInstanceRestriction | ArtifactTypeRestriction | RelationTypeRestriction | AttributeTypeRestriction;
      @Override
      public ParserRule getRule() {
         return rule;
      }

      //ArtifactInstanceRestriction | ArtifactTypeRestriction | RelationTypeRestriction | AttributeTypeRestriction
      public Alternatives getAlternatives() {
         return cAlternatives;
      }

      //ArtifactInstanceRestriction
      public RuleCall getArtifactInstanceRestrictionParserRuleCall_0() {
         return cArtifactInstanceRestrictionParserRuleCall_0;
      }

      //ArtifactTypeRestriction
      public RuleCall getArtifactTypeRestrictionParserRuleCall_1() {
         return cArtifactTypeRestrictionParserRuleCall_1;
      }

      //RelationTypeRestriction
      public RuleCall getRelationTypeRestrictionParserRuleCall_2() {
         return cRelationTypeRestrictionParserRuleCall_2;
      }

      //AttributeTypeRestriction
      public RuleCall getAttributeTypeRestrictionParserRuleCall_3() {
         return cAttributeTypeRestrictionParserRuleCall_3;
      }
   }

   public class ArtifactInstanceRestrictionElements extends AbstractParserRuleElementFinder {
      private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(),
         "ArtifactInstanceRestriction");
      private final Group cGroup = (Group) rule.eContents().get(1);
      private final Assignment cPermissionAssignment_0 = (Assignment) cGroup.eContents().get(0);
      private final RuleCall cPermissionAccessPermissionEnumEnumRuleCall_0_0 =
         (RuleCall) cPermissionAssignment_0.eContents().get(0);
      private final Keyword cEditKeyword_1 = (Keyword) cGroup.eContents().get(1);
      private final Keyword cArtifactKeyword_2 = (Keyword) cGroup.eContents().get(2);
      private final Assignment cArtifactRefAssignment_3 = (Assignment) cGroup.eContents().get(3);
      private final CrossReference cArtifactRefXArtifactRefCrossReference_3_0 =
         (CrossReference) cArtifactRefAssignment_3.eContents().get(0);
      private final RuleCall cArtifactRefXArtifactRefARTIFACT_INSTANCE_REFERENCEParserRuleCall_3_0_1 =
         (RuleCall) cArtifactRefXArtifactRefCrossReference_3_0.eContents().get(1);
      private final Keyword cSemicolonKeyword_4 = (Keyword) cGroup.eContents().get(4);

      //ArtifactInstanceRestriction:
      //	permission=AccessPermissionEnum "edit" "artifact" artifactRef=[XArtifactRef|ARTIFACT_INSTANCE_REFERENCE] ";";
      @Override
      public ParserRule getRule() {
         return rule;
      }

      //permission=AccessPermissionEnum "edit" "artifact" artifactRef=[XArtifactRef|ARTIFACT_INSTANCE_REFERENCE] ";"
      public Group getGroup() {
         return cGroup;
      }

      //permission=AccessPermissionEnum
      public Assignment getPermissionAssignment_0() {
         return cPermissionAssignment_0;
      }

      //AccessPermissionEnum
      public RuleCall getPermissionAccessPermissionEnumEnumRuleCall_0_0() {
         return cPermissionAccessPermissionEnumEnumRuleCall_0_0;
      }

      //"edit"
      public Keyword getEditKeyword_1() {
         return cEditKeyword_1;
      }

      //"artifact"
      public Keyword getArtifactKeyword_2() {
         return cArtifactKeyword_2;
      }

      //artifactRef=[XArtifactRef|ARTIFACT_INSTANCE_REFERENCE]
      public Assignment getArtifactRefAssignment_3() {
         return cArtifactRefAssignment_3;
      }

      //[XArtifactRef|ARTIFACT_INSTANCE_REFERENCE]
      public CrossReference getArtifactRefXArtifactRefCrossReference_3_0() {
         return cArtifactRefXArtifactRefCrossReference_3_0;
      }

      //ARTIFACT_INSTANCE_REFERENCE
      public RuleCall getArtifactRefXArtifactRefARTIFACT_INSTANCE_REFERENCEParserRuleCall_3_0_1() {
         return cArtifactRefXArtifactRefARTIFACT_INSTANCE_REFERENCEParserRuleCall_3_0_1;
      }

      //";"
      public Keyword getSemicolonKeyword_4() {
         return cSemicolonKeyword_4;
      }
   }

   public class ArtifactTypeRestrictionElements extends AbstractParserRuleElementFinder {
      private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ArtifactTypeRestriction");
      private final Group cGroup = (Group) rule.eContents().get(1);
      private final Assignment cPermissionAssignment_0 = (Assignment) cGroup.eContents().get(0);
      private final RuleCall cPermissionAccessPermissionEnumEnumRuleCall_0_0 =
         (RuleCall) cPermissionAssignment_0.eContents().get(0);
      private final Keyword cEditKeyword_1 = (Keyword) cGroup.eContents().get(1);
      private final Keyword cArtifactTypeKeyword_2 = (Keyword) cGroup.eContents().get(2);
      private final Assignment cArtifactTypeRefAssignment_3 = (Assignment) cGroup.eContents().get(3);
      private final CrossReference cArtifactTypeRefXArtifactTypeCrossReference_3_0 =
         (CrossReference) cArtifactTypeRefAssignment_3.eContents().get(0);
      private final RuleCall cArtifactTypeRefXArtifactTypeARTIFACT_TYPE_REFERENCEParserRuleCall_3_0_1 =
         (RuleCall) cArtifactTypeRefXArtifactTypeCrossReference_3_0.eContents().get(1);
      private final Keyword cSemicolonKeyword_4 = (Keyword) cGroup.eContents().get(4);

      //ArtifactTypeRestriction:
      //	permission=AccessPermissionEnum "edit" "artifactType" artifactTypeRef=[XArtifactType|ARTIFACT_TYPE_REFERENCE] ";";
      @Override
      public ParserRule getRule() {
         return rule;
      }

      //permission=AccessPermissionEnum "edit" "artifactType" artifactTypeRef=[XArtifactType|ARTIFACT_TYPE_REFERENCE] ";"
      public Group getGroup() {
         return cGroup;
      }

      //permission=AccessPermissionEnum
      public Assignment getPermissionAssignment_0() {
         return cPermissionAssignment_0;
      }

      //AccessPermissionEnum
      public RuleCall getPermissionAccessPermissionEnumEnumRuleCall_0_0() {
         return cPermissionAccessPermissionEnumEnumRuleCall_0_0;
      }

      //"edit"
      public Keyword getEditKeyword_1() {
         return cEditKeyword_1;
      }

      //"artifactType"
      public Keyword getArtifactTypeKeyword_2() {
         return cArtifactTypeKeyword_2;
      }

      //artifactTypeRef=[XArtifactType|ARTIFACT_TYPE_REFERENCE]
      public Assignment getArtifactTypeRefAssignment_3() {
         return cArtifactTypeRefAssignment_3;
      }

      //[XArtifactType|ARTIFACT_TYPE_REFERENCE]
      public CrossReference getArtifactTypeRefXArtifactTypeCrossReference_3_0() {
         return cArtifactTypeRefXArtifactTypeCrossReference_3_0;
      }

      //ARTIFACT_TYPE_REFERENCE
      public RuleCall getArtifactTypeRefXArtifactTypeARTIFACT_TYPE_REFERENCEParserRuleCall_3_0_1() {
         return cArtifactTypeRefXArtifactTypeARTIFACT_TYPE_REFERENCEParserRuleCall_3_0_1;
      }

      //";"
      public Keyword getSemicolonKeyword_4() {
         return cSemicolonKeyword_4;
      }
   }

   public class AttributeTypeRestrictionElements extends AbstractParserRuleElementFinder {
      private final ParserRule rule =
         (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AttributeTypeRestriction");
      private final Group cGroup = (Group) rule.eContents().get(1);
      private final Assignment cPermissionAssignment_0 = (Assignment) cGroup.eContents().get(0);
      private final RuleCall cPermissionAccessPermissionEnumEnumRuleCall_0_0 =
         (RuleCall) cPermissionAssignment_0.eContents().get(0);
      private final Keyword cEditKeyword_1 = (Keyword) cGroup.eContents().get(1);
      private final Keyword cAttributeTypeKeyword_2 = (Keyword) cGroup.eContents().get(2);
      private final Assignment cAttributeTypeRefAssignment_3 = (Assignment) cGroup.eContents().get(3);
      private final CrossReference cAttributeTypeRefXAttributeTypeCrossReference_3_0 =
         (CrossReference) cAttributeTypeRefAssignment_3.eContents().get(0);
      private final RuleCall cAttributeTypeRefXAttributeTypeATTRIBUTE_TYPE_REFERENCEParserRuleCall_3_0_1 =
         (RuleCall) cAttributeTypeRefXAttributeTypeCrossReference_3_0.eContents().get(1);
      private final Group cGroup_4 = (Group) cGroup.eContents().get(4);
      private final Keyword cOfKeyword_4_0 = (Keyword) cGroup_4.eContents().get(0);
      private final Keyword cArtifactTypeKeyword_4_1 = (Keyword) cGroup_4.eContents().get(1);
      private final Assignment cArtifactTypeRefAssignment_4_2 = (Assignment) cGroup_4.eContents().get(2);
      private final CrossReference cArtifactTypeRefXArtifactTypeCrossReference_4_2_0 =
         (CrossReference) cArtifactTypeRefAssignment_4_2.eContents().get(0);
      private final RuleCall cArtifactTypeRefXArtifactTypeARTIFACT_TYPE_REFERENCEParserRuleCall_4_2_0_1 =
         (RuleCall) cArtifactTypeRefXArtifactTypeCrossReference_4_2_0.eContents().get(1);
      private final Keyword cSemicolonKeyword_5 = (Keyword) cGroup.eContents().get(5);

      //AttributeTypeRestriction:
      //	permission=AccessPermissionEnum "edit" "attributeType" attributeTypeRef=[XAttributeType|ATTRIBUTE_TYPE_REFERENCE]
      //	("of" "artifactType" artifactTypeRef=[XArtifactType|ARTIFACT_TYPE_REFERENCE])? ";";
      @Override
      public ParserRule getRule() {
         return rule;
      }

      //permission=AccessPermissionEnum "edit" "attributeType" attributeTypeRef=[XAttributeType|ATTRIBUTE_TYPE_REFERENCE] ("of"
      //"artifactType" artifactTypeRef=[XArtifactType|ARTIFACT_TYPE_REFERENCE])? ";"
      public Group getGroup() {
         return cGroup;
      }

      //permission=AccessPermissionEnum
      public Assignment getPermissionAssignment_0() {
         return cPermissionAssignment_0;
      }

      //AccessPermissionEnum
      public RuleCall getPermissionAccessPermissionEnumEnumRuleCall_0_0() {
         return cPermissionAccessPermissionEnumEnumRuleCall_0_0;
      }

      //"edit"
      public Keyword getEditKeyword_1() {
         return cEditKeyword_1;
      }

      //"attributeType"
      public Keyword getAttributeTypeKeyword_2() {
         return cAttributeTypeKeyword_2;
      }

      //attributeTypeRef=[XAttributeType|ATTRIBUTE_TYPE_REFERENCE]
      public Assignment getAttributeTypeRefAssignment_3() {
         return cAttributeTypeRefAssignment_3;
      }

      //[XAttributeType|ATTRIBUTE_TYPE_REFERENCE]
      public CrossReference getAttributeTypeRefXAttributeTypeCrossReference_3_0() {
         return cAttributeTypeRefXAttributeTypeCrossReference_3_0;
      }

      //ATTRIBUTE_TYPE_REFERENCE
      public RuleCall getAttributeTypeRefXAttributeTypeATTRIBUTE_TYPE_REFERENCEParserRuleCall_3_0_1() {
         return cAttributeTypeRefXAttributeTypeATTRIBUTE_TYPE_REFERENCEParserRuleCall_3_0_1;
      }

      //("of" "artifactType" artifactTypeRef=[XArtifactType|ARTIFACT_TYPE_REFERENCE])?
      public Group getGroup_4() {
         return cGroup_4;
      }

      //"of"
      public Keyword getOfKeyword_4_0() {
         return cOfKeyword_4_0;
      }

      //"artifactType"
      public Keyword getArtifactTypeKeyword_4_1() {
         return cArtifactTypeKeyword_4_1;
      }

      //artifactTypeRef=[XArtifactType|ARTIFACT_TYPE_REFERENCE]
      public Assignment getArtifactTypeRefAssignment_4_2() {
         return cArtifactTypeRefAssignment_4_2;
      }

      //[XArtifactType|ARTIFACT_TYPE_REFERENCE]
      public CrossReference getArtifactTypeRefXArtifactTypeCrossReference_4_2_0() {
         return cArtifactTypeRefXArtifactTypeCrossReference_4_2_0;
      }

      //ARTIFACT_TYPE_REFERENCE
      public RuleCall getArtifactTypeRefXArtifactTypeARTIFACT_TYPE_REFERENCEParserRuleCall_4_2_0_1() {
         return cArtifactTypeRefXArtifactTypeARTIFACT_TYPE_REFERENCEParserRuleCall_4_2_0_1;
      }

      //";"
      public Keyword getSemicolonKeyword_5() {
         return cSemicolonKeyword_5;
      }
   }

   public class RelationTypeRestrictionElements extends AbstractParserRuleElementFinder {
      private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "RelationTypeRestriction");
      private final Group cGroup = (Group) rule.eContents().get(1);
      private final Assignment cPermissionAssignment_0 = (Assignment) cGroup.eContents().get(0);
      private final RuleCall cPermissionAccessPermissionEnumEnumRuleCall_0_0 =
         (RuleCall) cPermissionAssignment_0.eContents().get(0);
      private final Keyword cEditKeyword_1 = (Keyword) cGroup.eContents().get(1);
      private final Keyword cRelationTypeKeyword_2 = (Keyword) cGroup.eContents().get(2);
      private final Assignment cRelationTypeRefAssignment_3 = (Assignment) cGroup.eContents().get(3);
      private final CrossReference cRelationTypeRefXRelationTypeCrossReference_3_0 =
         (CrossReference) cRelationTypeRefAssignment_3.eContents().get(0);
      private final RuleCall cRelationTypeRefXRelationTypeRELATION_TYPE_REFERENCEParserRuleCall_3_0_1 =
         (RuleCall) cRelationTypeRefXRelationTypeCrossReference_3_0.eContents().get(1);
      private final Assignment cRestrictedToSideAssignment_4 = (Assignment) cGroup.eContents().get(4);
      private final RuleCall cRestrictedToSideXRelationSideEnumEnumRuleCall_4_0 =
         (RuleCall) cRestrictedToSideAssignment_4.eContents().get(0);
      private final Keyword cSemicolonKeyword_5 = (Keyword) cGroup.eContents().get(5);

      //RelationTypeRestriction:
      //	permission=AccessPermissionEnum "edit" "relationType" relationTypeRef=[XRelationType|RELATION_TYPE_REFERENCE]
      //	restrictedToSide=XRelationSideEnum ";";
      @Override
      public ParserRule getRule() {
         return rule;
      }

      //permission=AccessPermissionEnum "edit" "relationType" relationTypeRef=[XRelationType|RELATION_TYPE_REFERENCE]
      //restrictedToSide=XRelationSideEnum ";"
      public Group getGroup() {
         return cGroup;
      }

      //permission=AccessPermissionEnum
      public Assignment getPermissionAssignment_0() {
         return cPermissionAssignment_0;
      }

      //AccessPermissionEnum
      public RuleCall getPermissionAccessPermissionEnumEnumRuleCall_0_0() {
         return cPermissionAccessPermissionEnumEnumRuleCall_0_0;
      }

      //"edit"
      public Keyword getEditKeyword_1() {
         return cEditKeyword_1;
      }

      //"relationType"
      public Keyword getRelationTypeKeyword_2() {
         return cRelationTypeKeyword_2;
      }

      //relationTypeRef=[XRelationType|RELATION_TYPE_REFERENCE]
      public Assignment getRelationTypeRefAssignment_3() {
         return cRelationTypeRefAssignment_3;
      }

      //[XRelationType|RELATION_TYPE_REFERENCE]
      public CrossReference getRelationTypeRefXRelationTypeCrossReference_3_0() {
         return cRelationTypeRefXRelationTypeCrossReference_3_0;
      }

      //RELATION_TYPE_REFERENCE
      public RuleCall getRelationTypeRefXRelationTypeRELATION_TYPE_REFERENCEParserRuleCall_3_0_1() {
         return cRelationTypeRefXRelationTypeRELATION_TYPE_REFERENCEParserRuleCall_3_0_1;
      }

      //restrictedToSide=XRelationSideEnum
      public Assignment getRestrictedToSideAssignment_4() {
         return cRestrictedToSideAssignment_4;
      }

      //XRelationSideEnum
      public RuleCall getRestrictedToSideXRelationSideEnumEnumRuleCall_4_0() {
         return cRestrictedToSideXRelationSideEnumEnumRuleCall_4_0;
      }

      //";"
      public Keyword getSemicolonKeyword_5() {
         return cSemicolonKeyword_5;
      }
   }

   public class RelationMultiplicityEnumElements extends AbstractEnumRuleElementFinder {
      private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "RelationMultiplicityEnum");
      private final Alternatives cAlternatives = (Alternatives) rule.eContents().get(1);
      private final EnumLiteralDeclaration cONE_TO_ONEEnumLiteralDeclaration_0 =
         (EnumLiteralDeclaration) cAlternatives.eContents().get(0);
      private final Keyword cONE_TO_ONEONE_TO_ONEKeyword_0_0 =
         (Keyword) cONE_TO_ONEEnumLiteralDeclaration_0.eContents().get(0);
      private final EnumLiteralDeclaration cONE_TO_MANYEnumLiteralDeclaration_1 =
         (EnumLiteralDeclaration) cAlternatives.eContents().get(1);
      private final Keyword cONE_TO_MANYONE_TO_MANYKeyword_1_0 =
         (Keyword) cONE_TO_MANYEnumLiteralDeclaration_1.eContents().get(0);
      private final EnumLiteralDeclaration cMANY_TO_ONEEnumLiteralDeclaration_2 =
         (EnumLiteralDeclaration) cAlternatives.eContents().get(2);
      private final Keyword cMANY_TO_ONEMANY_TO_ONEKeyword_2_0 =
         (Keyword) cMANY_TO_ONEEnumLiteralDeclaration_2.eContents().get(0);
      private final EnumLiteralDeclaration cMANY_TO_MANYEnumLiteralDeclaration_3 =
         (EnumLiteralDeclaration) cAlternatives.eContents().get(3);
      private final Keyword cMANY_TO_MANYMANY_TO_MANYKeyword_3_0 =
         (Keyword) cMANY_TO_MANYEnumLiteralDeclaration_3.eContents().get(0);

      //enum RelationMultiplicityEnum:
      //	ONE_TO_ONE | ONE_TO_MANY | MANY_TO_ONE | MANY_TO_MANY;
      @Override
      public EnumRule getRule() {
         return rule;
      }

      //ONE_TO_ONE | ONE_TO_MANY | MANY_TO_ONE | MANY_TO_MANY
      public Alternatives getAlternatives() {
         return cAlternatives;
      }

      //ONE_TO_ONE
      public EnumLiteralDeclaration getONE_TO_ONEEnumLiteralDeclaration_0() {
         return cONE_TO_ONEEnumLiteralDeclaration_0;
      }

      //"ONE_TO_ONE"
      public Keyword getONE_TO_ONEONE_TO_ONEKeyword_0_0() {
         return cONE_TO_ONEONE_TO_ONEKeyword_0_0;
      }

      //ONE_TO_MANY
      public EnumLiteralDeclaration getONE_TO_MANYEnumLiteralDeclaration_1() {
         return cONE_TO_MANYEnumLiteralDeclaration_1;
      }

      //"ONE_TO_MANY"
      public Keyword getONE_TO_MANYONE_TO_MANYKeyword_1_0() {
         return cONE_TO_MANYONE_TO_MANYKeyword_1_0;
      }

      //MANY_TO_ONE
      public EnumLiteralDeclaration getMANY_TO_ONEEnumLiteralDeclaration_2() {
         return cMANY_TO_ONEEnumLiteralDeclaration_2;
      }

      //"MANY_TO_ONE"
      public Keyword getMANY_TO_ONEMANY_TO_ONEKeyword_2_0() {
         return cMANY_TO_ONEMANY_TO_ONEKeyword_2_0;
      }

      //MANY_TO_MANY
      public EnumLiteralDeclaration getMANY_TO_MANYEnumLiteralDeclaration_3() {
         return cMANY_TO_MANYEnumLiteralDeclaration_3;
      }

      //"MANY_TO_MANY"
      public Keyword getMANY_TO_MANYMANY_TO_MANYKeyword_3_0() {
         return cMANY_TO_MANYMANY_TO_MANYKeyword_3_0;
      }
   }

   public class AccessPermissionEnumElements extends AbstractEnumRuleElementFinder {
      private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "AccessPermissionEnum");
      private final Alternatives cAlternatives = (Alternatives) rule.eContents().get(1);
      private final EnumLiteralDeclaration cALLOWEnumLiteralDeclaration_0 =
         (EnumLiteralDeclaration) cAlternatives.eContents().get(0);
      private final Keyword cALLOWALLOWKeyword_0_0 = (Keyword) cALLOWEnumLiteralDeclaration_0.eContents().get(0);
      private final EnumLiteralDeclaration cDENYEnumLiteralDeclaration_1 =
         (EnumLiteralDeclaration) cAlternatives.eContents().get(1);
      private final Keyword cDENYDENYKeyword_1_0 = (Keyword) cDENYEnumLiteralDeclaration_1.eContents().get(0);

      //enum AccessPermissionEnum:
      //	ALLOW | DENY;
      @Override
      public EnumRule getRule() {
         return rule;
      }

      //ALLOW | DENY
      public Alternatives getAlternatives() {
         return cAlternatives;
      }

      //ALLOW
      public EnumLiteralDeclaration getALLOWEnumLiteralDeclaration_0() {
         return cALLOWEnumLiteralDeclaration_0;
      }

      //"ALLOW"
      public Keyword getALLOWALLOWKeyword_0_0() {
         return cALLOWALLOWKeyword_0_0;
      }

      //DENY
      public EnumLiteralDeclaration getDENYEnumLiteralDeclaration_1() {
         return cDENYEnumLiteralDeclaration_1;
      }

      //"DENY"
      public Keyword getDENYDENYKeyword_1_0() {
         return cDENYDENYKeyword_1_0;
      }
   }

   public class XRelationSideEnumElements extends AbstractEnumRuleElementFinder {
      private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "XRelationSideEnum");
      private final Alternatives cAlternatives = (Alternatives) rule.eContents().get(1);
      private final EnumLiteralDeclaration cSIDE_AEnumLiteralDeclaration_0 =
         (EnumLiteralDeclaration) cAlternatives.eContents().get(0);
      private final Keyword cSIDE_ASIDE_AKeyword_0_0 = (Keyword) cSIDE_AEnumLiteralDeclaration_0.eContents().get(0);
      private final EnumLiteralDeclaration cSIDE_BEnumLiteralDeclaration_1 =
         (EnumLiteralDeclaration) cAlternatives.eContents().get(1);
      private final Keyword cSIDE_BSIDE_BKeyword_1_0 = (Keyword) cSIDE_BEnumLiteralDeclaration_1.eContents().get(0);
      private final EnumLiteralDeclaration cBOTHEnumLiteralDeclaration_2 =
         (EnumLiteralDeclaration) cAlternatives.eContents().get(2);
      private final Keyword cBOTHBOTHKeyword_2_0 = (Keyword) cBOTHEnumLiteralDeclaration_2.eContents().get(0);

      ////BranchRestriction:
      ////	'onBranch' branch=[XBranchRef|BRANCH_INSTANCE_REFERENCE] '{' accessRule+=PermissionRule '}';
      ////AccessSet:
      ////	artifactRestrictions+=ArtifactInstanceRestriction
      ////	artifactTypeRestrictions+=ArtifactTypeRestriction
      ////	attributeTypeRestrictions+=AttributeTypeRestriction
      ////	relationTypeRestrictions+=RelationTypeRestriction; enum XRelationSideEnum:
      //	SIDE_A | SIDE_B | BOTH;
      @Override
      public EnumRule getRule() {
         return rule;
      }

      ////BranchRestriction:
      ////	'onBranch' branch=[XBranchRef|BRANCH_INSTANCE_REFERENCE] '{' accessRule+=PermissionRule '}';
      ////AccessSet:
      ////	artifactRestrictions+=ArtifactInstanceRestriction
      ////	artifactTypeRestrictions+=ArtifactTypeRestriction
      ////	attributeTypeRestrictions+=AttributeTypeRestriction
      ////	relationTypeRestrictions+=RelationTypeRestriction; SIDE_A | SIDE_B | BOTH
      public Alternatives getAlternatives() {
         return cAlternatives;
      }

      //SIDE_A
      public EnumLiteralDeclaration getSIDE_AEnumLiteralDeclaration_0() {
         return cSIDE_AEnumLiteralDeclaration_0;
      }

      //"SIDE_A"
      public Keyword getSIDE_ASIDE_AKeyword_0_0() {
         return cSIDE_ASIDE_AKeyword_0_0;
      }

      //SIDE_B
      public EnumLiteralDeclaration getSIDE_BEnumLiteralDeclaration_1() {
         return cSIDE_BEnumLiteralDeclaration_1;
      }

      //"SIDE_B"
      public Keyword getSIDE_BSIDE_BKeyword_1_0() {
         return cSIDE_BSIDE_BKeyword_1_0;
      }

      //BOTH
      public EnumLiteralDeclaration getBOTHEnumLiteralDeclaration_2() {
         return cBOTHEnumLiteralDeclaration_2;
      }

      //"BOTH"
      public Keyword getBOTHBOTHKeyword_2_0() {
         return cBOTHBOTHKeyword_2_0;
      }
   }

   private OseeDslElements pOseeDsl;
   private ImportElements pImport;
   private TerminalRule tWHOLE_NUM_STR;
   private NAME_REFERENCEElements pNAME_REFERENCE;
   private ATTRIBUTE_TYPE_REFERENCEElements pATTRIBUTE_TYPE_REFERENCE;
   private ARTIFACT_TYPE_REFERENCEElements pARTIFACT_TYPE_REFERENCE;
   private RELATION_TYPE_REFERENCEElements pRELATION_TYPE_REFERENCE;
   private ENUM_TYPE_REFERENCEElements pENUM_TYPE_REFERENCE;
   private ENUM_ENTRY_TYPE_REFERENCEElements pENUM_ENTRY_TYPE_REFERENCE;
   private QUALIFIED_NAMEElements pQUALIFIED_NAME;
   private OseeElementElements pOseeElement;
   private OseeTypeElements pOseeType;
   private XArtifactTypeElements pXArtifactType;
   private XAttributeTypeRefElements pXAttributeTypeRef;
   private XAttributeTypeElements pXAttributeType;
   private AttributeBaseTypeElements pAttributeBaseType;
   private XOseeEnumTypeElements pXOseeEnumType;
   private XOseeEnumEntryElements pXOseeEnumEntry;
   private XOseeEnumOverrideElements pXOseeEnumOverride;
   private OverrideOptionElements pOverrideOption;
   private AddEnumElements pAddEnum;
   private RemoveEnumElements pRemoveEnum;
   private XRelationTypeElements pXRelationType;
   private RelationMultiplicityEnumElements unknownRuleRelationMultiplicityEnum;
   private RelationOrderTypeElements pRelationOrderType;
   private ARTIFACT_INSTANCE_REFERENCEElements pARTIFACT_INSTANCE_REFERENCE;
   private XArtifactRefElements pXArtifactRef;
   private BRANCH_INSTANCE_REFERENCEElements pBRANCH_INSTANCE_REFERENCE;
   private XBranchRefElements pXBranchRef;
   private ACCESS_CONTEXT_TYPE_REFRENCEElements pACCESS_CONTEXT_TYPE_REFRENCE;
   private AccessContextElements pAccessContext;
   private HierarchyRestrictionElements pHierarchyRestriction;
   private AccessPermissionEnumElements unknownRuleAccessPermissionEnum;
   private ObjectRestrictionElements pObjectRestriction;
   private ArtifactInstanceRestrictionElements pArtifactInstanceRestriction;
   private ArtifactTypeRestrictionElements pArtifactTypeRestriction;
   private AttributeTypeRestrictionElements pAttributeTypeRestriction;
   private RelationTypeRestrictionElements pRelationTypeRestriction;
   private XRelationSideEnumElements unknownRuleXRelationSideEnum;

   private final GrammarProvider grammarProvider;

   private final TerminalsGrammarAccess gaTerminals;

   @Inject
   public OseeDslGrammarAccess(GrammarProvider grammarProvider, TerminalsGrammarAccess gaTerminals) {
      this.grammarProvider = grammarProvider;
      this.gaTerminals = gaTerminals;
   }

   @Override
   public Grammar getGrammar() {
      return grammarProvider.getGrammar(this);
   }

   public TerminalsGrammarAccess getTerminalsGrammarAccess() {
      return gaTerminals;
   }

   //OseeDsl:
   //	imports+=Import* (artifactTypes+=XArtifactType | relationTypes+=XRelationType | attributeTypes+=XAttributeType |
   //	enumTypes+=XOseeEnumType | enumOverrides+=XOseeEnumOverride)* (branchRefs+=XBranchRef | artifactRefs+=XArtifactRef)*
   //	accessDeclarations+=AccessContext*;
   public OseeDslElements getOseeDslAccess() {
      return pOseeDsl != null ? pOseeDsl : (pOseeDsl = new OseeDslElements());
   }

   public ParserRule getOseeDslRule() {
      return getOseeDslAccess().getRule();
   }

   //Import:
   //	"import" importURI=STRING;
   public ImportElements getImportAccess() {
      return pImport != null ? pImport : (pImport = new ImportElements());
   }

   public ParserRule getImportRule() {
      return getImportAccess().getRule();
   }

   //terminal WHOLE_NUM_STR:
   //	"0".."9"+;
   public TerminalRule getWHOLE_NUM_STRRule() {
      return tWHOLE_NUM_STR != null ? tWHOLE_NUM_STR : (tWHOLE_NUM_STR =
         (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "WHOLE_NUM_STR"));
   }

   //NAME_REFERENCE returns ecore::EString:
   //	STRING;
   public NAME_REFERENCEElements getNAME_REFERENCEAccess() {
      return pNAME_REFERENCE != null ? pNAME_REFERENCE : (pNAME_REFERENCE = new NAME_REFERENCEElements());
   }

   public ParserRule getNAME_REFERENCERule() {
      return getNAME_REFERENCEAccess().getRule();
   }

   //ATTRIBUTE_TYPE_REFERENCE returns ecore::EString:
   //	STRING;
   public ATTRIBUTE_TYPE_REFERENCEElements getATTRIBUTE_TYPE_REFERENCEAccess() {
      return pATTRIBUTE_TYPE_REFERENCE != null ? pATTRIBUTE_TYPE_REFERENCE : (pATTRIBUTE_TYPE_REFERENCE =
         new ATTRIBUTE_TYPE_REFERENCEElements());
   }

   public ParserRule getATTRIBUTE_TYPE_REFERENCERule() {
      return getATTRIBUTE_TYPE_REFERENCEAccess().getRule();
   }

   //ARTIFACT_TYPE_REFERENCE returns ecore::EString:
   //	STRING;
   public ARTIFACT_TYPE_REFERENCEElements getARTIFACT_TYPE_REFERENCEAccess() {
      return pARTIFACT_TYPE_REFERENCE != null ? pARTIFACT_TYPE_REFERENCE : (pARTIFACT_TYPE_REFERENCE =
         new ARTIFACT_TYPE_REFERENCEElements());
   }

   public ParserRule getARTIFACT_TYPE_REFERENCERule() {
      return getARTIFACT_TYPE_REFERENCEAccess().getRule();
   }

   //RELATION_TYPE_REFERENCE returns ecore::EString:
   //	STRING;
   public RELATION_TYPE_REFERENCEElements getRELATION_TYPE_REFERENCEAccess() {
      return pRELATION_TYPE_REFERENCE != null ? pRELATION_TYPE_REFERENCE : (pRELATION_TYPE_REFERENCE =
         new RELATION_TYPE_REFERENCEElements());
   }

   public ParserRule getRELATION_TYPE_REFERENCERule() {
      return getRELATION_TYPE_REFERENCEAccess().getRule();
   }

   //ENUM_TYPE_REFERENCE returns ecore::EString:
   //	STRING;
   public ENUM_TYPE_REFERENCEElements getENUM_TYPE_REFERENCEAccess() {
      return pENUM_TYPE_REFERENCE != null ? pENUM_TYPE_REFERENCE : (pENUM_TYPE_REFERENCE =
         new ENUM_TYPE_REFERENCEElements());
   }

   public ParserRule getENUM_TYPE_REFERENCERule() {
      return getENUM_TYPE_REFERENCEAccess().getRule();
   }

   //ENUM_ENTRY_TYPE_REFERENCE returns ecore::EString:
   //	STRING;
   public ENUM_ENTRY_TYPE_REFERENCEElements getENUM_ENTRY_TYPE_REFERENCEAccess() {
      return pENUM_ENTRY_TYPE_REFERENCE != null ? pENUM_ENTRY_TYPE_REFERENCE : (pENUM_ENTRY_TYPE_REFERENCE =
         new ENUM_ENTRY_TYPE_REFERENCEElements());
   }

   public ParserRule getENUM_ENTRY_TYPE_REFERENCERule() {
      return getENUM_ENTRY_TYPE_REFERENCEAccess().getRule();
   }

   //QUALIFIED_NAME returns ecore::EString:
   //	ID ("." ID)*;
   public QUALIFIED_NAMEElements getQUALIFIED_NAMEAccess() {
      return pQUALIFIED_NAME != null ? pQUALIFIED_NAME : (pQUALIFIED_NAME = new QUALIFIED_NAMEElements());
   }

   public ParserRule getQUALIFIED_NAMERule() {
      return getQUALIFIED_NAMEAccess().getRule();
   }

   /////////////////////////////////////////
   ////  OSEE TYPE MODEL                  //
   /////////////////////////////////////////
   //OseeElement:
   //	XOseeEnumOverride | OseeType;
   public OseeElementElements getOseeElementAccess() {
      return pOseeElement != null ? pOseeElement : (pOseeElement = new OseeElementElements());
   }

   public ParserRule getOseeElementRule() {
      return getOseeElementAccess().getRule();
   }

   //OseeType:
   //	XArtifactType | XRelationType | XAttributeType | XOseeEnumType;
   public OseeTypeElements getOseeTypeAccess() {
      return pOseeType != null ? pOseeType : (pOseeType = new OseeTypeElements());
   }

   public ParserRule getOseeTypeRule() {
      return getOseeTypeAccess().getRule();
   }

   //XArtifactType:
   //	abstract?="abstract"? "artifactType" name=ARTIFACT_TYPE_REFERENCE ("extends"
   //	superArtifactTypes+=[XArtifactType|ARTIFACT_TYPE_REFERENCE] (","
   //	superArtifactTypes+=[XArtifactType|ARTIFACT_TYPE_REFERENCE])*)? "{" "guid" typeGuid=STRING
   //	validAttributeTypes+=XAttributeTypeRef* "}";
   public XArtifactTypeElements getXArtifactTypeAccess() {
      return pXArtifactType != null ? pXArtifactType : (pXArtifactType = new XArtifactTypeElements());
   }

   public ParserRule getXArtifactTypeRule() {
      return getXArtifactTypeAccess().getRule();
   }

   //XAttributeTypeRef:
   //	"attribute" validAttributeType=[XAttributeType|ATTRIBUTE_TYPE_REFERENCE] ("branchGuid" branchGuid=STRING)?;
   public XAttributeTypeRefElements getXAttributeTypeRefAccess() {
      return pXAttributeTypeRef != null ? pXAttributeTypeRef : (pXAttributeTypeRef = new XAttributeTypeRefElements());
   }

   public ParserRule getXAttributeTypeRefRule() {
      return getXAttributeTypeRefAccess().getRule();
   }

   //XAttributeType:
   //	"attributeType" name=ATTRIBUTE_TYPE_REFERENCE ("extends" baseAttributeType=AttributeBaseType) ("overrides"
   //	override=[XAttributeType|ATTRIBUTE_TYPE_REFERENCE])? "{" "guid" typeGuid=STRING "dataProvider"
   //	dataProvider=("DefaultAttributeDataProvider" | "UriAttributeDataProvider" | QUALIFIED_NAME) "min" min=WHOLE_NUM_STR
   //	"max" max=(WHOLE_NUM_STR | "unlimited") ("taggerId" taggerId=("DefaultAttributeTaggerProvider" | QUALIFIED_NAME))?
   //	("enumType" enumType=[XOseeEnumType|ENUM_TYPE_REFERENCE])? ("description" description=STRING)? ("defaultValue"
   //	defaultValue=STRING)? ("fileExtension" fileExtension=STRING)? "}";
   public XAttributeTypeElements getXAttributeTypeAccess() {
      return pXAttributeType != null ? pXAttributeType : (pXAttributeType = new XAttributeTypeElements());
   }

   public ParserRule getXAttributeTypeRule() {
      return getXAttributeTypeAccess().getRule();
   }

   //AttributeBaseType returns ecore::EString:
   //	"BooleanAttribute" | "CompressedContentAttribute" | "DateAttribute" | "EnumeratedAttribute" | "FloatingPointAttribute"
   //	| "IntegerAttribute" | "JavaObjectAttribute" | "StringAttribute" | "WordAttribute" | QUALIFIED_NAME;
   public AttributeBaseTypeElements getAttributeBaseTypeAccess() {
      return pAttributeBaseType != null ? pAttributeBaseType : (pAttributeBaseType = new AttributeBaseTypeElements());
   }

   public ParserRule getAttributeBaseTypeRule() {
      return getAttributeBaseTypeAccess().getRule();
   }

   //XOseeEnumType:
   //	"oseeEnumType" name=ENUM_TYPE_REFERENCE "{" "guid" typeGuid=STRING enumEntries+=XOseeEnumEntry* "}";
   public XOseeEnumTypeElements getXOseeEnumTypeAccess() {
      return pXOseeEnumType != null ? pXOseeEnumType : (pXOseeEnumType = new XOseeEnumTypeElements());
   }

   public ParserRule getXOseeEnumTypeRule() {
      return getXOseeEnumTypeAccess().getRule();
   }

   //XOseeEnumEntry:
   //	"entry" name=ENUM_ENTRY_TYPE_REFERENCE ordinal=WHOLE_NUM_STR? ("entryGuid" entryGuid=STRING)?;
   public XOseeEnumEntryElements getXOseeEnumEntryAccess() {
      return pXOseeEnumEntry != null ? pXOseeEnumEntry : (pXOseeEnumEntry = new XOseeEnumEntryElements());
   }

   public ParserRule getXOseeEnumEntryRule() {
      return getXOseeEnumEntryAccess().getRule();
   }

   //XOseeEnumOverride:
   //	"overrides enum" overridenEnumType=[XOseeEnumType|ENUM_TYPE_REFERENCE] "{" inheritAll?="inheritAll"?
   //	overrideOptions+=OverrideOption* "}";
   public XOseeEnumOverrideElements getXOseeEnumOverrideAccess() {
      return pXOseeEnumOverride != null ? pXOseeEnumOverride : (pXOseeEnumOverride = new XOseeEnumOverrideElements());
   }

   public ParserRule getXOseeEnumOverrideRule() {
      return getXOseeEnumOverrideAccess().getRule();
   }

   //OverrideOption:
   //	AddEnum | RemoveEnum;
   public OverrideOptionElements getOverrideOptionAccess() {
      return pOverrideOption != null ? pOverrideOption : (pOverrideOption = new OverrideOptionElements());
   }

   public ParserRule getOverrideOptionRule() {
      return getOverrideOptionAccess().getRule();
   }

   //AddEnum:
   //	"add" enumEntry=ENUM_ENTRY_TYPE_REFERENCE ordinal=WHOLE_NUM_STR? ("entryGuid" entryGuid=STRING)?;
   public AddEnumElements getAddEnumAccess() {
      return pAddEnum != null ? pAddEnum : (pAddEnum = new AddEnumElements());
   }

   public ParserRule getAddEnumRule() {
      return getAddEnumAccess().getRule();
   }

   //RemoveEnum:
   //	"remove" enumEntry=[XOseeEnumEntry|ENUM_ENTRY_TYPE_REFERENCE];
   public RemoveEnumElements getRemoveEnumAccess() {
      return pRemoveEnum != null ? pRemoveEnum : (pRemoveEnum = new RemoveEnumElements());
   }

   public ParserRule getRemoveEnumRule() {
      return getRemoveEnumAccess().getRule();
   }

   //XRelationType:
   //	"relationType" name=RELATION_TYPE_REFERENCE "{" "guid" typeGuid=STRING "sideAName" sideAName=STRING
   //	"sideAArtifactType" sideAArtifactType=[XArtifactType|ARTIFACT_TYPE_REFERENCE] "sideBName" sideBName=STRING
   //	"sideBArtifactType" sideBArtifactType=[XArtifactType|ARTIFACT_TYPE_REFERENCE] "defaultOrderType"
   //	defaultOrderType=RelationOrderType "multiplicity" multiplicity=RelationMultiplicityEnum "}";
   public XRelationTypeElements getXRelationTypeAccess() {
      return pXRelationType != null ? pXRelationType : (pXRelationType = new XRelationTypeElements());
   }

   public ParserRule getXRelationTypeRule() {
      return getXRelationTypeAccess().getRule();
   }

   //enum RelationMultiplicityEnum:
   //	ONE_TO_ONE | ONE_TO_MANY | MANY_TO_ONE | MANY_TO_MANY;
   public RelationMultiplicityEnumElements getRelationMultiplicityEnumAccess() {
      return unknownRuleRelationMultiplicityEnum != null ? unknownRuleRelationMultiplicityEnum : (unknownRuleRelationMultiplicityEnum =
         new RelationMultiplicityEnumElements());
   }

   public EnumRule getRelationMultiplicityEnumRule() {
      return getRelationMultiplicityEnumAccess().getRule();
   }

   //RelationOrderType returns ecore::EString:
   //	"Lexicographical_Ascending" | "Lexicographical_Descending" | "Unordered" | ID;
   public RelationOrderTypeElements getRelationOrderTypeAccess() {
      return pRelationOrderType != null ? pRelationOrderType : (pRelationOrderType = new RelationOrderTypeElements());
   }

   public ParserRule getRelationOrderTypeRule() {
      return getRelationOrderTypeAccess().getRule();
   }

   /////////////////////////////////////////
   ////  OSEE ARTIFACT INSTANCE REFERENCE //
   /////////////////////////////////////////
   //ARTIFACT_INSTANCE_REFERENCE returns ecore::EString:
   //	STRING;
   public ARTIFACT_INSTANCE_REFERENCEElements getARTIFACT_INSTANCE_REFERENCEAccess() {
      return pARTIFACT_INSTANCE_REFERENCE != null ? pARTIFACT_INSTANCE_REFERENCE : (pARTIFACT_INSTANCE_REFERENCE =
         new ARTIFACT_INSTANCE_REFERENCEElements());
   }

   public ParserRule getARTIFACT_INSTANCE_REFERENCERule() {
      return getARTIFACT_INSTANCE_REFERENCEAccess().getRule();
   }

   //XArtifactRef:
   //	"artifact" name=ARTIFACT_INSTANCE_REFERENCE "artGuid" guid=STRING ";";
   public XArtifactRefElements getXArtifactRefAccess() {
      return pXArtifactRef != null ? pXArtifactRef : (pXArtifactRef = new XArtifactRefElements());
   }

   public ParserRule getXArtifactRefRule() {
      return getXArtifactRefAccess().getRule();
   }

   //BRANCH_INSTANCE_REFERENCE returns ecore::EString:
   //	STRING;
   public BRANCH_INSTANCE_REFERENCEElements getBRANCH_INSTANCE_REFERENCEAccess() {
      return pBRANCH_INSTANCE_REFERENCE != null ? pBRANCH_INSTANCE_REFERENCE : (pBRANCH_INSTANCE_REFERENCE =
         new BRANCH_INSTANCE_REFERENCEElements());
   }

   public ParserRule getBRANCH_INSTANCE_REFERENCERule() {
      return getBRANCH_INSTANCE_REFERENCEAccess().getRule();
   }

   //XBranchRef:
   //	"branch" name=BRANCH_INSTANCE_REFERENCE "branchGuid" guid=STRING ";";
   public XBranchRefElements getXBranchRefAccess() {
      return pXBranchRef != null ? pXBranchRef : (pXBranchRef = new XBranchRefElements());
   }

   public ParserRule getXBranchRefRule() {
      return getXBranchRefAccess().getRule();
   }

   /////////////////////////////////////////
   ////  OSEE ACCESS MODEL                //
   /////////////////////////////////////////
   //ACCESS_CONTEXT_TYPE_REFRENCE returns ecore::EString:
   //	STRING;
   public ACCESS_CONTEXT_TYPE_REFRENCEElements getACCESS_CONTEXT_TYPE_REFRENCEAccess() {
      return pACCESS_CONTEXT_TYPE_REFRENCE != null ? pACCESS_CONTEXT_TYPE_REFRENCE : (pACCESS_CONTEXT_TYPE_REFRENCE =
         new ACCESS_CONTEXT_TYPE_REFRENCEElements());
   }

   public ParserRule getACCESS_CONTEXT_TYPE_REFRENCERule() {
      return getACCESS_CONTEXT_TYPE_REFRENCEAccess().getRule();
   }

   //AccessContext:
   //	"accessContext" name=ACCESS_CONTEXT_TYPE_REFRENCE ("extends"
   //	superAccessContexts+=[AccessContext|ACCESS_CONTEXT_TYPE_REFRENCE] (","
   //	superAccessContexts+=[AccessContext|ACCESS_CONTEXT_TYPE_REFRENCE])*)? "{" "guid" guid=STRING ";"
   //	(accessRules+=ObjectRestriction | hierarchyRestrictions+=HierarchyRestriction)+ "}";
   public AccessContextElements getAccessContextAccess() {
      return pAccessContext != null ? pAccessContext : (pAccessContext = new AccessContextElements());
   }

   public ParserRule getAccessContextRule() {
      return getAccessContextAccess().getRule();
   }

   //HierarchyRestriction:
   //	"childrenOf" artifact=[XArtifactRef|ARTIFACT_INSTANCE_REFERENCE] "{" accessRules+=ObjectRestriction+ "}";
   public HierarchyRestrictionElements getHierarchyRestrictionAccess() {
      return pHierarchyRestriction != null ? pHierarchyRestriction : (pHierarchyRestriction =
         new HierarchyRestrictionElements());
   }

   public ParserRule getHierarchyRestrictionRule() {
      return getHierarchyRestrictionAccess().getRule();
   }

   //enum AccessPermissionEnum:
   //	ALLOW | DENY;
   public AccessPermissionEnumElements getAccessPermissionEnumAccess() {
      return unknownRuleAccessPermissionEnum != null ? unknownRuleAccessPermissionEnum : (unknownRuleAccessPermissionEnum =
         new AccessPermissionEnumElements());
   }

   public EnumRule getAccessPermissionEnumRule() {
      return getAccessPermissionEnumAccess().getRule();
   }

   //ObjectRestriction:
   //	ArtifactInstanceRestriction | ArtifactTypeRestriction | RelationTypeRestriction | AttributeTypeRestriction;
   public ObjectRestrictionElements getObjectRestrictionAccess() {
      return pObjectRestriction != null ? pObjectRestriction : (pObjectRestriction = new ObjectRestrictionElements());
   }

   public ParserRule getObjectRestrictionRule() {
      return getObjectRestrictionAccess().getRule();
   }

   //ArtifactInstanceRestriction:
   //	permission=AccessPermissionEnum "edit" "artifact" artifactRef=[XArtifactRef|ARTIFACT_INSTANCE_REFERENCE] ";";
   public ArtifactInstanceRestrictionElements getArtifactInstanceRestrictionAccess() {
      return pArtifactInstanceRestriction != null ? pArtifactInstanceRestriction : (pArtifactInstanceRestriction =
         new ArtifactInstanceRestrictionElements());
   }

   public ParserRule getArtifactInstanceRestrictionRule() {
      return getArtifactInstanceRestrictionAccess().getRule();
   }

   //ArtifactTypeRestriction:
   //	permission=AccessPermissionEnum "edit" "artifactType" artifactTypeRef=[XArtifactType|ARTIFACT_TYPE_REFERENCE] ";";
   public ArtifactTypeRestrictionElements getArtifactTypeRestrictionAccess() {
      return pArtifactTypeRestriction != null ? pArtifactTypeRestriction : (pArtifactTypeRestriction =
         new ArtifactTypeRestrictionElements());
   }

   public ParserRule getArtifactTypeRestrictionRule() {
      return getArtifactTypeRestrictionAccess().getRule();
   }

   //AttributeTypeRestriction:
   //	permission=AccessPermissionEnum "edit" "attributeType" attributeTypeRef=[XAttributeType|ATTRIBUTE_TYPE_REFERENCE]
   //	("of" "artifactType" artifactTypeRef=[XArtifactType|ARTIFACT_TYPE_REFERENCE])? ";";
   public AttributeTypeRestrictionElements getAttributeTypeRestrictionAccess() {
      return pAttributeTypeRestriction != null ? pAttributeTypeRestriction : (pAttributeTypeRestriction =
         new AttributeTypeRestrictionElements());
   }

   public ParserRule getAttributeTypeRestrictionRule() {
      return getAttributeTypeRestrictionAccess().getRule();
   }

   //RelationTypeRestriction:
   //	permission=AccessPermissionEnum "edit" "relationType" relationTypeRef=[XRelationType|RELATION_TYPE_REFERENCE]
   //	restrictedToSide=XRelationSideEnum ";";
   public RelationTypeRestrictionElements getRelationTypeRestrictionAccess() {
      return pRelationTypeRestriction != null ? pRelationTypeRestriction : (pRelationTypeRestriction =
         new RelationTypeRestrictionElements());
   }

   public ParserRule getRelationTypeRestrictionRule() {
      return getRelationTypeRestrictionAccess().getRule();
   }

   ////BranchRestriction:
   ////	'onBranch' branch=[XBranchRef|BRANCH_INSTANCE_REFERENCE] '{' accessRule+=PermissionRule '}';
   ////AccessSet:
   ////	artifactRestrictions+=ArtifactInstanceRestriction
   ////	artifactTypeRestrictions+=ArtifactTypeRestriction
   ////	attributeTypeRestrictions+=AttributeTypeRestriction
   ////	relationTypeRestrictions+=RelationTypeRestriction; enum XRelationSideEnum:
   //	SIDE_A | SIDE_B | BOTH;
   public XRelationSideEnumElements getXRelationSideEnumAccess() {
      return unknownRuleXRelationSideEnum != null ? unknownRuleXRelationSideEnum : (unknownRuleXRelationSideEnum =
         new XRelationSideEnumElements());
   }

   public EnumRule getXRelationSideEnumRule() {
      return getXRelationSideEnumAccess().getRule();
   }

   //terminal ID:
   //	"^"? ("a".."z" | "A".."Z" | "_") ("a".."z" | "A".."Z" | "_" | "0".."9")*;
   public TerminalRule getIDRule() {
      return gaTerminals.getIDRule();
   }

   //terminal INT returns ecore::EInt:
   //	"0".."9"+;
   public TerminalRule getINTRule() {
      return gaTerminals.getINTRule();
   }

   //terminal STRING:
   //	"\"" ("\\" ("b" | "t" | "n" | "f" | "r" | "\"" | "\'" | "\\") | !("\\" | "\""))* "\"" | "\'" ("\\" ("b" | "t" | "n" |
   //	"f" | "r" | "\"" | "\'" | "\\") | !("\\" | "\'"))* "\'";
   public TerminalRule getSTRINGRule() {
      return gaTerminals.getSTRINGRule();
   }

   //terminal ML_COMMENT:
   //	"/ *"->"* /";
   public TerminalRule getML_COMMENTRule() {
      return gaTerminals.getML_COMMENTRule();
   }

   //terminal SL_COMMENT:
   //	"//" !("\n" | "\r")* ("\r"? "\n")?;
   public TerminalRule getSL_COMMENTRule() {
      return gaTerminals.getSL_COMMENTRule();
   }

   //terminal WS:
   //	(" " | "\t" | "\r" | "\n")+;
   public TerminalRule getWSRule() {
      return gaTerminals.getWSRule();
   }

   //terminal ANY_OTHER:
   //	.;
   public TerminalRule getANY_OTHERRule() {
      return gaTerminals.getANY_OTHERRule();
   }
}
