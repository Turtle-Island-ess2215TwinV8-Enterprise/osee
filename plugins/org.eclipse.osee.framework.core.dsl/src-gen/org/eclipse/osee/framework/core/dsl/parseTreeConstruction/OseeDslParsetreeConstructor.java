/*
 * generated by Xtext
 */
package org.eclipse.osee.framework.core.dsl.parseTreeConstruction;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.osee.framework.core.dsl.services.OseeDslGrammarAccess;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.parsetree.reconstr.IEObjectConsumer;
import org.eclipse.xtext.parsetree.reconstr.impl.AbstractParseTreeConstructor;
import com.google.inject.Inject;

@SuppressWarnings("all")
public class OseeDslParsetreeConstructor extends AbstractParseTreeConstructor {

   @Inject
   private OseeDslGrammarAccess grammarAccess;

   @Override
   protected AbstractToken getRootToken(IEObjectConsumer inst) {
      return new ThisRootNode(inst);
   }

   protected class ThisRootNode extends RootToken {
      public ThisRootNode(IEObjectConsumer inst) {
         super(inst);
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new OseeDsl_Group(this, this, 0, inst);
            case 1:
               return new Import_Group(this, this, 1, inst);
            case 2:
               return new OseeElement_Alternatives(this, this, 2, inst);
            case 3:
               return new OseeType_Alternatives(this, this, 3, inst);
            case 4:
               return new XArtifactType_Group(this, this, 4, inst);
            case 5:
               return new XAttributeTypeRef_Group(this, this, 5, inst);
            case 6:
               return new XAttributeType_Group(this, this, 6, inst);
            case 7:
               return new XOseeEnumType_Group(this, this, 7, inst);
            case 8:
               return new XOseeEnumEntry_Group(this, this, 8, inst);
            case 9:
               return new XOseeEnumOverride_Group(this, this, 9, inst);
            case 10:
               return new OverrideOption_Alternatives(this, this, 10, inst);
            case 11:
               return new AddEnum_Group(this, this, 11, inst);
            case 12:
               return new RemoveEnum_Group(this, this, 12, inst);
            case 13:
               return new XRelationType_Group(this, this, 13, inst);
            case 14:
               return new XArtifactRef_Group(this, this, 14, inst);
            case 15:
               return new XBranchRef_Group(this, this, 15, inst);
            case 16:
               return new AccessContext_Group(this, this, 16, inst);
            case 17:
               return new HierarchyRestriction_Group(this, this, 17, inst);
            case 18:
               return new ObjectRestriction_Alternatives(this, this, 18, inst);
            case 19:
               return new ArtifactInstanceRestriction_Group(this, this, 19, inst);
            case 20:
               return new ArtifactTypeRestriction_Group(this, this, 20, inst);
            case 21:
               return new AttributeTypeRestriction_Group(this, this, 21, inst);
            case 22:
               return new RelationTypeRestriction_Group(this, this, 22, inst);
            default:
               return null;
         }
      }
   }

   /************
    * begin Rule OseeDsl **************** OseeDsl: imports+=Import* (artifactTypes+=XArtifactType |
    * relationTypes+=XRelationType | attributeTypes+=XAttributeType | enumTypes+=XOseeEnumType |
    * enumOverrides+=XOseeEnumOverride)* (branchRefs+=XBranchRef | artifactRefs+=XArtifactRef)*
    * accessDeclarations+=AccessContext*;
    **/

   // imports+=Import* (artifactTypes+=XArtifactType | relationTypes+=XRelationType | attributeTypes+=XAttributeType |
   // enumTypes+=XOseeEnumType | enumOverrides+=XOseeEnumOverride)* (branchRefs+=XBranchRef | artifactRefs+=XArtifactRef)*
   // accessDeclarations+=AccessContext*
   protected class OseeDsl_Group extends GroupToken {

      public OseeDsl_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Group getGrammarElement() {
         return grammarAccess.getOseeDslAccess().getGroup();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new OseeDsl_AccessDeclarationsAssignment_3(lastRuleCallOrigin, this, 0, inst);
            case 1:
               return new OseeDsl_Alternatives_2(lastRuleCallOrigin, this, 1, inst);
            case 2:
               return new OseeDsl_Alternatives_1(lastRuleCallOrigin, this, 2, inst);
            case 3:
               return new OseeDsl_ImportsAssignment_0(lastRuleCallOrigin, this, 3, inst);
            default:
               return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index - 4, inst);
         }
      }

      @Override
      public IEObjectConsumer tryConsume() {
         if (getEObject().eClass() != grammarAccess.getOseeDslRule().getType().getClassifier()) {
            return null;
         }
         return eObjectConsumer;
      }

   }

   // imports+=Import*
   protected class OseeDsl_ImportsAssignment_0 extends AssignmentToken {

      public OseeDsl_ImportsAssignment_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Assignment getGrammarElement() {
         return grammarAccess.getOseeDslAccess().getImportsAssignment_0();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new Import_Group(this, this, 0, inst);
            default:
               return null;
         }
      }

      @Override
      public IEObjectConsumer tryConsume() {
         if ((value = eObjectConsumer.getConsumable("imports", false)) == null) {
            return null;
         }
         IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("imports");
         if (value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
            IEObjectConsumer param = createEObjectConsumer((EObject) value);
            if (param.isInstanceOf(grammarAccess.getImportRule().getType().getClassifier())) {
               type = AssignmentType.PARSER_RULE_CALL;
               element = grammarAccess.getOseeDslAccess().getImportsImportParserRuleCall_0_0();
               consumed = obj;
               return param;
            }
         }
         return null;
      }

      @Override
      public AbstractToken createFollowerAfterReturn(AbstractToken next, int actIndex, int index, IEObjectConsumer inst) {
         if (value == inst.getEObject() && !inst.isConsumed()) {
            return null;
         }
         switch (index) {
            case 0:
               return new OseeDsl_ImportsAssignment_0(lastRuleCallOrigin, next, actIndex, consumed);
            default:
               return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex, index - 1, consumed);
         }
      }
   }

   // (artifactTypes+=XArtifactType | relationTypes+=XRelationType | attributeTypes+=XAttributeType | enumTypes+=XOseeEnumType
   // | enumOverrides+=XOseeEnumOverride)*
   protected class OseeDsl_Alternatives_1 extends AlternativesToken {

      public OseeDsl_Alternatives_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Alternatives getGrammarElement() {
         return grammarAccess.getOseeDslAccess().getAlternatives_1();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new OseeDsl_ArtifactTypesAssignment_1_0(lastRuleCallOrigin, this, 0, inst);
            case 1:
               return new OseeDsl_RelationTypesAssignment_1_1(lastRuleCallOrigin, this, 1, inst);
            case 2:
               return new OseeDsl_AttributeTypesAssignment_1_2(lastRuleCallOrigin, this, 2, inst);
            case 3:
               return new OseeDsl_EnumTypesAssignment_1_3(lastRuleCallOrigin, this, 3, inst);
            case 4:
               return new OseeDsl_EnumOverridesAssignment_1_4(lastRuleCallOrigin, this, 4, inst);
            default:
               return null;
         }
      }

   }

   // artifactTypes+=XArtifactType
   protected class OseeDsl_ArtifactTypesAssignment_1_0 extends AssignmentToken {

      public OseeDsl_ArtifactTypesAssignment_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Assignment getGrammarElement() {
         return grammarAccess.getOseeDslAccess().getArtifactTypesAssignment_1_0();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new XArtifactType_Group(this, this, 0, inst);
            default:
               return null;
         }
      }

      @Override
      public IEObjectConsumer tryConsume() {
         if ((value = eObjectConsumer.getConsumable("artifactTypes", true)) == null) {
            return null;
         }
         IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("artifactTypes");
         if (value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
            IEObjectConsumer param = createEObjectConsumer((EObject) value);
            if (param.isInstanceOf(grammarAccess.getXArtifactTypeRule().getType().getClassifier())) {
               type = AssignmentType.PARSER_RULE_CALL;
               element = grammarAccess.getOseeDslAccess().getArtifactTypesXArtifactTypeParserRuleCall_1_0_0();
               consumed = obj;
               return param;
            }
         }
         return null;
      }

      @Override
      public AbstractToken createFollowerAfterReturn(AbstractToken next, int actIndex, int index, IEObjectConsumer inst) {
         if (value == inst.getEObject() && !inst.isConsumed()) {
            return null;
         }
         switch (index) {
            case 0:
               return new OseeDsl_Alternatives_1(lastRuleCallOrigin, next, actIndex, consumed);
            case 1:
               return new OseeDsl_ImportsAssignment_0(lastRuleCallOrigin, next, actIndex, consumed);
            default:
               return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex, index - 2, consumed);
         }
      }
   }

   // relationTypes+=XRelationType
   protected class OseeDsl_RelationTypesAssignment_1_1 extends AssignmentToken {

      public OseeDsl_RelationTypesAssignment_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Assignment getGrammarElement() {
         return grammarAccess.getOseeDslAccess().getRelationTypesAssignment_1_1();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new XRelationType_Group(this, this, 0, inst);
            default:
               return null;
         }
      }

      @Override
      public IEObjectConsumer tryConsume() {
         if ((value = eObjectConsumer.getConsumable("relationTypes", true)) == null) {
            return null;
         }
         IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("relationTypes");
         if (value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
            IEObjectConsumer param = createEObjectConsumer((EObject) value);
            if (param.isInstanceOf(grammarAccess.getXRelationTypeRule().getType().getClassifier())) {
               type = AssignmentType.PARSER_RULE_CALL;
               element = grammarAccess.getOseeDslAccess().getRelationTypesXRelationTypeParserRuleCall_1_1_0();
               consumed = obj;
               return param;
            }
         }
         return null;
      }

      @Override
      public AbstractToken createFollowerAfterReturn(AbstractToken next, int actIndex, int index, IEObjectConsumer inst) {
         if (value == inst.getEObject() && !inst.isConsumed()) {
            return null;
         }
         switch (index) {
            case 0:
               return new OseeDsl_Alternatives_1(lastRuleCallOrigin, next, actIndex, consumed);
            case 1:
               return new OseeDsl_ImportsAssignment_0(lastRuleCallOrigin, next, actIndex, consumed);
            default:
               return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex, index - 2, consumed);
         }
      }
   }

   // attributeTypes+=XAttributeType
   protected class OseeDsl_AttributeTypesAssignment_1_2 extends AssignmentToken {

      public OseeDsl_AttributeTypesAssignment_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Assignment getGrammarElement() {
         return grammarAccess.getOseeDslAccess().getAttributeTypesAssignment_1_2();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new XAttributeType_Group(this, this, 0, inst);
            default:
               return null;
         }
      }

      @Override
      public IEObjectConsumer tryConsume() {
         if ((value = eObjectConsumer.getConsumable("attributeTypes", true)) == null) {
            return null;
         }
         IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("attributeTypes");
         if (value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
            IEObjectConsumer param = createEObjectConsumer((EObject) value);
            if (param.isInstanceOf(grammarAccess.getXAttributeTypeRule().getType().getClassifier())) {
               type = AssignmentType.PARSER_RULE_CALL;
               element = grammarAccess.getOseeDslAccess().getAttributeTypesXAttributeTypeParserRuleCall_1_2_0();
               consumed = obj;
               return param;
            }
         }
         return null;
      }

      @Override
      public AbstractToken createFollowerAfterReturn(AbstractToken next, int actIndex, int index, IEObjectConsumer inst) {
         if (value == inst.getEObject() && !inst.isConsumed()) {
            return null;
         }
         switch (index) {
            case 0:
               return new OseeDsl_Alternatives_1(lastRuleCallOrigin, next, actIndex, consumed);
            case 1:
               return new OseeDsl_ImportsAssignment_0(lastRuleCallOrigin, next, actIndex, consumed);
            default:
               return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex, index - 2, consumed);
         }
      }
   }

   // enumTypes+=XOseeEnumType
   protected class OseeDsl_EnumTypesAssignment_1_3 extends AssignmentToken {

      public OseeDsl_EnumTypesAssignment_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Assignment getGrammarElement() {
         return grammarAccess.getOseeDslAccess().getEnumTypesAssignment_1_3();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new XOseeEnumType_Group(this, this, 0, inst);
            default:
               return null;
         }
      }

      @Override
      public IEObjectConsumer tryConsume() {
         if ((value = eObjectConsumer.getConsumable("enumTypes", true)) == null) {
            return null;
         }
         IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("enumTypes");
         if (value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
            IEObjectConsumer param = createEObjectConsumer((EObject) value);
            if (param.isInstanceOf(grammarAccess.getXOseeEnumTypeRule().getType().getClassifier())) {
               type = AssignmentType.PARSER_RULE_CALL;
               element = grammarAccess.getOseeDslAccess().getEnumTypesXOseeEnumTypeParserRuleCall_1_3_0();
               consumed = obj;
               return param;
            }
         }
         return null;
      }

      @Override
      public AbstractToken createFollowerAfterReturn(AbstractToken next, int actIndex, int index, IEObjectConsumer inst) {
         if (value == inst.getEObject() && !inst.isConsumed()) {
            return null;
         }
         switch (index) {
            case 0:
               return new OseeDsl_Alternatives_1(lastRuleCallOrigin, next, actIndex, consumed);
            case 1:
               return new OseeDsl_ImportsAssignment_0(lastRuleCallOrigin, next, actIndex, consumed);
            default:
               return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex, index - 2, consumed);
         }
      }
   }

   // enumOverrides+=XOseeEnumOverride
   protected class OseeDsl_EnumOverridesAssignment_1_4 extends AssignmentToken {

      public OseeDsl_EnumOverridesAssignment_1_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Assignment getGrammarElement() {
         return grammarAccess.getOseeDslAccess().getEnumOverridesAssignment_1_4();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new XOseeEnumOverride_Group(this, this, 0, inst);
            default:
               return null;
         }
      }

      @Override
      public IEObjectConsumer tryConsume() {
         if ((value = eObjectConsumer.getConsumable("enumOverrides", true)) == null) {
            return null;
         }
         IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("enumOverrides");
         if (value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
            IEObjectConsumer param = createEObjectConsumer((EObject) value);
            if (param.isInstanceOf(grammarAccess.getXOseeEnumOverrideRule().getType().getClassifier())) {
               type = AssignmentType.PARSER_RULE_CALL;
               element = grammarAccess.getOseeDslAccess().getEnumOverridesXOseeEnumOverrideParserRuleCall_1_4_0();
               consumed = obj;
               return param;
            }
         }
         return null;
      }

      @Override
      public AbstractToken createFollowerAfterReturn(AbstractToken next, int actIndex, int index, IEObjectConsumer inst) {
         if (value == inst.getEObject() && !inst.isConsumed()) {
            return null;
         }
         switch (index) {
            case 0:
               return new OseeDsl_Alternatives_1(lastRuleCallOrigin, next, actIndex, consumed);
            case 1:
               return new OseeDsl_ImportsAssignment_0(lastRuleCallOrigin, next, actIndex, consumed);
            default:
               return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex, index - 2, consumed);
         }
      }
   }

   // (branchRefs+=XBranchRef | artifactRefs+=XArtifactRef)*
   protected class OseeDsl_Alternatives_2 extends AlternativesToken {

      public OseeDsl_Alternatives_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Alternatives getGrammarElement() {
         return grammarAccess.getOseeDslAccess().getAlternatives_2();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new OseeDsl_BranchRefsAssignment_2_0(lastRuleCallOrigin, this, 0, inst);
            case 1:
               return new OseeDsl_ArtifactRefsAssignment_2_1(lastRuleCallOrigin, this, 1, inst);
            default:
               return null;
         }
      }

   }

   // branchRefs+=XBranchRef
   protected class OseeDsl_BranchRefsAssignment_2_0 extends AssignmentToken {

      public OseeDsl_BranchRefsAssignment_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Assignment getGrammarElement() {
         return grammarAccess.getOseeDslAccess().getBranchRefsAssignment_2_0();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new XBranchRef_Group(this, this, 0, inst);
            default:
               return null;
         }
      }

      @Override
      public IEObjectConsumer tryConsume() {
         if ((value = eObjectConsumer.getConsumable("branchRefs", true)) == null) {
            return null;
         }
         IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("branchRefs");
         if (value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
            IEObjectConsumer param = createEObjectConsumer((EObject) value);
            if (param.isInstanceOf(grammarAccess.getXBranchRefRule().getType().getClassifier())) {
               type = AssignmentType.PARSER_RULE_CALL;
               element = grammarAccess.getOseeDslAccess().getBranchRefsXBranchRefParserRuleCall_2_0_0();
               consumed = obj;
               return param;
            }
         }
         return null;
      }

      @Override
      public AbstractToken createFollowerAfterReturn(AbstractToken next, int actIndex, int index, IEObjectConsumer inst) {
         if (value == inst.getEObject() && !inst.isConsumed()) {
            return null;
         }
         switch (index) {
            case 0:
               return new OseeDsl_Alternatives_2(lastRuleCallOrigin, next, actIndex, consumed);
            case 1:
               return new OseeDsl_Alternatives_1(lastRuleCallOrigin, next, actIndex, consumed);
            case 2:
               return new OseeDsl_ImportsAssignment_0(lastRuleCallOrigin, next, actIndex, consumed);
            default:
               return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex, index - 3, consumed);
         }
      }
   }

   // artifactRefs+=XArtifactRef
   protected class OseeDsl_ArtifactRefsAssignment_2_1 extends AssignmentToken {

      public OseeDsl_ArtifactRefsAssignment_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Assignment getGrammarElement() {
         return grammarAccess.getOseeDslAccess().getArtifactRefsAssignment_2_1();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new XArtifactRef_Group(this, this, 0, inst);
            default:
               return null;
         }
      }

      @Override
      public IEObjectConsumer tryConsume() {
         if ((value = eObjectConsumer.getConsumable("artifactRefs", true)) == null) {
            return null;
         }
         IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("artifactRefs");
         if (value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
            IEObjectConsumer param = createEObjectConsumer((EObject) value);
            if (param.isInstanceOf(grammarAccess.getXArtifactRefRule().getType().getClassifier())) {
               type = AssignmentType.PARSER_RULE_CALL;
               element = grammarAccess.getOseeDslAccess().getArtifactRefsXArtifactRefParserRuleCall_2_1_0();
               consumed = obj;
               return param;
            }
         }
         return null;
      }

      @Override
      public AbstractToken createFollowerAfterReturn(AbstractToken next, int actIndex, int index, IEObjectConsumer inst) {
         if (value == inst.getEObject() && !inst.isConsumed()) {
            return null;
         }
         switch (index) {
            case 0:
               return new OseeDsl_Alternatives_2(lastRuleCallOrigin, next, actIndex, consumed);
            case 1:
               return new OseeDsl_Alternatives_1(lastRuleCallOrigin, next, actIndex, consumed);
            case 2:
               return new OseeDsl_ImportsAssignment_0(lastRuleCallOrigin, next, actIndex, consumed);
            default:
               return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex, index - 3, consumed);
         }
      }
   }

   // accessDeclarations+=AccessContext*
   protected class OseeDsl_AccessDeclarationsAssignment_3 extends AssignmentToken {

      public OseeDsl_AccessDeclarationsAssignment_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Assignment getGrammarElement() {
         return grammarAccess.getOseeDslAccess().getAccessDeclarationsAssignment_3();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new AccessContext_Group(this, this, 0, inst);
            default:
               return null;
         }
      }

      @Override
      public IEObjectConsumer tryConsume() {
         if ((value = eObjectConsumer.getConsumable("accessDeclarations", false)) == null) {
            return null;
         }
         IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("accessDeclarations");
         if (value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
            IEObjectConsumer param = createEObjectConsumer((EObject) value);
            if (param.isInstanceOf(grammarAccess.getAccessContextRule().getType().getClassifier())) {
               type = AssignmentType.PARSER_RULE_CALL;
               element = grammarAccess.getOseeDslAccess().getAccessDeclarationsAccessContextParserRuleCall_3_0();
               consumed = obj;
               return param;
            }
         }
         return null;
      }

      @Override
      public AbstractToken createFollowerAfterReturn(AbstractToken next, int actIndex, int index, IEObjectConsumer inst) {
         if (value == inst.getEObject() && !inst.isConsumed()) {
            return null;
         }
         switch (index) {
            case 0:
               return new OseeDsl_AccessDeclarationsAssignment_3(lastRuleCallOrigin, next, actIndex, consumed);
            case 1:
               return new OseeDsl_Alternatives_2(lastRuleCallOrigin, next, actIndex, consumed);
            case 2:
               return new OseeDsl_Alternatives_1(lastRuleCallOrigin, next, actIndex, consumed);
            case 3:
               return new OseeDsl_ImportsAssignment_0(lastRuleCallOrigin, next, actIndex, consumed);
            default:
               return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex, index - 4, consumed);
         }
      }
   }

   /************ end Rule OseeDsl ****************/

   /************
    * begin Rule Import **************** Import: "import" importURI=STRING;
    **/

   // "import" importURI=STRING
   protected class Import_Group extends GroupToken {

      public Import_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Group getGrammarElement() {
         return grammarAccess.getImportAccess().getGroup();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new Import_ImportURIAssignment_1(lastRuleCallOrigin, this, 0, inst);
            default:
               return null;
         }
      }

      @Override
      public IEObjectConsumer tryConsume() {
         if (getEObject().eClass() != grammarAccess.getImportRule().getType().getClassifier()) {
            return null;
         }
         return eObjectConsumer;
      }

   }

   // "import"
   protected class Import_ImportKeyword_0 extends KeywordToken {

      public Import_ImportKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Keyword getGrammarElement() {
         return grammarAccess.getImportAccess().getImportKeyword_0();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            default:
               return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
         }
      }

   }

   // importURI=STRING
   protected class Import_ImportURIAssignment_1 extends AssignmentToken {

      public Import_ImportURIAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Assignment getGrammarElement() {
         return grammarAccess.getImportAccess().getImportURIAssignment_1();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new Import_ImportKeyword_0(lastRuleCallOrigin, this, 0, inst);
            default:
               return null;
         }
      }

      @Override
      public IEObjectConsumer tryConsume() {
         if ((value = eObjectConsumer.getConsumable("importURI", true)) == null) {
            return null;
         }
         IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("importURI");
         if (valueSerializer.isValid(obj.getEObject(),
            grammarAccess.getImportAccess().getImportURISTRINGTerminalRuleCall_1_0(), value, null)) {
            type = AssignmentType.TERMINAL_RULE_CALL;
            element = grammarAccess.getImportAccess().getImportURISTRINGTerminalRuleCall_1_0();
            return obj;
         }
         return null;
      }

   }

   /************ end Rule Import ****************/

   /************
    * begin Rule OseeElement **************** /////////////////////////////////////// // OSEE TYPE MODEL //
    * /////////////////////////////////////// OseeElement: XOseeEnumOverride | OseeType;
    **/

   // XOseeEnumOverride | OseeType
   protected class OseeElement_Alternatives extends AlternativesToken {

      public OseeElement_Alternatives(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Alternatives getGrammarElement() {
         return grammarAccess.getOseeElementAccess().getAlternatives();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new OseeElement_XOseeEnumOverrideParserRuleCall_0(lastRuleCallOrigin, this, 0, inst);
            case 1:
               return new OseeElement_OseeTypeParserRuleCall_1(lastRuleCallOrigin, this, 1, inst);
            default:
               return null;
         }
      }

      @Override
      public IEObjectConsumer tryConsume() {
         if (getEObject().eClass() != grammarAccess.getXArtifactTypeRule().getType().getClassifier() && getEObject().eClass() != grammarAccess.getXAttributeTypeRule().getType().getClassifier() && getEObject().eClass() != grammarAccess.getXOseeEnumOverrideRule().getType().getClassifier() && getEObject().eClass() != grammarAccess.getXOseeEnumTypeRule().getType().getClassifier() && getEObject().eClass() != grammarAccess.getXRelationTypeRule().getType().getClassifier()) {
            return null;
         }
         return eObjectConsumer;
      }

   }

   // XOseeEnumOverride
   protected class OseeElement_XOseeEnumOverrideParserRuleCall_0 extends RuleCallToken {

      public OseeElement_XOseeEnumOverrideParserRuleCall_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public RuleCall getGrammarElement() {
         return grammarAccess.getOseeElementAccess().getXOseeEnumOverrideParserRuleCall_0();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new XOseeEnumOverride_Group(this, this, 0, inst);
            default:
               return null;
         }
      }

      @Override
      public IEObjectConsumer tryConsume() {
         if (getEObject().eClass() != grammarAccess.getXOseeEnumOverrideRule().getType().getClassifier()) {
            return null;
         }
         if (checkForRecursion(XOseeEnumOverride_Group.class, eObjectConsumer)) {
            return null;
         }
         return eObjectConsumer;
      }

      @Override
      public AbstractToken createFollowerAfterReturn(AbstractToken next, int actIndex, int index, IEObjectConsumer inst) {
         switch (index) {
            default:
               return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex, index, inst);
         }
      }
   }

   // OseeType
   protected class OseeElement_OseeTypeParserRuleCall_1 extends RuleCallToken {

      public OseeElement_OseeTypeParserRuleCall_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public RuleCall getGrammarElement() {
         return grammarAccess.getOseeElementAccess().getOseeTypeParserRuleCall_1();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new OseeType_Alternatives(this, this, 0, inst);
            default:
               return null;
         }
      }

      @Override
      public IEObjectConsumer tryConsume() {
         if (getEObject().eClass() != grammarAccess.getXArtifactTypeRule().getType().getClassifier() && getEObject().eClass() != grammarAccess.getXAttributeTypeRule().getType().getClassifier() && getEObject().eClass() != grammarAccess.getXOseeEnumTypeRule().getType().getClassifier() && getEObject().eClass() != grammarAccess.getXRelationTypeRule().getType().getClassifier()) {
            return null;
         }
         if (checkForRecursion(OseeType_Alternatives.class, eObjectConsumer)) {
            return null;
         }
         return eObjectConsumer;
      }

      @Override
      public AbstractToken createFollowerAfterReturn(AbstractToken next, int actIndex, int index, IEObjectConsumer inst) {
         switch (index) {
            default:
               return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex, index, inst);
         }
      }
   }

   /************ end Rule OseeElement ****************/

   /************
    * begin Rule OseeType **************** OseeType: XArtifactType | XRelationType | XAttributeType | XOseeEnumType;
    **/

   // XArtifactType | XRelationType | XAttributeType | XOseeEnumType
   protected class OseeType_Alternatives extends AlternativesToken {

      public OseeType_Alternatives(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Alternatives getGrammarElement() {
         return grammarAccess.getOseeTypeAccess().getAlternatives();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new OseeType_XArtifactTypeParserRuleCall_0(lastRuleCallOrigin, this, 0, inst);
            case 1:
               return new OseeType_XRelationTypeParserRuleCall_1(lastRuleCallOrigin, this, 1, inst);
            case 2:
               return new OseeType_XAttributeTypeParserRuleCall_2(lastRuleCallOrigin, this, 2, inst);
            case 3:
               return new OseeType_XOseeEnumTypeParserRuleCall_3(lastRuleCallOrigin, this, 3, inst);
            default:
               return null;
         }
      }

      @Override
      public IEObjectConsumer tryConsume() {
         if (getEObject().eClass() != grammarAccess.getXArtifactTypeRule().getType().getClassifier() && getEObject().eClass() != grammarAccess.getXAttributeTypeRule().getType().getClassifier() && getEObject().eClass() != grammarAccess.getXOseeEnumTypeRule().getType().getClassifier() && getEObject().eClass() != grammarAccess.getXRelationTypeRule().getType().getClassifier()) {
            return null;
         }
         return eObjectConsumer;
      }

   }

   // XArtifactType
   protected class OseeType_XArtifactTypeParserRuleCall_0 extends RuleCallToken {

      public OseeType_XArtifactTypeParserRuleCall_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public RuleCall getGrammarElement() {
         return grammarAccess.getOseeTypeAccess().getXArtifactTypeParserRuleCall_0();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new XArtifactType_Group(this, this, 0, inst);
            default:
               return null;
         }
      }

      @Override
      public IEObjectConsumer tryConsume() {
         if (getEObject().eClass() != grammarAccess.getXArtifactTypeRule().getType().getClassifier()) {
            return null;
         }
         if (checkForRecursion(XArtifactType_Group.class, eObjectConsumer)) {
            return null;
         }
         return eObjectConsumer;
      }

      @Override
      public AbstractToken createFollowerAfterReturn(AbstractToken next, int actIndex, int index, IEObjectConsumer inst) {
         switch (index) {
            default:
               return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex, index, inst);
         }
      }
   }

   // XRelationType
   protected class OseeType_XRelationTypeParserRuleCall_1 extends RuleCallToken {

      public OseeType_XRelationTypeParserRuleCall_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public RuleCall getGrammarElement() {
         return grammarAccess.getOseeTypeAccess().getXRelationTypeParserRuleCall_1();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new XRelationType_Group(this, this, 0, inst);
            default:
               return null;
         }
      }

      @Override
      public IEObjectConsumer tryConsume() {
         if (getEObject().eClass() != grammarAccess.getXRelationTypeRule().getType().getClassifier()) {
            return null;
         }
         if (checkForRecursion(XRelationType_Group.class, eObjectConsumer)) {
            return null;
         }
         return eObjectConsumer;
      }

      @Override
      public AbstractToken createFollowerAfterReturn(AbstractToken next, int actIndex, int index, IEObjectConsumer inst) {
         switch (index) {
            default:
               return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex, index, inst);
         }
      }
   }

   // XAttributeType
   protected class OseeType_XAttributeTypeParserRuleCall_2 extends RuleCallToken {

      public OseeType_XAttributeTypeParserRuleCall_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public RuleCall getGrammarElement() {
         return grammarAccess.getOseeTypeAccess().getXAttributeTypeParserRuleCall_2();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new XAttributeType_Group(this, this, 0, inst);
            default:
               return null;
         }
      }

      @Override
      public IEObjectConsumer tryConsume() {
         if (getEObject().eClass() != grammarAccess.getXAttributeTypeRule().getType().getClassifier()) {
            return null;
         }
         if (checkForRecursion(XAttributeType_Group.class, eObjectConsumer)) {
            return null;
         }
         return eObjectConsumer;
      }

      @Override
      public AbstractToken createFollowerAfterReturn(AbstractToken next, int actIndex, int index, IEObjectConsumer inst) {
         switch (index) {
            default:
               return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex, index, inst);
         }
      }
   }

   // XOseeEnumType
   protected class OseeType_XOseeEnumTypeParserRuleCall_3 extends RuleCallToken {

      public OseeType_XOseeEnumTypeParserRuleCall_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public RuleCall getGrammarElement() {
         return grammarAccess.getOseeTypeAccess().getXOseeEnumTypeParserRuleCall_3();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new XOseeEnumType_Group(this, this, 0, inst);
            default:
               return null;
         }
      }

      @Override
      public IEObjectConsumer tryConsume() {
         if (getEObject().eClass() != grammarAccess.getXOseeEnumTypeRule().getType().getClassifier()) {
            return null;
         }
         if (checkForRecursion(XOseeEnumType_Group.class, eObjectConsumer)) {
            return null;
         }
         return eObjectConsumer;
      }

      @Override
      public AbstractToken createFollowerAfterReturn(AbstractToken next, int actIndex, int index, IEObjectConsumer inst) {
         switch (index) {
            default:
               return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex, index, inst);
         }
      }
   }

   /************ end Rule OseeType ****************/

   /************
    * begin Rule XArtifactType **************** XArtifactType: abstract?="abstract"? "artifactType"
    * name=ARTIFACT_TYPE_REFERENCE ("extends" superArtifactTypes+=[XArtifactType|ARTIFACT_TYPE_REFERENCE] (","
    * superArtifactTypes+=[XArtifactType|ARTIFACT_TYPE_REFERENCE])*)? "{" "guid" typeGuid=STRING
    * validAttributeTypes+=XAttributeTypeRef* "}";
    **/

   // abstract?="abstract"? "artifactType" name=ARTIFACT_TYPE_REFERENCE ("extends"
   // superArtifactTypes+=[XArtifactType|ARTIFACT_TYPE_REFERENCE] (","
   // superArtifactTypes+=[XArtifactType|ARTIFACT_TYPE_REFERENCE])*)? "{" "guid" typeGuid=STRING
   // validAttributeTypes+=XAttributeTypeRef* "}"
   protected class XArtifactType_Group extends GroupToken {

      public XArtifactType_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Group getGrammarElement() {
         return grammarAccess.getXArtifactTypeAccess().getGroup();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new XArtifactType_RightCurlyBracketKeyword_8(lastRuleCallOrigin, this, 0, inst);
            default:
               return null;
         }
      }

      @Override
      public IEObjectConsumer tryConsume() {
         if (getEObject().eClass() != grammarAccess.getXArtifactTypeRule().getType().getClassifier()) {
            return null;
         }
         return eObjectConsumer;
      }

   }

   // abstract?="abstract"?
   protected class XArtifactType_AbstractAssignment_0 extends AssignmentToken {

      public XArtifactType_AbstractAssignment_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Assignment getGrammarElement() {
         return grammarAccess.getXArtifactTypeAccess().getAbstractAssignment_0();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            default:
               return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
         }
      }

      @Override
      public IEObjectConsumer tryConsume() {
         if ((value = eObjectConsumer.getConsumable("abstract", false)) == null) {
            return null;
         }
         IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("abstract");
         if (Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
            type = AssignmentType.KEYWORD;
            element = grammarAccess.getXArtifactTypeAccess().getAbstractAbstractKeyword_0_0();
            return obj;
         }
         return null;
      }

   }

   // "artifactType"
   protected class XArtifactType_ArtifactTypeKeyword_1 extends KeywordToken {

      public XArtifactType_ArtifactTypeKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Keyword getGrammarElement() {
         return grammarAccess.getXArtifactTypeAccess().getArtifactTypeKeyword_1();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new XArtifactType_AbstractAssignment_0(lastRuleCallOrigin, this, 0, inst);
            default:
               return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index - 1, inst);
         }
      }

   }

   // name=ARTIFACT_TYPE_REFERENCE
   protected class XArtifactType_NameAssignment_2 extends AssignmentToken {

      public XArtifactType_NameAssignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Assignment getGrammarElement() {
         return grammarAccess.getXArtifactTypeAccess().getNameAssignment_2();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new XArtifactType_ArtifactTypeKeyword_1(lastRuleCallOrigin, this, 0, inst);
            default:
               return null;
         }
      }

      @Override
      public IEObjectConsumer tryConsume() {
         if ((value = eObjectConsumer.getConsumable("name", true)) == null) {
            return null;
         }
         IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
         if (valueSerializer.isValid(obj.getEObject(),
            grammarAccess.getXArtifactTypeAccess().getNameARTIFACT_TYPE_REFERENCEParserRuleCall_2_0(), value, null)) {
            type = AssignmentType.DATATYPE_RULE_CALL;
            element = grammarAccess.getXArtifactTypeAccess().getNameARTIFACT_TYPE_REFERENCEParserRuleCall_2_0();
            return obj;
         }
         return null;
      }

   }

   // ("extends" superArtifactTypes+=[XArtifactType|ARTIFACT_TYPE_REFERENCE] (","
   // superArtifactTypes+=[XArtifactType|ARTIFACT_TYPE_REFERENCE])*)?
   protected class XArtifactType_Group_3 extends GroupToken {

      public XArtifactType_Group_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Group getGrammarElement() {
         return grammarAccess.getXArtifactTypeAccess().getGroup_3();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new XArtifactType_Group_3_2(lastRuleCallOrigin, this, 0, inst);
            case 1:
               return new XArtifactType_SuperArtifactTypesAssignment_3_1(lastRuleCallOrigin, this, 1, inst);
            default:
               return null;
         }
      }

   }

   // "extends"
   protected class XArtifactType_ExtendsKeyword_3_0 extends KeywordToken {

      public XArtifactType_ExtendsKeyword_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Keyword getGrammarElement() {
         return grammarAccess.getXArtifactTypeAccess().getExtendsKeyword_3_0();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new XArtifactType_NameAssignment_2(lastRuleCallOrigin, this, 0, inst);
            default:
               return null;
         }
      }

   }

   // superArtifactTypes+=[XArtifactType|ARTIFACT_TYPE_REFERENCE]
   protected class XArtifactType_SuperArtifactTypesAssignment_3_1 extends AssignmentToken {

      public XArtifactType_SuperArtifactTypesAssignment_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Assignment getGrammarElement() {
         return grammarAccess.getXArtifactTypeAccess().getSuperArtifactTypesAssignment_3_1();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new XArtifactType_ExtendsKeyword_3_0(lastRuleCallOrigin, this, 0, inst);
            default:
               return null;
         }
      }

      @Override
      public IEObjectConsumer tryConsume() {
         if ((value = eObjectConsumer.getConsumable("superArtifactTypes", true)) == null) {
            return null;
         }
         IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("superArtifactTypes");
         if (value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
            IEObjectConsumer param = createEObjectConsumer((EObject) value);
            if (param.isInstanceOf(grammarAccess.getXArtifactTypeAccess().getSuperArtifactTypesXArtifactTypeCrossReference_3_1_0().getType().getClassifier())) {
               type = AssignmentType.CROSS_REFERENCE;
               element =
                  grammarAccess.getXArtifactTypeAccess().getSuperArtifactTypesXArtifactTypeCrossReference_3_1_0();
               return obj;
            }
         }
         return null;
      }

   }

   // ("," superArtifactTypes+=[XArtifactType|ARTIFACT_TYPE_REFERENCE])*
   protected class XArtifactType_Group_3_2 extends GroupToken {

      public XArtifactType_Group_3_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Group getGrammarElement() {
         return grammarAccess.getXArtifactTypeAccess().getGroup_3_2();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new XArtifactType_SuperArtifactTypesAssignment_3_2_1(lastRuleCallOrigin, this, 0, inst);
            default:
               return null;
         }
      }

   }

   // ","
   protected class XArtifactType_CommaKeyword_3_2_0 extends KeywordToken {

      public XArtifactType_CommaKeyword_3_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Keyword getGrammarElement() {
         return grammarAccess.getXArtifactTypeAccess().getCommaKeyword_3_2_0();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new XArtifactType_Group_3_2(lastRuleCallOrigin, this, 0, inst);
            case 1:
               return new XArtifactType_SuperArtifactTypesAssignment_3_1(lastRuleCallOrigin, this, 1, inst);
            default:
               return null;
         }
      }

   }

   // superArtifactTypes+=[XArtifactType|ARTIFACT_TYPE_REFERENCE]
   protected class XArtifactType_SuperArtifactTypesAssignment_3_2_1 extends AssignmentToken {

      public XArtifactType_SuperArtifactTypesAssignment_3_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Assignment getGrammarElement() {
         return grammarAccess.getXArtifactTypeAccess().getSuperArtifactTypesAssignment_3_2_1();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new XArtifactType_CommaKeyword_3_2_0(lastRuleCallOrigin, this, 0, inst);
            default:
               return null;
         }
      }

      @Override
      public IEObjectConsumer tryConsume() {
         if ((value = eObjectConsumer.getConsumable("superArtifactTypes", false)) == null) {
            return null;
         }
         IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("superArtifactTypes");
         if (value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
            IEObjectConsumer param = createEObjectConsumer((EObject) value);
            if (param.isInstanceOf(grammarAccess.getXArtifactTypeAccess().getSuperArtifactTypesXArtifactTypeCrossReference_3_2_1_0().getType().getClassifier())) {
               type = AssignmentType.CROSS_REFERENCE;
               element =
                  grammarAccess.getXArtifactTypeAccess().getSuperArtifactTypesXArtifactTypeCrossReference_3_2_1_0();
               return obj;
            }
         }
         return null;
      }

   }

   // "{"
   protected class XArtifactType_LeftCurlyBracketKeyword_4 extends KeywordToken {

      public XArtifactType_LeftCurlyBracketKeyword_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Keyword getGrammarElement() {
         return grammarAccess.getXArtifactTypeAccess().getLeftCurlyBracketKeyword_4();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new XArtifactType_Group_3(lastRuleCallOrigin, this, 0, inst);
            case 1:
               return new XArtifactType_NameAssignment_2(lastRuleCallOrigin, this, 1, inst);
            default:
               return null;
         }
      }

   }

   // "guid"
   protected class XArtifactType_GuidKeyword_5 extends KeywordToken {

      public XArtifactType_GuidKeyword_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Keyword getGrammarElement() {
         return grammarAccess.getXArtifactTypeAccess().getGuidKeyword_5();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new XArtifactType_LeftCurlyBracketKeyword_4(lastRuleCallOrigin, this, 0, inst);
            default:
               return null;
         }
      }

   }

   // typeGuid=STRING
   protected class XArtifactType_TypeGuidAssignment_6 extends AssignmentToken {

      public XArtifactType_TypeGuidAssignment_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Assignment getGrammarElement() {
         return grammarAccess.getXArtifactTypeAccess().getTypeGuidAssignment_6();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new XArtifactType_GuidKeyword_5(lastRuleCallOrigin, this, 0, inst);
            default:
               return null;
         }
      }

      @Override
      public IEObjectConsumer tryConsume() {
         if ((value = eObjectConsumer.getConsumable("typeGuid", true)) == null) {
            return null;
         }
         IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("typeGuid");
         if (valueSerializer.isValid(obj.getEObject(),
            grammarAccess.getXArtifactTypeAccess().getTypeGuidSTRINGTerminalRuleCall_6_0(), value, null)) {
            type = AssignmentType.TERMINAL_RULE_CALL;
            element = grammarAccess.getXArtifactTypeAccess().getTypeGuidSTRINGTerminalRuleCall_6_0();
            return obj;
         }
         return null;
      }

   }

   // validAttributeTypes+=XAttributeTypeRef*
   protected class XArtifactType_ValidAttributeTypesAssignment_7 extends AssignmentToken {

      public XArtifactType_ValidAttributeTypesAssignment_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Assignment getGrammarElement() {
         return grammarAccess.getXArtifactTypeAccess().getValidAttributeTypesAssignment_7();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new XAttributeTypeRef_Group(this, this, 0, inst);
            default:
               return null;
         }
      }

      @Override
      public IEObjectConsumer tryConsume() {
         if ((value = eObjectConsumer.getConsumable("validAttributeTypes", false)) == null) {
            return null;
         }
         IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("validAttributeTypes");
         if (value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
            IEObjectConsumer param = createEObjectConsumer((EObject) value);
            if (param.isInstanceOf(grammarAccess.getXAttributeTypeRefRule().getType().getClassifier())) {
               type = AssignmentType.PARSER_RULE_CALL;
               element =
                  grammarAccess.getXArtifactTypeAccess().getValidAttributeTypesXAttributeTypeRefParserRuleCall_7_0();
               consumed = obj;
               return param;
            }
         }
         return null;
      }

      @Override
      public AbstractToken createFollowerAfterReturn(AbstractToken next, int actIndex, int index, IEObjectConsumer inst) {
         if (value == inst.getEObject() && !inst.isConsumed()) {
            return null;
         }
         switch (index) {
            case 0:
               return new XArtifactType_ValidAttributeTypesAssignment_7(lastRuleCallOrigin, next, actIndex, consumed);
            case 1:
               return new XArtifactType_TypeGuidAssignment_6(lastRuleCallOrigin, next, actIndex, consumed);
            default:
               return null;
         }
      }
   }

   // "}"
   protected class XArtifactType_RightCurlyBracketKeyword_8 extends KeywordToken {

      public XArtifactType_RightCurlyBracketKeyword_8(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Keyword getGrammarElement() {
         return grammarAccess.getXArtifactTypeAccess().getRightCurlyBracketKeyword_8();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new XArtifactType_ValidAttributeTypesAssignment_7(lastRuleCallOrigin, this, 0, inst);
            case 1:
               return new XArtifactType_TypeGuidAssignment_6(lastRuleCallOrigin, this, 1, inst);
            default:
               return null;
         }
      }

   }

   /************ end Rule XArtifactType ****************/

   /************
    * begin Rule XAttributeTypeRef **************** XAttributeTypeRef: "attribute"
    * validAttributeType=[XAttributeType|ATTRIBUTE_TYPE_REFERENCE] ("branchGuid" branchGuid=STRING)?;
    **/

   // "attribute" validAttributeType=[XAttributeType|ATTRIBUTE_TYPE_REFERENCE] ("branchGuid" branchGuid=STRING)?
   protected class XAttributeTypeRef_Group extends GroupToken {

      public XAttributeTypeRef_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Group getGrammarElement() {
         return grammarAccess.getXAttributeTypeRefAccess().getGroup();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new XAttributeTypeRef_Group_2(lastRuleCallOrigin, this, 0, inst);
            case 1:
               return new XAttributeTypeRef_ValidAttributeTypeAssignment_1(lastRuleCallOrigin, this, 1, inst);
            default:
               return null;
         }
      }

      @Override
      public IEObjectConsumer tryConsume() {
         if (getEObject().eClass() != grammarAccess.getXAttributeTypeRefRule().getType().getClassifier()) {
            return null;
         }
         return eObjectConsumer;
      }

   }

   // "attribute"
   protected class XAttributeTypeRef_AttributeKeyword_0 extends KeywordToken {

      public XAttributeTypeRef_AttributeKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Keyword getGrammarElement() {
         return grammarAccess.getXAttributeTypeRefAccess().getAttributeKeyword_0();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            default:
               return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
         }
      }

   }

   // validAttributeType=[XAttributeType|ATTRIBUTE_TYPE_REFERENCE]
   protected class XAttributeTypeRef_ValidAttributeTypeAssignment_1 extends AssignmentToken {

      public XAttributeTypeRef_ValidAttributeTypeAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Assignment getGrammarElement() {
         return grammarAccess.getXAttributeTypeRefAccess().getValidAttributeTypeAssignment_1();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new XAttributeTypeRef_AttributeKeyword_0(lastRuleCallOrigin, this, 0, inst);
            default:
               return null;
         }
      }

      @Override
      public IEObjectConsumer tryConsume() {
         if ((value = eObjectConsumer.getConsumable("validAttributeType", true)) == null) {
            return null;
         }
         IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("validAttributeType");
         if (value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
            IEObjectConsumer param = createEObjectConsumer((EObject) value);
            if (param.isInstanceOf(grammarAccess.getXAttributeTypeRefAccess().getValidAttributeTypeXAttributeTypeCrossReference_1_0().getType().getClassifier())) {
               type = AssignmentType.CROSS_REFERENCE;
               element =
                  grammarAccess.getXAttributeTypeRefAccess().getValidAttributeTypeXAttributeTypeCrossReference_1_0();
               return obj;
            }
         }
         return null;
      }

   }

   // ("branchGuid" branchGuid=STRING)?
   protected class XAttributeTypeRef_Group_2 extends GroupToken {

      public XAttributeTypeRef_Group_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Group getGrammarElement() {
         return grammarAccess.getXAttributeTypeRefAccess().getGroup_2();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new XAttributeTypeRef_BranchGuidAssignment_2_1(lastRuleCallOrigin, this, 0, inst);
            default:
               return null;
         }
      }

   }

   // "branchGuid"
   protected class XAttributeTypeRef_BranchGuidKeyword_2_0 extends KeywordToken {

      public XAttributeTypeRef_BranchGuidKeyword_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Keyword getGrammarElement() {
         return grammarAccess.getXAttributeTypeRefAccess().getBranchGuidKeyword_2_0();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new XAttributeTypeRef_ValidAttributeTypeAssignment_1(lastRuleCallOrigin, this, 0, inst);
            default:
               return null;
         }
      }

   }

   // branchGuid=STRING
   protected class XAttributeTypeRef_BranchGuidAssignment_2_1 extends AssignmentToken {

      public XAttributeTypeRef_BranchGuidAssignment_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Assignment getGrammarElement() {
         return grammarAccess.getXAttributeTypeRefAccess().getBranchGuidAssignment_2_1();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new XAttributeTypeRef_BranchGuidKeyword_2_0(lastRuleCallOrigin, this, 0, inst);
            default:
               return null;
         }
      }

      @Override
      public IEObjectConsumer tryConsume() {
         if ((value = eObjectConsumer.getConsumable("branchGuid", false)) == null) {
            return null;
         }
         IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("branchGuid");
         if (valueSerializer.isValid(obj.getEObject(),
            grammarAccess.getXAttributeTypeRefAccess().getBranchGuidSTRINGTerminalRuleCall_2_1_0(), value, null)) {
            type = AssignmentType.TERMINAL_RULE_CALL;
            element = grammarAccess.getXAttributeTypeRefAccess().getBranchGuidSTRINGTerminalRuleCall_2_1_0();
            return obj;
         }
         return null;
      }

   }

   /************ end Rule XAttributeTypeRef ****************/

   /************
    * begin Rule XAttributeType **************** XAttributeType: "attributeType" name=ATTRIBUTE_TYPE_REFERENCE
    * ("extends" baseAttributeType=AttributeBaseType) ("overrides" override=[XAttributeType|ATTRIBUTE_TYPE_REFERENCE])?
    * "{" "guid" typeGuid=STRING "dataProvider" dataProvider=("DefaultAttributeDataProvider" |
    * "UriAttributeDataProvider" | QUALIFIED_NAME) "min" min=WHOLE_NUM_STR "max" max=(WHOLE_NUM_STR | "unlimited")
    * ("taggerId" taggerId=("DefaultAttributeTaggerProvider" | QUALIFIED_NAME))? ("enumType"
    * enumType=[XOseeEnumType|ENUM_TYPE_REFERENCE])? ("description" description=STRING)? ("defaultValue"
    * defaultValue=STRING)? ("fileExtension" fileExtension=STRING)? "}";
    **/

   // "attributeType" name=ATTRIBUTE_TYPE_REFERENCE ("extends" baseAttributeType=AttributeBaseType) ("overrides"
   // override=[XAttributeType|ATTRIBUTE_TYPE_REFERENCE])? "{" "guid" typeGuid=STRING "dataProvider"
   // dataProvider=("DefaultAttributeDataProvider" | "UriAttributeDataProvider" | QUALIFIED_NAME) "min" min=WHOLE_NUM_STR
   // "max" max=(WHOLE_NUM_STR | "unlimited") ("taggerId" taggerId=("DefaultAttributeTaggerProvider" | QUALIFIED_NAME))?
   // ("enumType" enumType=[XOseeEnumType|ENUM_TYPE_REFERENCE])? ("description" description=STRING)? ("defaultValue"
   // defaultValue=STRING)? ("fileExtension" fileExtension=STRING)? "}"
   protected class XAttributeType_Group extends GroupToken {

      public XAttributeType_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Group getGrammarElement() {
         return grammarAccess.getXAttributeTypeAccess().getGroup();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new XAttributeType_RightCurlyBracketKeyword_18(lastRuleCallOrigin, this, 0, inst);
            default:
               return null;
         }
      }

      @Override
      public IEObjectConsumer tryConsume() {
         if (getEObject().eClass() != grammarAccess.getXAttributeTypeRule().getType().getClassifier()) {
            return null;
         }
         return eObjectConsumer;
      }

   }

   // "attributeType"
   protected class XAttributeType_AttributeTypeKeyword_0 extends KeywordToken {

      public XAttributeType_AttributeTypeKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Keyword getGrammarElement() {
         return grammarAccess.getXAttributeTypeAccess().getAttributeTypeKeyword_0();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            default:
               return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
         }
      }

   }

   // name=ATTRIBUTE_TYPE_REFERENCE
   protected class XAttributeType_NameAssignment_1 extends AssignmentToken {

      public XAttributeType_NameAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Assignment getGrammarElement() {
         return grammarAccess.getXAttributeTypeAccess().getNameAssignment_1();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new XAttributeType_AttributeTypeKeyword_0(lastRuleCallOrigin, this, 0, inst);
            default:
               return null;
         }
      }

      @Override
      public IEObjectConsumer tryConsume() {
         if ((value = eObjectConsumer.getConsumable("name", true)) == null) {
            return null;
         }
         IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
         if (valueSerializer.isValid(obj.getEObject(),
            grammarAccess.getXAttributeTypeAccess().getNameATTRIBUTE_TYPE_REFERENCEParserRuleCall_1_0(), value, null)) {
            type = AssignmentType.DATATYPE_RULE_CALL;
            element = grammarAccess.getXAttributeTypeAccess().getNameATTRIBUTE_TYPE_REFERENCEParserRuleCall_1_0();
            return obj;
         }
         return null;
      }

   }

   // "extends" baseAttributeType=AttributeBaseType
   protected class XAttributeType_Group_2 extends GroupToken {

      public XAttributeType_Group_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Group getGrammarElement() {
         return grammarAccess.getXAttributeTypeAccess().getGroup_2();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new XAttributeType_BaseAttributeTypeAssignment_2_1(lastRuleCallOrigin, this, 0, inst);
            default:
               return null;
         }
      }

   }

   // "extends"
   protected class XAttributeType_ExtendsKeyword_2_0 extends KeywordToken {

      public XAttributeType_ExtendsKeyword_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Keyword getGrammarElement() {
         return grammarAccess.getXAttributeTypeAccess().getExtendsKeyword_2_0();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new XAttributeType_NameAssignment_1(lastRuleCallOrigin, this, 0, inst);
            default:
               return null;
         }
      }

   }

   // baseAttributeType=AttributeBaseType
   protected class XAttributeType_BaseAttributeTypeAssignment_2_1 extends AssignmentToken {

      public XAttributeType_BaseAttributeTypeAssignment_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Assignment getGrammarElement() {
         return grammarAccess.getXAttributeTypeAccess().getBaseAttributeTypeAssignment_2_1();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new XAttributeType_ExtendsKeyword_2_0(lastRuleCallOrigin, this, 0, inst);
            default:
               return null;
         }
      }

      @Override
      public IEObjectConsumer tryConsume() {
         if ((value = eObjectConsumer.getConsumable("baseAttributeType", true)) == null) {
            return null;
         }
         IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("baseAttributeType");
         if (valueSerializer.isValid(obj.getEObject(),
            grammarAccess.getXAttributeTypeAccess().getBaseAttributeTypeAttributeBaseTypeParserRuleCall_2_1_0(), value,
            null)) {
            type = AssignmentType.DATATYPE_RULE_CALL;
            element =
               grammarAccess.getXAttributeTypeAccess().getBaseAttributeTypeAttributeBaseTypeParserRuleCall_2_1_0();
            return obj;
         }
         return null;
      }

   }

   // ("overrides" override=[XAttributeType|ATTRIBUTE_TYPE_REFERENCE])?
   protected class XAttributeType_Group_3 extends GroupToken {

      public XAttributeType_Group_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Group getGrammarElement() {
         return grammarAccess.getXAttributeTypeAccess().getGroup_3();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new XAttributeType_OverrideAssignment_3_1(lastRuleCallOrigin, this, 0, inst);
            default:
               return null;
         }
      }

   }

   // "overrides"
   protected class XAttributeType_OverridesKeyword_3_0 extends KeywordToken {

      public XAttributeType_OverridesKeyword_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Keyword getGrammarElement() {
         return grammarAccess.getXAttributeTypeAccess().getOverridesKeyword_3_0();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new XAttributeType_Group_2(lastRuleCallOrigin, this, 0, inst);
            default:
               return null;
         }
      }

   }

   // override=[XAttributeType|ATTRIBUTE_TYPE_REFERENCE]
   protected class XAttributeType_OverrideAssignment_3_1 extends AssignmentToken {

      public XAttributeType_OverrideAssignment_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Assignment getGrammarElement() {
         return grammarAccess.getXAttributeTypeAccess().getOverrideAssignment_3_1();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new XAttributeType_OverridesKeyword_3_0(lastRuleCallOrigin, this, 0, inst);
            default:
               return null;
         }
      }

      @Override
      public IEObjectConsumer tryConsume() {
         if ((value = eObjectConsumer.getConsumable("override", false)) == null) {
            return null;
         }
         IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("override");
         if (value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
            IEObjectConsumer param = createEObjectConsumer((EObject) value);
            if (param.isInstanceOf(grammarAccess.getXAttributeTypeAccess().getOverrideXAttributeTypeCrossReference_3_1_0().getType().getClassifier())) {
               type = AssignmentType.CROSS_REFERENCE;
               element = grammarAccess.getXAttributeTypeAccess().getOverrideXAttributeTypeCrossReference_3_1_0();
               return obj;
            }
         }
         return null;
      }

   }

   // "{"
   protected class XAttributeType_LeftCurlyBracketKeyword_4 extends KeywordToken {

      public XAttributeType_LeftCurlyBracketKeyword_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Keyword getGrammarElement() {
         return grammarAccess.getXAttributeTypeAccess().getLeftCurlyBracketKeyword_4();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new XAttributeType_Group_3(lastRuleCallOrigin, this, 0, inst);
            case 1:
               return new XAttributeType_Group_2(lastRuleCallOrigin, this, 1, inst);
            default:
               return null;
         }
      }

   }

   // "guid"
   protected class XAttributeType_GuidKeyword_5 extends KeywordToken {

      public XAttributeType_GuidKeyword_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Keyword getGrammarElement() {
         return grammarAccess.getXAttributeTypeAccess().getGuidKeyword_5();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new XAttributeType_LeftCurlyBracketKeyword_4(lastRuleCallOrigin, this, 0, inst);
            default:
               return null;
         }
      }

   }

   // typeGuid=STRING
   protected class XAttributeType_TypeGuidAssignment_6 extends AssignmentToken {

      public XAttributeType_TypeGuidAssignment_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Assignment getGrammarElement() {
         return grammarAccess.getXAttributeTypeAccess().getTypeGuidAssignment_6();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new XAttributeType_GuidKeyword_5(lastRuleCallOrigin, this, 0, inst);
            default:
               return null;
         }
      }

      @Override
      public IEObjectConsumer tryConsume() {
         if ((value = eObjectConsumer.getConsumable("typeGuid", true)) == null) {
            return null;
         }
         IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("typeGuid");
         if (valueSerializer.isValid(obj.getEObject(),
            grammarAccess.getXAttributeTypeAccess().getTypeGuidSTRINGTerminalRuleCall_6_0(), value, null)) {
            type = AssignmentType.TERMINAL_RULE_CALL;
            element = grammarAccess.getXAttributeTypeAccess().getTypeGuidSTRINGTerminalRuleCall_6_0();
            return obj;
         }
         return null;
      }

   }

   // "dataProvider"
   protected class XAttributeType_DataProviderKeyword_7 extends KeywordToken {

      public XAttributeType_DataProviderKeyword_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Keyword getGrammarElement() {
         return grammarAccess.getXAttributeTypeAccess().getDataProviderKeyword_7();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new XAttributeType_TypeGuidAssignment_6(lastRuleCallOrigin, this, 0, inst);
            default:
               return null;
         }
      }

   }

   // dataProvider=("DefaultAttributeDataProvider" | "UriAttributeDataProvider" | QUALIFIED_NAME)
   protected class XAttributeType_DataProviderAssignment_8 extends AssignmentToken {

      public XAttributeType_DataProviderAssignment_8(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Assignment getGrammarElement() {
         return grammarAccess.getXAttributeTypeAccess().getDataProviderAssignment_8();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new XAttributeType_DataProviderKeyword_7(lastRuleCallOrigin, this, 0, inst);
            default:
               return null;
         }
      }

      @Override
      public IEObjectConsumer tryConsume() {
         if ((value = eObjectConsumer.getConsumable("dataProvider", true)) == null) {
            return null;
         }
         IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("dataProvider");
         if (keywordSerializer.isValid(obj.getEObject(),
            grammarAccess.getXAttributeTypeAccess().getDataProviderDefaultAttributeDataProviderKeyword_8_0_0(), value,
            null)) {
            type = AssignmentType.KEYWORD;
            element =
               grammarAccess.getXAttributeTypeAccess().getDataProviderDefaultAttributeDataProviderKeyword_8_0_0();
            return obj;
         }
         if (keywordSerializer.isValid(obj.getEObject(),
            grammarAccess.getXAttributeTypeAccess().getDataProviderUriAttributeDataProviderKeyword_8_0_1(), value, null)) {
            type = AssignmentType.KEYWORD;
            element = grammarAccess.getXAttributeTypeAccess().getDataProviderUriAttributeDataProviderKeyword_8_0_1();
            return obj;
         }
         if (valueSerializer.isValid(obj.getEObject(),
            grammarAccess.getXAttributeTypeAccess().getDataProviderQUALIFIED_NAMEParserRuleCall_8_0_2(), value, null)) {
            type = AssignmentType.DATATYPE_RULE_CALL;
            element = grammarAccess.getXAttributeTypeAccess().getDataProviderQUALIFIED_NAMEParserRuleCall_8_0_2();
            return obj;
         }
         return null;
      }

   }

   // "min"
   protected class XAttributeType_MinKeyword_9 extends KeywordToken {

      public XAttributeType_MinKeyword_9(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Keyword getGrammarElement() {
         return grammarAccess.getXAttributeTypeAccess().getMinKeyword_9();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new XAttributeType_DataProviderAssignment_8(lastRuleCallOrigin, this, 0, inst);
            default:
               return null;
         }
      }

   }

   // min=WHOLE_NUM_STR
   protected class XAttributeType_MinAssignment_10 extends AssignmentToken {

      public XAttributeType_MinAssignment_10(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Assignment getGrammarElement() {
         return grammarAccess.getXAttributeTypeAccess().getMinAssignment_10();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new XAttributeType_MinKeyword_9(lastRuleCallOrigin, this, 0, inst);
            default:
               return null;
         }
      }

      @Override
      public IEObjectConsumer tryConsume() {
         if ((value = eObjectConsumer.getConsumable("min", true)) == null) {
            return null;
         }
         IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("min");
         if (valueSerializer.isValid(obj.getEObject(),
            grammarAccess.getXAttributeTypeAccess().getMinWHOLE_NUM_STRTerminalRuleCall_10_0(), value, null)) {
            type = AssignmentType.TERMINAL_RULE_CALL;
            element = grammarAccess.getXAttributeTypeAccess().getMinWHOLE_NUM_STRTerminalRuleCall_10_0();
            return obj;
         }
         return null;
      }

   }

   // "max"
   protected class XAttributeType_MaxKeyword_11 extends KeywordToken {

      public XAttributeType_MaxKeyword_11(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Keyword getGrammarElement() {
         return grammarAccess.getXAttributeTypeAccess().getMaxKeyword_11();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new XAttributeType_MinAssignment_10(lastRuleCallOrigin, this, 0, inst);
            default:
               return null;
         }
      }

   }

   // max=(WHOLE_NUM_STR | "unlimited")
   protected class XAttributeType_MaxAssignment_12 extends AssignmentToken {

      public XAttributeType_MaxAssignment_12(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Assignment getGrammarElement() {
         return grammarAccess.getXAttributeTypeAccess().getMaxAssignment_12();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new XAttributeType_MaxKeyword_11(lastRuleCallOrigin, this, 0, inst);
            default:
               return null;
         }
      }

      @Override
      public IEObjectConsumer tryConsume() {
         if ((value = eObjectConsumer.getConsumable("max", true)) == null) {
            return null;
         }
         IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("max");
         if (keywordSerializer.isValid(obj.getEObject(),
            grammarAccess.getXAttributeTypeAccess().getMaxUnlimitedKeyword_12_0_1(), value, null)) {
            type = AssignmentType.KEYWORD;
            element = grammarAccess.getXAttributeTypeAccess().getMaxUnlimitedKeyword_12_0_1();
            return obj;
         }
         if (valueSerializer.isValid(obj.getEObject(),
            grammarAccess.getXAttributeTypeAccess().getMaxWHOLE_NUM_STRTerminalRuleCall_12_0_0(), value, null)) {
            type = AssignmentType.TERMINAL_RULE_CALL;
            element = grammarAccess.getXAttributeTypeAccess().getMaxWHOLE_NUM_STRTerminalRuleCall_12_0_0();
            return obj;
         }
         return null;
      }

   }

   // ("taggerId" taggerId=("DefaultAttributeTaggerProvider" | QUALIFIED_NAME))?
   protected class XAttributeType_Group_13 extends GroupToken {

      public XAttributeType_Group_13(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Group getGrammarElement() {
         return grammarAccess.getXAttributeTypeAccess().getGroup_13();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new XAttributeType_TaggerIdAssignment_13_1(lastRuleCallOrigin, this, 0, inst);
            default:
               return null;
         }
      }

   }

   // "taggerId"
   protected class XAttributeType_TaggerIdKeyword_13_0 extends KeywordToken {

      public XAttributeType_TaggerIdKeyword_13_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Keyword getGrammarElement() {
         return grammarAccess.getXAttributeTypeAccess().getTaggerIdKeyword_13_0();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new XAttributeType_MaxAssignment_12(lastRuleCallOrigin, this, 0, inst);
            default:
               return null;
         }
      }

   }

   // taggerId=("DefaultAttributeTaggerProvider" | QUALIFIED_NAME)
   protected class XAttributeType_TaggerIdAssignment_13_1 extends AssignmentToken {

      public XAttributeType_TaggerIdAssignment_13_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Assignment getGrammarElement() {
         return grammarAccess.getXAttributeTypeAccess().getTaggerIdAssignment_13_1();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new XAttributeType_TaggerIdKeyword_13_0(lastRuleCallOrigin, this, 0, inst);
            default:
               return null;
         }
      }

      @Override
      public IEObjectConsumer tryConsume() {
         if ((value = eObjectConsumer.getConsumable("taggerId", false)) == null) {
            return null;
         }
         IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("taggerId");
         if (keywordSerializer.isValid(obj.getEObject(),
            grammarAccess.getXAttributeTypeAccess().getTaggerIdDefaultAttributeTaggerProviderKeyword_13_1_0_0(), value,
            null)) {
            type = AssignmentType.KEYWORD;
            element =
               grammarAccess.getXAttributeTypeAccess().getTaggerIdDefaultAttributeTaggerProviderKeyword_13_1_0_0();
            return obj;
         }
         if (valueSerializer.isValid(obj.getEObject(),
            grammarAccess.getXAttributeTypeAccess().getTaggerIdQUALIFIED_NAMEParserRuleCall_13_1_0_1(), value, null)) {
            type = AssignmentType.DATATYPE_RULE_CALL;
            element = grammarAccess.getXAttributeTypeAccess().getTaggerIdQUALIFIED_NAMEParserRuleCall_13_1_0_1();
            return obj;
         }
         return null;
      }

   }

   // ("enumType" enumType=[XOseeEnumType|ENUM_TYPE_REFERENCE])?
   protected class XAttributeType_Group_14 extends GroupToken {

      public XAttributeType_Group_14(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Group getGrammarElement() {
         return grammarAccess.getXAttributeTypeAccess().getGroup_14();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new XAttributeType_EnumTypeAssignment_14_1(lastRuleCallOrigin, this, 0, inst);
            default:
               return null;
         }
      }

   }

   // "enumType"
   protected class XAttributeType_EnumTypeKeyword_14_0 extends KeywordToken {

      public XAttributeType_EnumTypeKeyword_14_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Keyword getGrammarElement() {
         return grammarAccess.getXAttributeTypeAccess().getEnumTypeKeyword_14_0();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new XAttributeType_Group_13(lastRuleCallOrigin, this, 0, inst);
            case 1:
               return new XAttributeType_MaxAssignment_12(lastRuleCallOrigin, this, 1, inst);
            default:
               return null;
         }
      }

   }

   // enumType=[XOseeEnumType|ENUM_TYPE_REFERENCE]
   protected class XAttributeType_EnumTypeAssignment_14_1 extends AssignmentToken {

      public XAttributeType_EnumTypeAssignment_14_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Assignment getGrammarElement() {
         return grammarAccess.getXAttributeTypeAccess().getEnumTypeAssignment_14_1();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new XAttributeType_EnumTypeKeyword_14_0(lastRuleCallOrigin, this, 0, inst);
            default:
               return null;
         }
      }

      @Override
      public IEObjectConsumer tryConsume() {
         if ((value = eObjectConsumer.getConsumable("enumType", false)) == null) {
            return null;
         }
         IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("enumType");
         if (value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
            IEObjectConsumer param = createEObjectConsumer((EObject) value);
            if (param.isInstanceOf(grammarAccess.getXAttributeTypeAccess().getEnumTypeXOseeEnumTypeCrossReference_14_1_0().getType().getClassifier())) {
               type = AssignmentType.CROSS_REFERENCE;
               element = grammarAccess.getXAttributeTypeAccess().getEnumTypeXOseeEnumTypeCrossReference_14_1_0();
               return obj;
            }
         }
         return null;
      }

   }

   // ("description" description=STRING)?
   protected class XAttributeType_Group_15 extends GroupToken {

      public XAttributeType_Group_15(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Group getGrammarElement() {
         return grammarAccess.getXAttributeTypeAccess().getGroup_15();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new XAttributeType_DescriptionAssignment_15_1(lastRuleCallOrigin, this, 0, inst);
            default:
               return null;
         }
      }

   }

   // "description"
   protected class XAttributeType_DescriptionKeyword_15_0 extends KeywordToken {

      public XAttributeType_DescriptionKeyword_15_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Keyword getGrammarElement() {
         return grammarAccess.getXAttributeTypeAccess().getDescriptionKeyword_15_0();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new XAttributeType_Group_14(lastRuleCallOrigin, this, 0, inst);
            case 1:
               return new XAttributeType_Group_13(lastRuleCallOrigin, this, 1, inst);
            case 2:
               return new XAttributeType_MaxAssignment_12(lastRuleCallOrigin, this, 2, inst);
            default:
               return null;
         }
      }

   }

   // description=STRING
   protected class XAttributeType_DescriptionAssignment_15_1 extends AssignmentToken {

      public XAttributeType_DescriptionAssignment_15_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Assignment getGrammarElement() {
         return grammarAccess.getXAttributeTypeAccess().getDescriptionAssignment_15_1();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new XAttributeType_DescriptionKeyword_15_0(lastRuleCallOrigin, this, 0, inst);
            default:
               return null;
         }
      }

      @Override
      public IEObjectConsumer tryConsume() {
         if ((value = eObjectConsumer.getConsumable("description", false)) == null) {
            return null;
         }
         IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("description");
         if (valueSerializer.isValid(obj.getEObject(),
            grammarAccess.getXAttributeTypeAccess().getDescriptionSTRINGTerminalRuleCall_15_1_0(), value, null)) {
            type = AssignmentType.TERMINAL_RULE_CALL;
            element = grammarAccess.getXAttributeTypeAccess().getDescriptionSTRINGTerminalRuleCall_15_1_0();
            return obj;
         }
         return null;
      }

   }

   // ("defaultValue" defaultValue=STRING)?
   protected class XAttributeType_Group_16 extends GroupToken {

      public XAttributeType_Group_16(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Group getGrammarElement() {
         return grammarAccess.getXAttributeTypeAccess().getGroup_16();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new XAttributeType_DefaultValueAssignment_16_1(lastRuleCallOrigin, this, 0, inst);
            default:
               return null;
         }
      }

   }

   // "defaultValue"
   protected class XAttributeType_DefaultValueKeyword_16_0 extends KeywordToken {

      public XAttributeType_DefaultValueKeyword_16_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Keyword getGrammarElement() {
         return grammarAccess.getXAttributeTypeAccess().getDefaultValueKeyword_16_0();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new XAttributeType_Group_15(lastRuleCallOrigin, this, 0, inst);
            case 1:
               return new XAttributeType_Group_14(lastRuleCallOrigin, this, 1, inst);
            case 2:
               return new XAttributeType_Group_13(lastRuleCallOrigin, this, 2, inst);
            case 3:
               return new XAttributeType_MaxAssignment_12(lastRuleCallOrigin, this, 3, inst);
            default:
               return null;
         }
      }

   }

   // defaultValue=STRING
   protected class XAttributeType_DefaultValueAssignment_16_1 extends AssignmentToken {

      public XAttributeType_DefaultValueAssignment_16_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Assignment getGrammarElement() {
         return grammarAccess.getXAttributeTypeAccess().getDefaultValueAssignment_16_1();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new XAttributeType_DefaultValueKeyword_16_0(lastRuleCallOrigin, this, 0, inst);
            default:
               return null;
         }
      }

      @Override
      public IEObjectConsumer tryConsume() {
         if ((value = eObjectConsumer.getConsumable("defaultValue", false)) == null) {
            return null;
         }
         IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("defaultValue");
         if (valueSerializer.isValid(obj.getEObject(),
            grammarAccess.getXAttributeTypeAccess().getDefaultValueSTRINGTerminalRuleCall_16_1_0(), value, null)) {
            type = AssignmentType.TERMINAL_RULE_CALL;
            element = grammarAccess.getXAttributeTypeAccess().getDefaultValueSTRINGTerminalRuleCall_16_1_0();
            return obj;
         }
         return null;
      }

   }

   // ("fileExtension" fileExtension=STRING)?
   protected class XAttributeType_Group_17 extends GroupToken {

      public XAttributeType_Group_17(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Group getGrammarElement() {
         return grammarAccess.getXAttributeTypeAccess().getGroup_17();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new XAttributeType_FileExtensionAssignment_17_1(lastRuleCallOrigin, this, 0, inst);
            default:
               return null;
         }
      }

   }

   // "fileExtension"
   protected class XAttributeType_FileExtensionKeyword_17_0 extends KeywordToken {

      public XAttributeType_FileExtensionKeyword_17_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Keyword getGrammarElement() {
         return grammarAccess.getXAttributeTypeAccess().getFileExtensionKeyword_17_0();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new XAttributeType_Group_16(lastRuleCallOrigin, this, 0, inst);
            case 1:
               return new XAttributeType_Group_15(lastRuleCallOrigin, this, 1, inst);
            case 2:
               return new XAttributeType_Group_14(lastRuleCallOrigin, this, 2, inst);
            case 3:
               return new XAttributeType_Group_13(lastRuleCallOrigin, this, 3, inst);
            case 4:
               return new XAttributeType_MaxAssignment_12(lastRuleCallOrigin, this, 4, inst);
            default:
               return null;
         }
      }

   }

   // fileExtension=STRING
   protected class XAttributeType_FileExtensionAssignment_17_1 extends AssignmentToken {

      public XAttributeType_FileExtensionAssignment_17_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Assignment getGrammarElement() {
         return grammarAccess.getXAttributeTypeAccess().getFileExtensionAssignment_17_1();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new XAttributeType_FileExtensionKeyword_17_0(lastRuleCallOrigin, this, 0, inst);
            default:
               return null;
         }
      }

      @Override
      public IEObjectConsumer tryConsume() {
         if ((value = eObjectConsumer.getConsumable("fileExtension", false)) == null) {
            return null;
         }
         IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("fileExtension");
         if (valueSerializer.isValid(obj.getEObject(),
            grammarAccess.getXAttributeTypeAccess().getFileExtensionSTRINGTerminalRuleCall_17_1_0(), value, null)) {
            type = AssignmentType.TERMINAL_RULE_CALL;
            element = grammarAccess.getXAttributeTypeAccess().getFileExtensionSTRINGTerminalRuleCall_17_1_0();
            return obj;
         }
         return null;
      }

   }

   // "}"
   protected class XAttributeType_RightCurlyBracketKeyword_18 extends KeywordToken {

      public XAttributeType_RightCurlyBracketKeyword_18(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Keyword getGrammarElement() {
         return grammarAccess.getXAttributeTypeAccess().getRightCurlyBracketKeyword_18();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new XAttributeType_Group_17(lastRuleCallOrigin, this, 0, inst);
            case 1:
               return new XAttributeType_Group_16(lastRuleCallOrigin, this, 1, inst);
            case 2:
               return new XAttributeType_Group_15(lastRuleCallOrigin, this, 2, inst);
            case 3:
               return new XAttributeType_Group_14(lastRuleCallOrigin, this, 3, inst);
            case 4:
               return new XAttributeType_Group_13(lastRuleCallOrigin, this, 4, inst);
            case 5:
               return new XAttributeType_MaxAssignment_12(lastRuleCallOrigin, this, 5, inst);
            default:
               return null;
         }
      }

   }

   /************ end Rule XAttributeType ****************/

   /************
    * begin Rule XOseeEnumType **************** XOseeEnumType: "oseeEnumType" name=ENUM_TYPE_REFERENCE "{" "guid"
    * typeGuid=STRING enumEntries+=XOseeEnumEntry* "}";
    **/

   // "oseeEnumType" name=ENUM_TYPE_REFERENCE "{" "guid" typeGuid=STRING enumEntries+=XOseeEnumEntry* "}"
   protected class XOseeEnumType_Group extends GroupToken {

      public XOseeEnumType_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Group getGrammarElement() {
         return grammarAccess.getXOseeEnumTypeAccess().getGroup();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new XOseeEnumType_RightCurlyBracketKeyword_6(lastRuleCallOrigin, this, 0, inst);
            default:
               return null;
         }
      }

      @Override
      public IEObjectConsumer tryConsume() {
         if (getEObject().eClass() != grammarAccess.getXOseeEnumTypeRule().getType().getClassifier()) {
            return null;
         }
         return eObjectConsumer;
      }

   }

   // "oseeEnumType"
   protected class XOseeEnumType_OseeEnumTypeKeyword_0 extends KeywordToken {

      public XOseeEnumType_OseeEnumTypeKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Keyword getGrammarElement() {
         return grammarAccess.getXOseeEnumTypeAccess().getOseeEnumTypeKeyword_0();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            default:
               return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
         }
      }

   }

   // name=ENUM_TYPE_REFERENCE
   protected class XOseeEnumType_NameAssignment_1 extends AssignmentToken {

      public XOseeEnumType_NameAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Assignment getGrammarElement() {
         return grammarAccess.getXOseeEnumTypeAccess().getNameAssignment_1();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new XOseeEnumType_OseeEnumTypeKeyword_0(lastRuleCallOrigin, this, 0, inst);
            default:
               return null;
         }
      }

      @Override
      public IEObjectConsumer tryConsume() {
         if ((value = eObjectConsumer.getConsumable("name", true)) == null) {
            return null;
         }
         IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
         if (valueSerializer.isValid(obj.getEObject(),
            grammarAccess.getXOseeEnumTypeAccess().getNameENUM_TYPE_REFERENCEParserRuleCall_1_0(), value, null)) {
            type = AssignmentType.DATATYPE_RULE_CALL;
            element = grammarAccess.getXOseeEnumTypeAccess().getNameENUM_TYPE_REFERENCEParserRuleCall_1_0();
            return obj;
         }
         return null;
      }

   }

   // "{"
   protected class XOseeEnumType_LeftCurlyBracketKeyword_2 extends KeywordToken {

      public XOseeEnumType_LeftCurlyBracketKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Keyword getGrammarElement() {
         return grammarAccess.getXOseeEnumTypeAccess().getLeftCurlyBracketKeyword_2();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new XOseeEnumType_NameAssignment_1(lastRuleCallOrigin, this, 0, inst);
            default:
               return null;
         }
      }

   }

   // "guid"
   protected class XOseeEnumType_GuidKeyword_3 extends KeywordToken {

      public XOseeEnumType_GuidKeyword_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Keyword getGrammarElement() {
         return grammarAccess.getXOseeEnumTypeAccess().getGuidKeyword_3();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new XOseeEnumType_LeftCurlyBracketKeyword_2(lastRuleCallOrigin, this, 0, inst);
            default:
               return null;
         }
      }

   }

   // typeGuid=STRING
   protected class XOseeEnumType_TypeGuidAssignment_4 extends AssignmentToken {

      public XOseeEnumType_TypeGuidAssignment_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Assignment getGrammarElement() {
         return grammarAccess.getXOseeEnumTypeAccess().getTypeGuidAssignment_4();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new XOseeEnumType_GuidKeyword_3(lastRuleCallOrigin, this, 0, inst);
            default:
               return null;
         }
      }

      @Override
      public IEObjectConsumer tryConsume() {
         if ((value = eObjectConsumer.getConsumable("typeGuid", true)) == null) {
            return null;
         }
         IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("typeGuid");
         if (valueSerializer.isValid(obj.getEObject(),
            grammarAccess.getXOseeEnumTypeAccess().getTypeGuidSTRINGTerminalRuleCall_4_0(), value, null)) {
            type = AssignmentType.TERMINAL_RULE_CALL;
            element = grammarAccess.getXOseeEnumTypeAccess().getTypeGuidSTRINGTerminalRuleCall_4_0();
            return obj;
         }
         return null;
      }

   }

   // enumEntries+=XOseeEnumEntry*
   protected class XOseeEnumType_EnumEntriesAssignment_5 extends AssignmentToken {

      public XOseeEnumType_EnumEntriesAssignment_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Assignment getGrammarElement() {
         return grammarAccess.getXOseeEnumTypeAccess().getEnumEntriesAssignment_5();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new XOseeEnumEntry_Group(this, this, 0, inst);
            default:
               return null;
         }
      }

      @Override
      public IEObjectConsumer tryConsume() {
         if ((value = eObjectConsumer.getConsumable("enumEntries", false)) == null) {
            return null;
         }
         IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("enumEntries");
         if (value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
            IEObjectConsumer param = createEObjectConsumer((EObject) value);
            if (param.isInstanceOf(grammarAccess.getXOseeEnumEntryRule().getType().getClassifier())) {
               type = AssignmentType.PARSER_RULE_CALL;
               element = grammarAccess.getXOseeEnumTypeAccess().getEnumEntriesXOseeEnumEntryParserRuleCall_5_0();
               consumed = obj;
               return param;
            }
         }
         return null;
      }

      @Override
      public AbstractToken createFollowerAfterReturn(AbstractToken next, int actIndex, int index, IEObjectConsumer inst) {
         if (value == inst.getEObject() && !inst.isConsumed()) {
            return null;
         }
         switch (index) {
            case 0:
               return new XOseeEnumType_EnumEntriesAssignment_5(lastRuleCallOrigin, next, actIndex, consumed);
            case 1:
               return new XOseeEnumType_TypeGuidAssignment_4(lastRuleCallOrigin, next, actIndex, consumed);
            default:
               return null;
         }
      }
   }

   // "}"
   protected class XOseeEnumType_RightCurlyBracketKeyword_6 extends KeywordToken {

      public XOseeEnumType_RightCurlyBracketKeyword_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Keyword getGrammarElement() {
         return grammarAccess.getXOseeEnumTypeAccess().getRightCurlyBracketKeyword_6();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new XOseeEnumType_EnumEntriesAssignment_5(lastRuleCallOrigin, this, 0, inst);
            case 1:
               return new XOseeEnumType_TypeGuidAssignment_4(lastRuleCallOrigin, this, 1, inst);
            default:
               return null;
         }
      }

   }

   /************ end Rule XOseeEnumType ****************/

   /************
    * begin Rule XOseeEnumEntry **************** XOseeEnumEntry: "entry" name=ENUM_ENTRY_TYPE_REFERENCE
    * ordinal=WHOLE_NUM_STR? ("entryGuid" entryGuid=STRING)?;
    **/

   // "entry" name=ENUM_ENTRY_TYPE_REFERENCE ordinal=WHOLE_NUM_STR? ("entryGuid" entryGuid=STRING)?
   protected class XOseeEnumEntry_Group extends GroupToken {

      public XOseeEnumEntry_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Group getGrammarElement() {
         return grammarAccess.getXOseeEnumEntryAccess().getGroup();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new XOseeEnumEntry_Group_3(lastRuleCallOrigin, this, 0, inst);
            case 1:
               return new XOseeEnumEntry_OrdinalAssignment_2(lastRuleCallOrigin, this, 1, inst);
            case 2:
               return new XOseeEnumEntry_NameAssignment_1(lastRuleCallOrigin, this, 2, inst);
            default:
               return null;
         }
      }

      @Override
      public IEObjectConsumer tryConsume() {
         if (getEObject().eClass() != grammarAccess.getXOseeEnumEntryRule().getType().getClassifier()) {
            return null;
         }
         return eObjectConsumer;
      }

   }

   // "entry"
   protected class XOseeEnumEntry_EntryKeyword_0 extends KeywordToken {

      public XOseeEnumEntry_EntryKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Keyword getGrammarElement() {
         return grammarAccess.getXOseeEnumEntryAccess().getEntryKeyword_0();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            default:
               return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
         }
      }

   }

   // name=ENUM_ENTRY_TYPE_REFERENCE
   protected class XOseeEnumEntry_NameAssignment_1 extends AssignmentToken {

      public XOseeEnumEntry_NameAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Assignment getGrammarElement() {
         return grammarAccess.getXOseeEnumEntryAccess().getNameAssignment_1();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new XOseeEnumEntry_EntryKeyword_0(lastRuleCallOrigin, this, 0, inst);
            default:
               return null;
         }
      }

      @Override
      public IEObjectConsumer tryConsume() {
         if ((value = eObjectConsumer.getConsumable("name", true)) == null) {
            return null;
         }
         IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
         if (valueSerializer.isValid(obj.getEObject(),
            grammarAccess.getXOseeEnumEntryAccess().getNameENUM_ENTRY_TYPE_REFERENCEParserRuleCall_1_0(), value, null)) {
            type = AssignmentType.DATATYPE_RULE_CALL;
            element = grammarAccess.getXOseeEnumEntryAccess().getNameENUM_ENTRY_TYPE_REFERENCEParserRuleCall_1_0();
            return obj;
         }
         return null;
      }

   }

   // ordinal=WHOLE_NUM_STR?
   protected class XOseeEnumEntry_OrdinalAssignment_2 extends AssignmentToken {

      public XOseeEnumEntry_OrdinalAssignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Assignment getGrammarElement() {
         return grammarAccess.getXOseeEnumEntryAccess().getOrdinalAssignment_2();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new XOseeEnumEntry_NameAssignment_1(lastRuleCallOrigin, this, 0, inst);
            default:
               return null;
         }
      }

      @Override
      public IEObjectConsumer tryConsume() {
         if ((value = eObjectConsumer.getConsumable("ordinal", false)) == null) {
            return null;
         }
         IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ordinal");
         if (valueSerializer.isValid(obj.getEObject(),
            grammarAccess.getXOseeEnumEntryAccess().getOrdinalWHOLE_NUM_STRTerminalRuleCall_2_0(), value, null)) {
            type = AssignmentType.TERMINAL_RULE_CALL;
            element = grammarAccess.getXOseeEnumEntryAccess().getOrdinalWHOLE_NUM_STRTerminalRuleCall_2_0();
            return obj;
         }
         return null;
      }

   }

   // ("entryGuid" entryGuid=STRING)?
   protected class XOseeEnumEntry_Group_3 extends GroupToken {

      public XOseeEnumEntry_Group_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Group getGrammarElement() {
         return grammarAccess.getXOseeEnumEntryAccess().getGroup_3();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new XOseeEnumEntry_EntryGuidAssignment_3_1(lastRuleCallOrigin, this, 0, inst);
            default:
               return null;
         }
      }

   }

   // "entryGuid"
   protected class XOseeEnumEntry_EntryGuidKeyword_3_0 extends KeywordToken {

      public XOseeEnumEntry_EntryGuidKeyword_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Keyword getGrammarElement() {
         return grammarAccess.getXOseeEnumEntryAccess().getEntryGuidKeyword_3_0();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new XOseeEnumEntry_OrdinalAssignment_2(lastRuleCallOrigin, this, 0, inst);
            case 1:
               return new XOseeEnumEntry_NameAssignment_1(lastRuleCallOrigin, this, 1, inst);
            default:
               return null;
         }
      }

   }

   // entryGuid=STRING
   protected class XOseeEnumEntry_EntryGuidAssignment_3_1 extends AssignmentToken {

      public XOseeEnumEntry_EntryGuidAssignment_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Assignment getGrammarElement() {
         return grammarAccess.getXOseeEnumEntryAccess().getEntryGuidAssignment_3_1();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new XOseeEnumEntry_EntryGuidKeyword_3_0(lastRuleCallOrigin, this, 0, inst);
            default:
               return null;
         }
      }

      @Override
      public IEObjectConsumer tryConsume() {
         if ((value = eObjectConsumer.getConsumable("entryGuid", false)) == null) {
            return null;
         }
         IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("entryGuid");
         if (valueSerializer.isValid(obj.getEObject(),
            grammarAccess.getXOseeEnumEntryAccess().getEntryGuidSTRINGTerminalRuleCall_3_1_0(), value, null)) {
            type = AssignmentType.TERMINAL_RULE_CALL;
            element = grammarAccess.getXOseeEnumEntryAccess().getEntryGuidSTRINGTerminalRuleCall_3_1_0();
            return obj;
         }
         return null;
      }

   }

   /************ end Rule XOseeEnumEntry ****************/

   /************
    * begin Rule XOseeEnumOverride **************** XOseeEnumOverride: "overrides enum"
    * overridenEnumType=[XOseeEnumType|ENUM_TYPE_REFERENCE] "{" inheritAll?="inheritAll"?
    * overrideOptions+=OverrideOption* "}";
    **/

   // "overrides enum" overridenEnumType=[XOseeEnumType|ENUM_TYPE_REFERENCE] "{" inheritAll?="inheritAll"?
   // overrideOptions+=OverrideOption* "}"
   protected class XOseeEnumOverride_Group extends GroupToken {

      public XOseeEnumOverride_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Group getGrammarElement() {
         return grammarAccess.getXOseeEnumOverrideAccess().getGroup();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new XOseeEnumOverride_RightCurlyBracketKeyword_5(lastRuleCallOrigin, this, 0, inst);
            default:
               return null;
         }
      }

      @Override
      public IEObjectConsumer tryConsume() {
         if (getEObject().eClass() != grammarAccess.getXOseeEnumOverrideRule().getType().getClassifier()) {
            return null;
         }
         return eObjectConsumer;
      }

   }

   // "overrides enum"
   protected class XOseeEnumOverride_OverridesEnumKeyword_0 extends KeywordToken {

      public XOseeEnumOverride_OverridesEnumKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Keyword getGrammarElement() {
         return grammarAccess.getXOseeEnumOverrideAccess().getOverridesEnumKeyword_0();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            default:
               return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
         }
      }

   }

   // overridenEnumType=[XOseeEnumType|ENUM_TYPE_REFERENCE]
   protected class XOseeEnumOverride_OverridenEnumTypeAssignment_1 extends AssignmentToken {

      public XOseeEnumOverride_OverridenEnumTypeAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Assignment getGrammarElement() {
         return grammarAccess.getXOseeEnumOverrideAccess().getOverridenEnumTypeAssignment_1();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new XOseeEnumOverride_OverridesEnumKeyword_0(lastRuleCallOrigin, this, 0, inst);
            default:
               return null;
         }
      }

      @Override
      public IEObjectConsumer tryConsume() {
         if ((value = eObjectConsumer.getConsumable("overridenEnumType", true)) == null) {
            return null;
         }
         IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("overridenEnumType");
         if (value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
            IEObjectConsumer param = createEObjectConsumer((EObject) value);
            if (param.isInstanceOf(grammarAccess.getXOseeEnumOverrideAccess().getOverridenEnumTypeXOseeEnumTypeCrossReference_1_0().getType().getClassifier())) {
               type = AssignmentType.CROSS_REFERENCE;
               element =
                  grammarAccess.getXOseeEnumOverrideAccess().getOverridenEnumTypeXOseeEnumTypeCrossReference_1_0();
               return obj;
            }
         }
         return null;
      }

   }

   // "{"
   protected class XOseeEnumOverride_LeftCurlyBracketKeyword_2 extends KeywordToken {

      public XOseeEnumOverride_LeftCurlyBracketKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Keyword getGrammarElement() {
         return grammarAccess.getXOseeEnumOverrideAccess().getLeftCurlyBracketKeyword_2();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new XOseeEnumOverride_OverridenEnumTypeAssignment_1(lastRuleCallOrigin, this, 0, inst);
            default:
               return null;
         }
      }

   }

   // inheritAll?="inheritAll"?
   protected class XOseeEnumOverride_InheritAllAssignment_3 extends AssignmentToken {

      public XOseeEnumOverride_InheritAllAssignment_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Assignment getGrammarElement() {
         return grammarAccess.getXOseeEnumOverrideAccess().getInheritAllAssignment_3();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new XOseeEnumOverride_LeftCurlyBracketKeyword_2(lastRuleCallOrigin, this, 0, inst);
            default:
               return null;
         }
      }

      @Override
      public IEObjectConsumer tryConsume() {
         if ((value = eObjectConsumer.getConsumable("inheritAll", false)) == null) {
            return null;
         }
         IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("inheritAll");
         if (Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
            type = AssignmentType.KEYWORD;
            element = grammarAccess.getXOseeEnumOverrideAccess().getInheritAllInheritAllKeyword_3_0();
            return obj;
         }
         return null;
      }

   }

   // overrideOptions+=OverrideOption*
   protected class XOseeEnumOverride_OverrideOptionsAssignment_4 extends AssignmentToken {

      public XOseeEnumOverride_OverrideOptionsAssignment_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Assignment getGrammarElement() {
         return grammarAccess.getXOseeEnumOverrideAccess().getOverrideOptionsAssignment_4();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new OverrideOption_Alternatives(this, this, 0, inst);
            default:
               return null;
         }
      }

      @Override
      public IEObjectConsumer tryConsume() {
         if ((value = eObjectConsumer.getConsumable("overrideOptions", false)) == null) {
            return null;
         }
         IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("overrideOptions");
         if (value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
            IEObjectConsumer param = createEObjectConsumer((EObject) value);
            if (param.isInstanceOf(grammarAccess.getOverrideOptionRule().getType().getClassifier())) {
               type = AssignmentType.PARSER_RULE_CALL;
               element =
                  grammarAccess.getXOseeEnumOverrideAccess().getOverrideOptionsOverrideOptionParserRuleCall_4_0();
               consumed = obj;
               return param;
            }
         }
         return null;
      }

      @Override
      public AbstractToken createFollowerAfterReturn(AbstractToken next, int actIndex, int index, IEObjectConsumer inst) {
         if (value == inst.getEObject() && !inst.isConsumed()) {
            return null;
         }
         switch (index) {
            case 0:
               return new XOseeEnumOverride_OverrideOptionsAssignment_4(lastRuleCallOrigin, next, actIndex, consumed);
            case 1:
               return new XOseeEnumOverride_InheritAllAssignment_3(lastRuleCallOrigin, next, actIndex, consumed);
            case 2:
               return new XOseeEnumOverride_LeftCurlyBracketKeyword_2(lastRuleCallOrigin, next, actIndex, consumed);
            default:
               return null;
         }
      }
   }

   // "}"
   protected class XOseeEnumOverride_RightCurlyBracketKeyword_5 extends KeywordToken {

      public XOseeEnumOverride_RightCurlyBracketKeyword_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Keyword getGrammarElement() {
         return grammarAccess.getXOseeEnumOverrideAccess().getRightCurlyBracketKeyword_5();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new XOseeEnumOverride_OverrideOptionsAssignment_4(lastRuleCallOrigin, this, 0, inst);
            case 1:
               return new XOseeEnumOverride_InheritAllAssignment_3(lastRuleCallOrigin, this, 1, inst);
            case 2:
               return new XOseeEnumOverride_LeftCurlyBracketKeyword_2(lastRuleCallOrigin, this, 2, inst);
            default:
               return null;
         }
      }

   }

   /************ end Rule XOseeEnumOverride ****************/

   /************
    * begin Rule OverrideOption **************** OverrideOption: AddEnum | RemoveEnum;
    **/

   // AddEnum | RemoveEnum
   protected class OverrideOption_Alternatives extends AlternativesToken {

      public OverrideOption_Alternatives(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Alternatives getGrammarElement() {
         return grammarAccess.getOverrideOptionAccess().getAlternatives();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new OverrideOption_AddEnumParserRuleCall_0(lastRuleCallOrigin, this, 0, inst);
            case 1:
               return new OverrideOption_RemoveEnumParserRuleCall_1(lastRuleCallOrigin, this, 1, inst);
            default:
               return null;
         }
      }

      @Override
      public IEObjectConsumer tryConsume() {
         if (getEObject().eClass() != grammarAccess.getAddEnumRule().getType().getClassifier() && getEObject().eClass() != grammarAccess.getRemoveEnumRule().getType().getClassifier()) {
            return null;
         }
         return eObjectConsumer;
      }

   }

   // AddEnum
   protected class OverrideOption_AddEnumParserRuleCall_0 extends RuleCallToken {

      public OverrideOption_AddEnumParserRuleCall_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public RuleCall getGrammarElement() {
         return grammarAccess.getOverrideOptionAccess().getAddEnumParserRuleCall_0();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new AddEnum_Group(this, this, 0, inst);
            default:
               return null;
         }
      }

      @Override
      public IEObjectConsumer tryConsume() {
         if (getEObject().eClass() != grammarAccess.getAddEnumRule().getType().getClassifier()) {
            return null;
         }
         if (checkForRecursion(AddEnum_Group.class, eObjectConsumer)) {
            return null;
         }
         return eObjectConsumer;
      }

      @Override
      public AbstractToken createFollowerAfterReturn(AbstractToken next, int actIndex, int index, IEObjectConsumer inst) {
         switch (index) {
            default:
               return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex, index, inst);
         }
      }
   }

   // RemoveEnum
   protected class OverrideOption_RemoveEnumParserRuleCall_1 extends RuleCallToken {

      public OverrideOption_RemoveEnumParserRuleCall_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public RuleCall getGrammarElement() {
         return grammarAccess.getOverrideOptionAccess().getRemoveEnumParserRuleCall_1();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new RemoveEnum_Group(this, this, 0, inst);
            default:
               return null;
         }
      }

      @Override
      public IEObjectConsumer tryConsume() {
         if (getEObject().eClass() != grammarAccess.getRemoveEnumRule().getType().getClassifier()) {
            return null;
         }
         if (checkForRecursion(RemoveEnum_Group.class, eObjectConsumer)) {
            return null;
         }
         return eObjectConsumer;
      }

      @Override
      public AbstractToken createFollowerAfterReturn(AbstractToken next, int actIndex, int index, IEObjectConsumer inst) {
         switch (index) {
            default:
               return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex, index, inst);
         }
      }
   }

   /************ end Rule OverrideOption ****************/

   /************
    * begin Rule AddEnum **************** AddEnum: "add" enumEntry=ENUM_ENTRY_TYPE_REFERENCE ordinal=WHOLE_NUM_STR?
    * ("entryGuid" entryGuid=STRING)?;
    **/

   // "add" enumEntry=ENUM_ENTRY_TYPE_REFERENCE ordinal=WHOLE_NUM_STR? ("entryGuid" entryGuid=STRING)?
   protected class AddEnum_Group extends GroupToken {

      public AddEnum_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Group getGrammarElement() {
         return grammarAccess.getAddEnumAccess().getGroup();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new AddEnum_Group_3(lastRuleCallOrigin, this, 0, inst);
            case 1:
               return new AddEnum_OrdinalAssignment_2(lastRuleCallOrigin, this, 1, inst);
            case 2:
               return new AddEnum_EnumEntryAssignment_1(lastRuleCallOrigin, this, 2, inst);
            default:
               return null;
         }
      }

      @Override
      public IEObjectConsumer tryConsume() {
         if (getEObject().eClass() != grammarAccess.getAddEnumRule().getType().getClassifier()) {
            return null;
         }
         return eObjectConsumer;
      }

   }

   // "add"
   protected class AddEnum_AddKeyword_0 extends KeywordToken {

      public AddEnum_AddKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Keyword getGrammarElement() {
         return grammarAccess.getAddEnumAccess().getAddKeyword_0();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            default:
               return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
         }
      }

   }

   // enumEntry=ENUM_ENTRY_TYPE_REFERENCE
   protected class AddEnum_EnumEntryAssignment_1 extends AssignmentToken {

      public AddEnum_EnumEntryAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Assignment getGrammarElement() {
         return grammarAccess.getAddEnumAccess().getEnumEntryAssignment_1();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new AddEnum_AddKeyword_0(lastRuleCallOrigin, this, 0, inst);
            default:
               return null;
         }
      }

      @Override
      public IEObjectConsumer tryConsume() {
         if ((value = eObjectConsumer.getConsumable("enumEntry", true)) == null) {
            return null;
         }
         IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("enumEntry");
         if (valueSerializer.isValid(obj.getEObject(),
            grammarAccess.getAddEnumAccess().getEnumEntryENUM_ENTRY_TYPE_REFERENCEParserRuleCall_1_0(), value, null)) {
            type = AssignmentType.DATATYPE_RULE_CALL;
            element = grammarAccess.getAddEnumAccess().getEnumEntryENUM_ENTRY_TYPE_REFERENCEParserRuleCall_1_0();
            return obj;
         }
         return null;
      }

   }

   // ordinal=WHOLE_NUM_STR?
   protected class AddEnum_OrdinalAssignment_2 extends AssignmentToken {

      public AddEnum_OrdinalAssignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Assignment getGrammarElement() {
         return grammarAccess.getAddEnumAccess().getOrdinalAssignment_2();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new AddEnum_EnumEntryAssignment_1(lastRuleCallOrigin, this, 0, inst);
            default:
               return null;
         }
      }

      @Override
      public IEObjectConsumer tryConsume() {
         if ((value = eObjectConsumer.getConsumable("ordinal", false)) == null) {
            return null;
         }
         IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ordinal");
         if (valueSerializer.isValid(obj.getEObject(),
            grammarAccess.getAddEnumAccess().getOrdinalWHOLE_NUM_STRTerminalRuleCall_2_0(), value, null)) {
            type = AssignmentType.TERMINAL_RULE_CALL;
            element = grammarAccess.getAddEnumAccess().getOrdinalWHOLE_NUM_STRTerminalRuleCall_2_0();
            return obj;
         }
         return null;
      }

   }

   // ("entryGuid" entryGuid=STRING)?
   protected class AddEnum_Group_3 extends GroupToken {

      public AddEnum_Group_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Group getGrammarElement() {
         return grammarAccess.getAddEnumAccess().getGroup_3();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new AddEnum_EntryGuidAssignment_3_1(lastRuleCallOrigin, this, 0, inst);
            default:
               return null;
         }
      }

   }

   // "entryGuid"
   protected class AddEnum_EntryGuidKeyword_3_0 extends KeywordToken {

      public AddEnum_EntryGuidKeyword_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Keyword getGrammarElement() {
         return grammarAccess.getAddEnumAccess().getEntryGuidKeyword_3_0();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new AddEnum_OrdinalAssignment_2(lastRuleCallOrigin, this, 0, inst);
            case 1:
               return new AddEnum_EnumEntryAssignment_1(lastRuleCallOrigin, this, 1, inst);
            default:
               return null;
         }
      }

   }

   // entryGuid=STRING
   protected class AddEnum_EntryGuidAssignment_3_1 extends AssignmentToken {

      public AddEnum_EntryGuidAssignment_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Assignment getGrammarElement() {
         return grammarAccess.getAddEnumAccess().getEntryGuidAssignment_3_1();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new AddEnum_EntryGuidKeyword_3_0(lastRuleCallOrigin, this, 0, inst);
            default:
               return null;
         }
      }

      @Override
      public IEObjectConsumer tryConsume() {
         if ((value = eObjectConsumer.getConsumable("entryGuid", false)) == null) {
            return null;
         }
         IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("entryGuid");
         if (valueSerializer.isValid(obj.getEObject(),
            grammarAccess.getAddEnumAccess().getEntryGuidSTRINGTerminalRuleCall_3_1_0(), value, null)) {
            type = AssignmentType.TERMINAL_RULE_CALL;
            element = grammarAccess.getAddEnumAccess().getEntryGuidSTRINGTerminalRuleCall_3_1_0();
            return obj;
         }
         return null;
      }

   }

   /************ end Rule AddEnum ****************/

   /************
    * begin Rule RemoveEnum **************** RemoveEnum: "remove" enumEntry=[XOseeEnumEntry|ENUM_ENTRY_TYPE_REFERENCE];
    **/

   // "remove" enumEntry=[XOseeEnumEntry|ENUM_ENTRY_TYPE_REFERENCE]
   protected class RemoveEnum_Group extends GroupToken {

      public RemoveEnum_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Group getGrammarElement() {
         return grammarAccess.getRemoveEnumAccess().getGroup();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new RemoveEnum_EnumEntryAssignment_1(lastRuleCallOrigin, this, 0, inst);
            default:
               return null;
         }
      }

      @Override
      public IEObjectConsumer tryConsume() {
         if (getEObject().eClass() != grammarAccess.getRemoveEnumRule().getType().getClassifier()) {
            return null;
         }
         return eObjectConsumer;
      }

   }

   // "remove"
   protected class RemoveEnum_RemoveKeyword_0 extends KeywordToken {

      public RemoveEnum_RemoveKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Keyword getGrammarElement() {
         return grammarAccess.getRemoveEnumAccess().getRemoveKeyword_0();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            default:
               return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
         }
      }

   }

   // enumEntry=[XOseeEnumEntry|ENUM_ENTRY_TYPE_REFERENCE]
   protected class RemoveEnum_EnumEntryAssignment_1 extends AssignmentToken {

      public RemoveEnum_EnumEntryAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Assignment getGrammarElement() {
         return grammarAccess.getRemoveEnumAccess().getEnumEntryAssignment_1();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new RemoveEnum_RemoveKeyword_0(lastRuleCallOrigin, this, 0, inst);
            default:
               return null;
         }
      }

      @Override
      public IEObjectConsumer tryConsume() {
         if ((value = eObjectConsumer.getConsumable("enumEntry", true)) == null) {
            return null;
         }
         IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("enumEntry");
         if (value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
            IEObjectConsumer param = createEObjectConsumer((EObject) value);
            if (param.isInstanceOf(grammarAccess.getRemoveEnumAccess().getEnumEntryXOseeEnumEntryCrossReference_1_0().getType().getClassifier())) {
               type = AssignmentType.CROSS_REFERENCE;
               element = grammarAccess.getRemoveEnumAccess().getEnumEntryXOseeEnumEntryCrossReference_1_0();
               return obj;
            }
         }
         return null;
      }

   }

   /************ end Rule RemoveEnum ****************/

   /************
    * begin Rule XRelationType **************** XRelationType: "relationType" name=RELATION_TYPE_REFERENCE "{" "guid"
    * typeGuid=STRING "sideAName" sideAName=STRING "sideAArtifactType"
    * sideAArtifactType=[XArtifactType|ARTIFACT_TYPE_REFERENCE] "sideBName" sideBName=STRING "sideBArtifactType"
    * sideBArtifactType=[XArtifactType|ARTIFACT_TYPE_REFERENCE] "defaultOrderType" defaultOrderType=RelationOrderType
    * "multiplicity" multiplicity=RelationMultiplicityEnum "}";
    **/

   // "relationType" name=RELATION_TYPE_REFERENCE "{" "guid" typeGuid=STRING "sideAName" sideAName=STRING "sideAArtifactType"
   // sideAArtifactType=[XArtifactType|ARTIFACT_TYPE_REFERENCE] "sideBName" sideBName=STRING "sideBArtifactType"
   // sideBArtifactType=[XArtifactType|ARTIFACT_TYPE_REFERENCE] "defaultOrderType" defaultOrderType=RelationOrderType
   // "multiplicity" multiplicity=RelationMultiplicityEnum "}"
   protected class XRelationType_Group extends GroupToken {

      public XRelationType_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Group getGrammarElement() {
         return grammarAccess.getXRelationTypeAccess().getGroup();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new XRelationType_RightCurlyBracketKeyword_17(lastRuleCallOrigin, this, 0, inst);
            default:
               return null;
         }
      }

      @Override
      public IEObjectConsumer tryConsume() {
         if (getEObject().eClass() != grammarAccess.getXRelationTypeRule().getType().getClassifier()) {
            return null;
         }
         return eObjectConsumer;
      }

   }

   // "relationType"
   protected class XRelationType_RelationTypeKeyword_0 extends KeywordToken {

      public XRelationType_RelationTypeKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Keyword getGrammarElement() {
         return grammarAccess.getXRelationTypeAccess().getRelationTypeKeyword_0();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            default:
               return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
         }
      }

   }

   // name=RELATION_TYPE_REFERENCE
   protected class XRelationType_NameAssignment_1 extends AssignmentToken {

      public XRelationType_NameAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Assignment getGrammarElement() {
         return grammarAccess.getXRelationTypeAccess().getNameAssignment_1();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new XRelationType_RelationTypeKeyword_0(lastRuleCallOrigin, this, 0, inst);
            default:
               return null;
         }
      }

      @Override
      public IEObjectConsumer tryConsume() {
         if ((value = eObjectConsumer.getConsumable("name", true)) == null) {
            return null;
         }
         IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
         if (valueSerializer.isValid(obj.getEObject(),
            grammarAccess.getXRelationTypeAccess().getNameRELATION_TYPE_REFERENCEParserRuleCall_1_0(), value, null)) {
            type = AssignmentType.DATATYPE_RULE_CALL;
            element = grammarAccess.getXRelationTypeAccess().getNameRELATION_TYPE_REFERENCEParserRuleCall_1_0();
            return obj;
         }
         return null;
      }

   }

   // "{"
   protected class XRelationType_LeftCurlyBracketKeyword_2 extends KeywordToken {

      public XRelationType_LeftCurlyBracketKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Keyword getGrammarElement() {
         return grammarAccess.getXRelationTypeAccess().getLeftCurlyBracketKeyword_2();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new XRelationType_NameAssignment_1(lastRuleCallOrigin, this, 0, inst);
            default:
               return null;
         }
      }

   }

   // "guid"
   protected class XRelationType_GuidKeyword_3 extends KeywordToken {

      public XRelationType_GuidKeyword_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Keyword getGrammarElement() {
         return grammarAccess.getXRelationTypeAccess().getGuidKeyword_3();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new XRelationType_LeftCurlyBracketKeyword_2(lastRuleCallOrigin, this, 0, inst);
            default:
               return null;
         }
      }

   }

   // typeGuid=STRING
   protected class XRelationType_TypeGuidAssignment_4 extends AssignmentToken {

      public XRelationType_TypeGuidAssignment_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Assignment getGrammarElement() {
         return grammarAccess.getXRelationTypeAccess().getTypeGuidAssignment_4();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new XRelationType_GuidKeyword_3(lastRuleCallOrigin, this, 0, inst);
            default:
               return null;
         }
      }

      @Override
      public IEObjectConsumer tryConsume() {
         if ((value = eObjectConsumer.getConsumable("typeGuid", true)) == null) {
            return null;
         }
         IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("typeGuid");
         if (valueSerializer.isValid(obj.getEObject(),
            grammarAccess.getXRelationTypeAccess().getTypeGuidSTRINGTerminalRuleCall_4_0(), value, null)) {
            type = AssignmentType.TERMINAL_RULE_CALL;
            element = grammarAccess.getXRelationTypeAccess().getTypeGuidSTRINGTerminalRuleCall_4_0();
            return obj;
         }
         return null;
      }

   }

   // "sideAName"
   protected class XRelationType_SideANameKeyword_5 extends KeywordToken {

      public XRelationType_SideANameKeyword_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Keyword getGrammarElement() {
         return grammarAccess.getXRelationTypeAccess().getSideANameKeyword_5();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new XRelationType_TypeGuidAssignment_4(lastRuleCallOrigin, this, 0, inst);
            default:
               return null;
         }
      }

   }

   // sideAName=STRING
   protected class XRelationType_SideANameAssignment_6 extends AssignmentToken {

      public XRelationType_SideANameAssignment_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Assignment getGrammarElement() {
         return grammarAccess.getXRelationTypeAccess().getSideANameAssignment_6();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new XRelationType_SideANameKeyword_5(lastRuleCallOrigin, this, 0, inst);
            default:
               return null;
         }
      }

      @Override
      public IEObjectConsumer tryConsume() {
         if ((value = eObjectConsumer.getConsumable("sideAName", true)) == null) {
            return null;
         }
         IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("sideAName");
         if (valueSerializer.isValid(obj.getEObject(),
            grammarAccess.getXRelationTypeAccess().getSideANameSTRINGTerminalRuleCall_6_0(), value, null)) {
            type = AssignmentType.TERMINAL_RULE_CALL;
            element = grammarAccess.getXRelationTypeAccess().getSideANameSTRINGTerminalRuleCall_6_0();
            return obj;
         }
         return null;
      }

   }

   // "sideAArtifactType"
   protected class XRelationType_SideAArtifactTypeKeyword_7 extends KeywordToken {

      public XRelationType_SideAArtifactTypeKeyword_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Keyword getGrammarElement() {
         return grammarAccess.getXRelationTypeAccess().getSideAArtifactTypeKeyword_7();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new XRelationType_SideANameAssignment_6(lastRuleCallOrigin, this, 0, inst);
            default:
               return null;
         }
      }

   }

   // sideAArtifactType=[XArtifactType|ARTIFACT_TYPE_REFERENCE]
   protected class XRelationType_SideAArtifactTypeAssignment_8 extends AssignmentToken {

      public XRelationType_SideAArtifactTypeAssignment_8(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Assignment getGrammarElement() {
         return grammarAccess.getXRelationTypeAccess().getSideAArtifactTypeAssignment_8();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new XRelationType_SideAArtifactTypeKeyword_7(lastRuleCallOrigin, this, 0, inst);
            default:
               return null;
         }
      }

      @Override
      public IEObjectConsumer tryConsume() {
         if ((value = eObjectConsumer.getConsumable("sideAArtifactType", true)) == null) {
            return null;
         }
         IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("sideAArtifactType");
         if (value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
            IEObjectConsumer param = createEObjectConsumer((EObject) value);
            if (param.isInstanceOf(grammarAccess.getXRelationTypeAccess().getSideAArtifactTypeXArtifactTypeCrossReference_8_0().getType().getClassifier())) {
               type = AssignmentType.CROSS_REFERENCE;
               element = grammarAccess.getXRelationTypeAccess().getSideAArtifactTypeXArtifactTypeCrossReference_8_0();
               return obj;
            }
         }
         return null;
      }

   }

   // "sideBName"
   protected class XRelationType_SideBNameKeyword_9 extends KeywordToken {

      public XRelationType_SideBNameKeyword_9(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Keyword getGrammarElement() {
         return grammarAccess.getXRelationTypeAccess().getSideBNameKeyword_9();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new XRelationType_SideAArtifactTypeAssignment_8(lastRuleCallOrigin, this, 0, inst);
            default:
               return null;
         }
      }

   }

   // sideBName=STRING
   protected class XRelationType_SideBNameAssignment_10 extends AssignmentToken {

      public XRelationType_SideBNameAssignment_10(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Assignment getGrammarElement() {
         return grammarAccess.getXRelationTypeAccess().getSideBNameAssignment_10();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new XRelationType_SideBNameKeyword_9(lastRuleCallOrigin, this, 0, inst);
            default:
               return null;
         }
      }

      @Override
      public IEObjectConsumer tryConsume() {
         if ((value = eObjectConsumer.getConsumable("sideBName", true)) == null) {
            return null;
         }
         IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("sideBName");
         if (valueSerializer.isValid(obj.getEObject(),
            grammarAccess.getXRelationTypeAccess().getSideBNameSTRINGTerminalRuleCall_10_0(), value, null)) {
            type = AssignmentType.TERMINAL_RULE_CALL;
            element = grammarAccess.getXRelationTypeAccess().getSideBNameSTRINGTerminalRuleCall_10_0();
            return obj;
         }
         return null;
      }

   }

   // "sideBArtifactType"
   protected class XRelationType_SideBArtifactTypeKeyword_11 extends KeywordToken {

      public XRelationType_SideBArtifactTypeKeyword_11(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Keyword getGrammarElement() {
         return grammarAccess.getXRelationTypeAccess().getSideBArtifactTypeKeyword_11();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new XRelationType_SideBNameAssignment_10(lastRuleCallOrigin, this, 0, inst);
            default:
               return null;
         }
      }

   }

   // sideBArtifactType=[XArtifactType|ARTIFACT_TYPE_REFERENCE]
   protected class XRelationType_SideBArtifactTypeAssignment_12 extends AssignmentToken {

      public XRelationType_SideBArtifactTypeAssignment_12(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Assignment getGrammarElement() {
         return grammarAccess.getXRelationTypeAccess().getSideBArtifactTypeAssignment_12();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new XRelationType_SideBArtifactTypeKeyword_11(lastRuleCallOrigin, this, 0, inst);
            default:
               return null;
         }
      }

      @Override
      public IEObjectConsumer tryConsume() {
         if ((value = eObjectConsumer.getConsumable("sideBArtifactType", true)) == null) {
            return null;
         }
         IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("sideBArtifactType");
         if (value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
            IEObjectConsumer param = createEObjectConsumer((EObject) value);
            if (param.isInstanceOf(grammarAccess.getXRelationTypeAccess().getSideBArtifactTypeXArtifactTypeCrossReference_12_0().getType().getClassifier())) {
               type = AssignmentType.CROSS_REFERENCE;
               element = grammarAccess.getXRelationTypeAccess().getSideBArtifactTypeXArtifactTypeCrossReference_12_0();
               return obj;
            }
         }
         return null;
      }

   }

   // "defaultOrderType"
   protected class XRelationType_DefaultOrderTypeKeyword_13 extends KeywordToken {

      public XRelationType_DefaultOrderTypeKeyword_13(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Keyword getGrammarElement() {
         return grammarAccess.getXRelationTypeAccess().getDefaultOrderTypeKeyword_13();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new XRelationType_SideBArtifactTypeAssignment_12(lastRuleCallOrigin, this, 0, inst);
            default:
               return null;
         }
      }

   }

   // defaultOrderType=RelationOrderType
   protected class XRelationType_DefaultOrderTypeAssignment_14 extends AssignmentToken {

      public XRelationType_DefaultOrderTypeAssignment_14(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Assignment getGrammarElement() {
         return grammarAccess.getXRelationTypeAccess().getDefaultOrderTypeAssignment_14();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new XRelationType_DefaultOrderTypeKeyword_13(lastRuleCallOrigin, this, 0, inst);
            default:
               return null;
         }
      }

      @Override
      public IEObjectConsumer tryConsume() {
         if ((value = eObjectConsumer.getConsumable("defaultOrderType", true)) == null) {
            return null;
         }
         IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("defaultOrderType");
         if (valueSerializer.isValid(obj.getEObject(),
            grammarAccess.getXRelationTypeAccess().getDefaultOrderTypeRelationOrderTypeParserRuleCall_14_0(), value,
            null)) {
            type = AssignmentType.DATATYPE_RULE_CALL;
            element = grammarAccess.getXRelationTypeAccess().getDefaultOrderTypeRelationOrderTypeParserRuleCall_14_0();
            return obj;
         }
         return null;
      }

   }

   // "multiplicity"
   protected class XRelationType_MultiplicityKeyword_15 extends KeywordToken {

      public XRelationType_MultiplicityKeyword_15(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Keyword getGrammarElement() {
         return grammarAccess.getXRelationTypeAccess().getMultiplicityKeyword_15();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new XRelationType_DefaultOrderTypeAssignment_14(lastRuleCallOrigin, this, 0, inst);
            default:
               return null;
         }
      }

   }

   // multiplicity=RelationMultiplicityEnum
   protected class XRelationType_MultiplicityAssignment_16 extends AssignmentToken {

      public XRelationType_MultiplicityAssignment_16(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Assignment getGrammarElement() {
         return grammarAccess.getXRelationTypeAccess().getMultiplicityAssignment_16();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new XRelationType_MultiplicityKeyword_15(lastRuleCallOrigin, this, 0, inst);
            default:
               return null;
         }
      }

      @Override
      public IEObjectConsumer tryConsume() {
         if ((value = eObjectConsumer.getConsumable("multiplicity", true)) == null) {
            return null;
         }
         IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("multiplicity");
         if (enumLitSerializer.isValid(obj.getEObject(),
            grammarAccess.getXRelationTypeAccess().getMultiplicityRelationMultiplicityEnumEnumRuleCall_16_0(), value,
            null)) {
            type = AssignmentType.ENUM_RULE_CALL;
            element = grammarAccess.getXRelationTypeAccess().getMultiplicityRelationMultiplicityEnumEnumRuleCall_16_0();
            return obj;
         }
         return null;
      }

   }

   // "}"
   protected class XRelationType_RightCurlyBracketKeyword_17 extends KeywordToken {

      public XRelationType_RightCurlyBracketKeyword_17(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Keyword getGrammarElement() {
         return grammarAccess.getXRelationTypeAccess().getRightCurlyBracketKeyword_17();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new XRelationType_MultiplicityAssignment_16(lastRuleCallOrigin, this, 0, inst);
            default:
               return null;
         }
      }

   }

   /************ end Rule XRelationType ****************/

   /************
    * begin Rule XArtifactRef **************** XArtifactRef: "artifact" name=ARTIFACT_INSTANCE_REFERENCE "artGuid"
    * guid=STRING ";";
    **/

   // "artifact" name=ARTIFACT_INSTANCE_REFERENCE "artGuid" guid=STRING ";"
   protected class XArtifactRef_Group extends GroupToken {

      public XArtifactRef_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Group getGrammarElement() {
         return grammarAccess.getXArtifactRefAccess().getGroup();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new XArtifactRef_SemicolonKeyword_4(lastRuleCallOrigin, this, 0, inst);
            default:
               return null;
         }
      }

      @Override
      public IEObjectConsumer tryConsume() {
         if (getEObject().eClass() != grammarAccess.getXArtifactRefRule().getType().getClassifier()) {
            return null;
         }
         return eObjectConsumer;
      }

   }

   // "artifact"
   protected class XArtifactRef_ArtifactKeyword_0 extends KeywordToken {

      public XArtifactRef_ArtifactKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Keyword getGrammarElement() {
         return grammarAccess.getXArtifactRefAccess().getArtifactKeyword_0();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            default:
               return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
         }
      }

   }

   // name=ARTIFACT_INSTANCE_REFERENCE
   protected class XArtifactRef_NameAssignment_1 extends AssignmentToken {

      public XArtifactRef_NameAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Assignment getGrammarElement() {
         return grammarAccess.getXArtifactRefAccess().getNameAssignment_1();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new XArtifactRef_ArtifactKeyword_0(lastRuleCallOrigin, this, 0, inst);
            default:
               return null;
         }
      }

      @Override
      public IEObjectConsumer tryConsume() {
         if ((value = eObjectConsumer.getConsumable("name", true)) == null) {
            return null;
         }
         IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
         if (valueSerializer.isValid(obj.getEObject(),
            grammarAccess.getXArtifactRefAccess().getNameARTIFACT_INSTANCE_REFERENCEParserRuleCall_1_0(), value, null)) {
            type = AssignmentType.DATATYPE_RULE_CALL;
            element = grammarAccess.getXArtifactRefAccess().getNameARTIFACT_INSTANCE_REFERENCEParserRuleCall_1_0();
            return obj;
         }
         return null;
      }

   }

   // "artGuid"
   protected class XArtifactRef_ArtGuidKeyword_2 extends KeywordToken {

      public XArtifactRef_ArtGuidKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Keyword getGrammarElement() {
         return grammarAccess.getXArtifactRefAccess().getArtGuidKeyword_2();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new XArtifactRef_NameAssignment_1(lastRuleCallOrigin, this, 0, inst);
            default:
               return null;
         }
      }

   }

   // guid=STRING
   protected class XArtifactRef_GuidAssignment_3 extends AssignmentToken {

      public XArtifactRef_GuidAssignment_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Assignment getGrammarElement() {
         return grammarAccess.getXArtifactRefAccess().getGuidAssignment_3();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new XArtifactRef_ArtGuidKeyword_2(lastRuleCallOrigin, this, 0, inst);
            default:
               return null;
         }
      }

      @Override
      public IEObjectConsumer tryConsume() {
         if ((value = eObjectConsumer.getConsumable("guid", true)) == null) {
            return null;
         }
         IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("guid");
         if (valueSerializer.isValid(obj.getEObject(),
            grammarAccess.getXArtifactRefAccess().getGuidSTRINGTerminalRuleCall_3_0(), value, null)) {
            type = AssignmentType.TERMINAL_RULE_CALL;
            element = grammarAccess.getXArtifactRefAccess().getGuidSTRINGTerminalRuleCall_3_0();
            return obj;
         }
         return null;
      }

   }

   // ";"
   protected class XArtifactRef_SemicolonKeyword_4 extends KeywordToken {

      public XArtifactRef_SemicolonKeyword_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Keyword getGrammarElement() {
         return grammarAccess.getXArtifactRefAccess().getSemicolonKeyword_4();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new XArtifactRef_GuidAssignment_3(lastRuleCallOrigin, this, 0, inst);
            default:
               return null;
         }
      }

   }

   /************ end Rule XArtifactRef ****************/

   /************
    * begin Rule XBranchRef **************** XBranchRef: "branch" name=BRANCH_INSTANCE_REFERENCE "branchGuid"
    * guid=STRING ";";
    **/

   // "branch" name=BRANCH_INSTANCE_REFERENCE "branchGuid" guid=STRING ";"
   protected class XBranchRef_Group extends GroupToken {

      public XBranchRef_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Group getGrammarElement() {
         return grammarAccess.getXBranchRefAccess().getGroup();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new XBranchRef_SemicolonKeyword_4(lastRuleCallOrigin, this, 0, inst);
            default:
               return null;
         }
      }

      @Override
      public IEObjectConsumer tryConsume() {
         if (getEObject().eClass() != grammarAccess.getXBranchRefRule().getType().getClassifier()) {
            return null;
         }
         return eObjectConsumer;
      }

   }

   // "branch"
   protected class XBranchRef_BranchKeyword_0 extends KeywordToken {

      public XBranchRef_BranchKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Keyword getGrammarElement() {
         return grammarAccess.getXBranchRefAccess().getBranchKeyword_0();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            default:
               return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
         }
      }

   }

   // name=BRANCH_INSTANCE_REFERENCE
   protected class XBranchRef_NameAssignment_1 extends AssignmentToken {

      public XBranchRef_NameAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Assignment getGrammarElement() {
         return grammarAccess.getXBranchRefAccess().getNameAssignment_1();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new XBranchRef_BranchKeyword_0(lastRuleCallOrigin, this, 0, inst);
            default:
               return null;
         }
      }

      @Override
      public IEObjectConsumer tryConsume() {
         if ((value = eObjectConsumer.getConsumable("name", true)) == null) {
            return null;
         }
         IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
         if (valueSerializer.isValid(obj.getEObject(),
            grammarAccess.getXBranchRefAccess().getNameBRANCH_INSTANCE_REFERENCEParserRuleCall_1_0(), value, null)) {
            type = AssignmentType.DATATYPE_RULE_CALL;
            element = grammarAccess.getXBranchRefAccess().getNameBRANCH_INSTANCE_REFERENCEParserRuleCall_1_0();
            return obj;
         }
         return null;
      }

   }

   // "branchGuid"
   protected class XBranchRef_BranchGuidKeyword_2 extends KeywordToken {

      public XBranchRef_BranchGuidKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Keyword getGrammarElement() {
         return grammarAccess.getXBranchRefAccess().getBranchGuidKeyword_2();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new XBranchRef_NameAssignment_1(lastRuleCallOrigin, this, 0, inst);
            default:
               return null;
         }
      }

   }

   // guid=STRING
   protected class XBranchRef_GuidAssignment_3 extends AssignmentToken {

      public XBranchRef_GuidAssignment_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Assignment getGrammarElement() {
         return grammarAccess.getXBranchRefAccess().getGuidAssignment_3();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new XBranchRef_BranchGuidKeyword_2(lastRuleCallOrigin, this, 0, inst);
            default:
               return null;
         }
      }

      @Override
      public IEObjectConsumer tryConsume() {
         if ((value = eObjectConsumer.getConsumable("guid", true)) == null) {
            return null;
         }
         IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("guid");
         if (valueSerializer.isValid(obj.getEObject(),
            grammarAccess.getXBranchRefAccess().getGuidSTRINGTerminalRuleCall_3_0(), value, null)) {
            type = AssignmentType.TERMINAL_RULE_CALL;
            element = grammarAccess.getXBranchRefAccess().getGuidSTRINGTerminalRuleCall_3_0();
            return obj;
         }
         return null;
      }

   }

   // ";"
   protected class XBranchRef_SemicolonKeyword_4 extends KeywordToken {

      public XBranchRef_SemicolonKeyword_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Keyword getGrammarElement() {
         return grammarAccess.getXBranchRefAccess().getSemicolonKeyword_4();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new XBranchRef_GuidAssignment_3(lastRuleCallOrigin, this, 0, inst);
            default:
               return null;
         }
      }

   }

   /************ end Rule XBranchRef ****************/

   /************
    * begin Rule AccessContext **************** AccessContext: "accessContext" name=ACCESS_CONTEXT_TYPE_REFRENCE
    * ("extends" superAccessContexts+=[AccessContext|ACCESS_CONTEXT_TYPE_REFRENCE] (","
    * superAccessContexts+=[AccessContext|ACCESS_CONTEXT_TYPE_REFRENCE])*)? "{" "guid" guid=STRING ";"
    * (accessRules+=ObjectRestriction | hierarchyRestrictions+=HierarchyRestriction)+ "}";
    **/

   // "accessContext" name=ACCESS_CONTEXT_TYPE_REFRENCE ("extends"
   // superAccessContexts+=[AccessContext|ACCESS_CONTEXT_TYPE_REFRENCE] (","
   // superAccessContexts+=[AccessContext|ACCESS_CONTEXT_TYPE_REFRENCE])*)? "{" "guid" guid=STRING ";"
   // (accessRules+=ObjectRestriction | hierarchyRestrictions+=HierarchyRestriction)+ "}"
   protected class AccessContext_Group extends GroupToken {

      public AccessContext_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Group getGrammarElement() {
         return grammarAccess.getAccessContextAccess().getGroup();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new AccessContext_RightCurlyBracketKeyword_8(lastRuleCallOrigin, this, 0, inst);
            default:
               return null;
         }
      }

      @Override
      public IEObjectConsumer tryConsume() {
         if (getEObject().eClass() != grammarAccess.getAccessContextRule().getType().getClassifier()) {
            return null;
         }
         return eObjectConsumer;
      }

   }

   // "accessContext"
   protected class AccessContext_AccessContextKeyword_0 extends KeywordToken {

      public AccessContext_AccessContextKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Keyword getGrammarElement() {
         return grammarAccess.getAccessContextAccess().getAccessContextKeyword_0();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            default:
               return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
         }
      }

   }

   // name=ACCESS_CONTEXT_TYPE_REFRENCE
   protected class AccessContext_NameAssignment_1 extends AssignmentToken {

      public AccessContext_NameAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Assignment getGrammarElement() {
         return grammarAccess.getAccessContextAccess().getNameAssignment_1();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new AccessContext_AccessContextKeyword_0(lastRuleCallOrigin, this, 0, inst);
            default:
               return null;
         }
      }

      @Override
      public IEObjectConsumer tryConsume() {
         if ((value = eObjectConsumer.getConsumable("name", true)) == null) {
            return null;
         }
         IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
         if (valueSerializer.isValid(obj.getEObject(),
            grammarAccess.getAccessContextAccess().getNameACCESS_CONTEXT_TYPE_REFRENCEParserRuleCall_1_0(), value, null)) {
            type = AssignmentType.DATATYPE_RULE_CALL;
            element = grammarAccess.getAccessContextAccess().getNameACCESS_CONTEXT_TYPE_REFRENCEParserRuleCall_1_0();
            return obj;
         }
         return null;
      }

   }

   // ("extends" superAccessContexts+=[AccessContext|ACCESS_CONTEXT_TYPE_REFRENCE] (","
   // superAccessContexts+=[AccessContext|ACCESS_CONTEXT_TYPE_REFRENCE])*)?
   protected class AccessContext_Group_2 extends GroupToken {

      public AccessContext_Group_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Group getGrammarElement() {
         return grammarAccess.getAccessContextAccess().getGroup_2();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new AccessContext_Group_2_2(lastRuleCallOrigin, this, 0, inst);
            case 1:
               return new AccessContext_SuperAccessContextsAssignment_2_1(lastRuleCallOrigin, this, 1, inst);
            default:
               return null;
         }
      }

   }

   // "extends"
   protected class AccessContext_ExtendsKeyword_2_0 extends KeywordToken {

      public AccessContext_ExtendsKeyword_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Keyword getGrammarElement() {
         return grammarAccess.getAccessContextAccess().getExtendsKeyword_2_0();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new AccessContext_NameAssignment_1(lastRuleCallOrigin, this, 0, inst);
            default:
               return null;
         }
      }

   }

   // superAccessContexts+=[AccessContext|ACCESS_CONTEXT_TYPE_REFRENCE]
   protected class AccessContext_SuperAccessContextsAssignment_2_1 extends AssignmentToken {

      public AccessContext_SuperAccessContextsAssignment_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Assignment getGrammarElement() {
         return grammarAccess.getAccessContextAccess().getSuperAccessContextsAssignment_2_1();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new AccessContext_ExtendsKeyword_2_0(lastRuleCallOrigin, this, 0, inst);
            default:
               return null;
         }
      }

      @Override
      public IEObjectConsumer tryConsume() {
         if ((value = eObjectConsumer.getConsumable("superAccessContexts", true)) == null) {
            return null;
         }
         IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("superAccessContexts");
         if (value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
            IEObjectConsumer param = createEObjectConsumer((EObject) value);
            if (param.isInstanceOf(grammarAccess.getAccessContextAccess().getSuperAccessContextsAccessContextCrossReference_2_1_0().getType().getClassifier())) {
               type = AssignmentType.CROSS_REFERENCE;
               element =
                  grammarAccess.getAccessContextAccess().getSuperAccessContextsAccessContextCrossReference_2_1_0();
               return obj;
            }
         }
         return null;
      }

   }

   // ("," superAccessContexts+=[AccessContext|ACCESS_CONTEXT_TYPE_REFRENCE])*
   protected class AccessContext_Group_2_2 extends GroupToken {

      public AccessContext_Group_2_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Group getGrammarElement() {
         return grammarAccess.getAccessContextAccess().getGroup_2_2();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new AccessContext_SuperAccessContextsAssignment_2_2_1(lastRuleCallOrigin, this, 0, inst);
            default:
               return null;
         }
      }

   }

   // ","
   protected class AccessContext_CommaKeyword_2_2_0 extends KeywordToken {

      public AccessContext_CommaKeyword_2_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Keyword getGrammarElement() {
         return grammarAccess.getAccessContextAccess().getCommaKeyword_2_2_0();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new AccessContext_Group_2_2(lastRuleCallOrigin, this, 0, inst);
            case 1:
               return new AccessContext_SuperAccessContextsAssignment_2_1(lastRuleCallOrigin, this, 1, inst);
            default:
               return null;
         }
      }

   }

   // superAccessContexts+=[AccessContext|ACCESS_CONTEXT_TYPE_REFRENCE]
   protected class AccessContext_SuperAccessContextsAssignment_2_2_1 extends AssignmentToken {

      public AccessContext_SuperAccessContextsAssignment_2_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Assignment getGrammarElement() {
         return grammarAccess.getAccessContextAccess().getSuperAccessContextsAssignment_2_2_1();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new AccessContext_CommaKeyword_2_2_0(lastRuleCallOrigin, this, 0, inst);
            default:
               return null;
         }
      }

      @Override
      public IEObjectConsumer tryConsume() {
         if ((value = eObjectConsumer.getConsumable("superAccessContexts", false)) == null) {
            return null;
         }
         IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("superAccessContexts");
         if (value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
            IEObjectConsumer param = createEObjectConsumer((EObject) value);
            if (param.isInstanceOf(grammarAccess.getAccessContextAccess().getSuperAccessContextsAccessContextCrossReference_2_2_1_0().getType().getClassifier())) {
               type = AssignmentType.CROSS_REFERENCE;
               element =
                  grammarAccess.getAccessContextAccess().getSuperAccessContextsAccessContextCrossReference_2_2_1_0();
               return obj;
            }
         }
         return null;
      }

   }

   // "{"
   protected class AccessContext_LeftCurlyBracketKeyword_3 extends KeywordToken {

      public AccessContext_LeftCurlyBracketKeyword_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Keyword getGrammarElement() {
         return grammarAccess.getAccessContextAccess().getLeftCurlyBracketKeyword_3();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new AccessContext_Group_2(lastRuleCallOrigin, this, 0, inst);
            case 1:
               return new AccessContext_NameAssignment_1(lastRuleCallOrigin, this, 1, inst);
            default:
               return null;
         }
      }

   }

   // "guid"
   protected class AccessContext_GuidKeyword_4 extends KeywordToken {

      public AccessContext_GuidKeyword_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Keyword getGrammarElement() {
         return grammarAccess.getAccessContextAccess().getGuidKeyword_4();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new AccessContext_LeftCurlyBracketKeyword_3(lastRuleCallOrigin, this, 0, inst);
            default:
               return null;
         }
      }

   }

   // guid=STRING
   protected class AccessContext_GuidAssignment_5 extends AssignmentToken {

      public AccessContext_GuidAssignment_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Assignment getGrammarElement() {
         return grammarAccess.getAccessContextAccess().getGuidAssignment_5();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new AccessContext_GuidKeyword_4(lastRuleCallOrigin, this, 0, inst);
            default:
               return null;
         }
      }

      @Override
      public IEObjectConsumer tryConsume() {
         if ((value = eObjectConsumer.getConsumable("guid", true)) == null) {
            return null;
         }
         IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("guid");
         if (valueSerializer.isValid(obj.getEObject(),
            grammarAccess.getAccessContextAccess().getGuidSTRINGTerminalRuleCall_5_0(), value, null)) {
            type = AssignmentType.TERMINAL_RULE_CALL;
            element = grammarAccess.getAccessContextAccess().getGuidSTRINGTerminalRuleCall_5_0();
            return obj;
         }
         return null;
      }

   }

   // ";"
   protected class AccessContext_SemicolonKeyword_6 extends KeywordToken {

      public AccessContext_SemicolonKeyword_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Keyword getGrammarElement() {
         return grammarAccess.getAccessContextAccess().getSemicolonKeyword_6();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new AccessContext_GuidAssignment_5(lastRuleCallOrigin, this, 0, inst);
            default:
               return null;
         }
      }

   }

   // (accessRules+=ObjectRestriction | hierarchyRestrictions+=HierarchyRestriction)+
   protected class AccessContext_Alternatives_7 extends AlternativesToken {

      public AccessContext_Alternatives_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Alternatives getGrammarElement() {
         return grammarAccess.getAccessContextAccess().getAlternatives_7();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new AccessContext_AccessRulesAssignment_7_0(lastRuleCallOrigin, this, 0, inst);
            case 1:
               return new AccessContext_HierarchyRestrictionsAssignment_7_1(lastRuleCallOrigin, this, 1, inst);
            default:
               return null;
         }
      }

   }

   // accessRules+=ObjectRestriction
   protected class AccessContext_AccessRulesAssignment_7_0 extends AssignmentToken {

      public AccessContext_AccessRulesAssignment_7_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Assignment getGrammarElement() {
         return grammarAccess.getAccessContextAccess().getAccessRulesAssignment_7_0();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new ObjectRestriction_Alternatives(this, this, 0, inst);
            default:
               return null;
         }
      }

      @Override
      public IEObjectConsumer tryConsume() {
         if ((value = eObjectConsumer.getConsumable("accessRules", true)) == null) {
            return null;
         }
         IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("accessRules");
         if (value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
            IEObjectConsumer param = createEObjectConsumer((EObject) value);
            if (param.isInstanceOf(grammarAccess.getObjectRestrictionRule().getType().getClassifier())) {
               type = AssignmentType.PARSER_RULE_CALL;
               element = grammarAccess.getAccessContextAccess().getAccessRulesObjectRestrictionParserRuleCall_7_0_0();
               consumed = obj;
               return param;
            }
         }
         return null;
      }

      @Override
      public AbstractToken createFollowerAfterReturn(AbstractToken next, int actIndex, int index, IEObjectConsumer inst) {
         if (value == inst.getEObject() && !inst.isConsumed()) {
            return null;
         }
         switch (index) {
            case 0:
               return new AccessContext_Alternatives_7(lastRuleCallOrigin, next, actIndex, consumed);
            case 1:
               return new AccessContext_SemicolonKeyword_6(lastRuleCallOrigin, next, actIndex, consumed);
            default:
               return null;
         }
      }
   }

   // hierarchyRestrictions+=HierarchyRestriction
   protected class AccessContext_HierarchyRestrictionsAssignment_7_1 extends AssignmentToken {

      public AccessContext_HierarchyRestrictionsAssignment_7_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Assignment getGrammarElement() {
         return grammarAccess.getAccessContextAccess().getHierarchyRestrictionsAssignment_7_1();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new HierarchyRestriction_Group(this, this, 0, inst);
            default:
               return null;
         }
      }

      @Override
      public IEObjectConsumer tryConsume() {
         if ((value = eObjectConsumer.getConsumable("hierarchyRestrictions", true)) == null) {
            return null;
         }
         IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("hierarchyRestrictions");
         if (value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
            IEObjectConsumer param = createEObjectConsumer((EObject) value);
            if (param.isInstanceOf(grammarAccess.getHierarchyRestrictionRule().getType().getClassifier())) {
               type = AssignmentType.PARSER_RULE_CALL;
               element =
                  grammarAccess.getAccessContextAccess().getHierarchyRestrictionsHierarchyRestrictionParserRuleCall_7_1_0();
               consumed = obj;
               return param;
            }
         }
         return null;
      }

      @Override
      public AbstractToken createFollowerAfterReturn(AbstractToken next, int actIndex, int index, IEObjectConsumer inst) {
         if (value == inst.getEObject() && !inst.isConsumed()) {
            return null;
         }
         switch (index) {
            case 0:
               return new AccessContext_Alternatives_7(lastRuleCallOrigin, next, actIndex, consumed);
            case 1:
               return new AccessContext_SemicolonKeyword_6(lastRuleCallOrigin, next, actIndex, consumed);
            default:
               return null;
         }
      }
   }

   // "}"
   protected class AccessContext_RightCurlyBracketKeyword_8 extends KeywordToken {

      public AccessContext_RightCurlyBracketKeyword_8(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Keyword getGrammarElement() {
         return grammarAccess.getAccessContextAccess().getRightCurlyBracketKeyword_8();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new AccessContext_Alternatives_7(lastRuleCallOrigin, this, 0, inst);
            default:
               return null;
         }
      }

   }

   /************ end Rule AccessContext ****************/

   /************
    * begin Rule HierarchyRestriction **************** HierarchyRestriction: "childrenOf"
    * artifact=[XArtifactRef|ARTIFACT_INSTANCE_REFERENCE] "{" accessRules+=ObjectRestriction+ "}";
    **/

   // "childrenOf" artifact=[XArtifactRef|ARTIFACT_INSTANCE_REFERENCE] "{" accessRules+=ObjectRestriction+ "}"
   protected class HierarchyRestriction_Group extends GroupToken {

      public HierarchyRestriction_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Group getGrammarElement() {
         return grammarAccess.getHierarchyRestrictionAccess().getGroup();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new HierarchyRestriction_RightCurlyBracketKeyword_4(lastRuleCallOrigin, this, 0, inst);
            default:
               return null;
         }
      }

      @Override
      public IEObjectConsumer tryConsume() {
         if (getEObject().eClass() != grammarAccess.getHierarchyRestrictionRule().getType().getClassifier()) {
            return null;
         }
         return eObjectConsumer;
      }

   }

   // "childrenOf"
   protected class HierarchyRestriction_ChildrenOfKeyword_0 extends KeywordToken {

      public HierarchyRestriction_ChildrenOfKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Keyword getGrammarElement() {
         return grammarAccess.getHierarchyRestrictionAccess().getChildrenOfKeyword_0();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            default:
               return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
         }
      }

   }

   // artifact=[XArtifactRef|ARTIFACT_INSTANCE_REFERENCE]
   protected class HierarchyRestriction_ArtifactAssignment_1 extends AssignmentToken {

      public HierarchyRestriction_ArtifactAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Assignment getGrammarElement() {
         return grammarAccess.getHierarchyRestrictionAccess().getArtifactAssignment_1();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new HierarchyRestriction_ChildrenOfKeyword_0(lastRuleCallOrigin, this, 0, inst);
            default:
               return null;
         }
      }

      @Override
      public IEObjectConsumer tryConsume() {
         if ((value = eObjectConsumer.getConsumable("artifact", true)) == null) {
            return null;
         }
         IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("artifact");
         if (value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
            IEObjectConsumer param = createEObjectConsumer((EObject) value);
            if (param.isInstanceOf(grammarAccess.getHierarchyRestrictionAccess().getArtifactXArtifactRefCrossReference_1_0().getType().getClassifier())) {
               type = AssignmentType.CROSS_REFERENCE;
               element = grammarAccess.getHierarchyRestrictionAccess().getArtifactXArtifactRefCrossReference_1_0();
               return obj;
            }
         }
         return null;
      }

   }

   // "{"
   protected class HierarchyRestriction_LeftCurlyBracketKeyword_2 extends KeywordToken {

      public HierarchyRestriction_LeftCurlyBracketKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Keyword getGrammarElement() {
         return grammarAccess.getHierarchyRestrictionAccess().getLeftCurlyBracketKeyword_2();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new HierarchyRestriction_ArtifactAssignment_1(lastRuleCallOrigin, this, 0, inst);
            default:
               return null;
         }
      }

   }

   // accessRules+=ObjectRestriction+
   protected class HierarchyRestriction_AccessRulesAssignment_3 extends AssignmentToken {

      public HierarchyRestriction_AccessRulesAssignment_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Assignment getGrammarElement() {
         return grammarAccess.getHierarchyRestrictionAccess().getAccessRulesAssignment_3();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new ObjectRestriction_Alternatives(this, this, 0, inst);
            default:
               return null;
         }
      }

      @Override
      public IEObjectConsumer tryConsume() {
         if ((value = eObjectConsumer.getConsumable("accessRules", true)) == null) {
            return null;
         }
         IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("accessRules");
         if (value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
            IEObjectConsumer param = createEObjectConsumer((EObject) value);
            if (param.isInstanceOf(grammarAccess.getObjectRestrictionRule().getType().getClassifier())) {
               type = AssignmentType.PARSER_RULE_CALL;
               element =
                  grammarAccess.getHierarchyRestrictionAccess().getAccessRulesObjectRestrictionParserRuleCall_3_0();
               consumed = obj;
               return param;
            }
         }
         return null;
      }

      @Override
      public AbstractToken createFollowerAfterReturn(AbstractToken next, int actIndex, int index, IEObjectConsumer inst) {
         if (value == inst.getEObject() && !inst.isConsumed()) {
            return null;
         }
         switch (index) {
            case 0:
               return new HierarchyRestriction_AccessRulesAssignment_3(lastRuleCallOrigin, next, actIndex, consumed);
            case 1:
               return new HierarchyRestriction_LeftCurlyBracketKeyword_2(lastRuleCallOrigin, next, actIndex, consumed);
            default:
               return null;
         }
      }
   }

   // "}"
   protected class HierarchyRestriction_RightCurlyBracketKeyword_4 extends KeywordToken {

      public HierarchyRestriction_RightCurlyBracketKeyword_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Keyword getGrammarElement() {
         return grammarAccess.getHierarchyRestrictionAccess().getRightCurlyBracketKeyword_4();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new HierarchyRestriction_AccessRulesAssignment_3(lastRuleCallOrigin, this, 0, inst);
            default:
               return null;
         }
      }

   }

   /************ end Rule HierarchyRestriction ****************/

   /************
    * begin Rule ObjectRestriction **************** ObjectRestriction: ArtifactInstanceRestriction |
    * ArtifactTypeRestriction | RelationTypeRestriction | AttributeTypeRestriction;
    **/

   // ArtifactInstanceRestriction | ArtifactTypeRestriction | RelationTypeRestriction | AttributeTypeRestriction
   protected class ObjectRestriction_Alternatives extends AlternativesToken {

      public ObjectRestriction_Alternatives(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Alternatives getGrammarElement() {
         return grammarAccess.getObjectRestrictionAccess().getAlternatives();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new ObjectRestriction_ArtifactInstanceRestrictionParserRuleCall_0(lastRuleCallOrigin, this, 0,
                  inst);
            case 1:
               return new ObjectRestriction_ArtifactTypeRestrictionParserRuleCall_1(lastRuleCallOrigin, this, 1, inst);
            case 2:
               return new ObjectRestriction_RelationTypeRestrictionParserRuleCall_2(lastRuleCallOrigin, this, 2, inst);
            case 3:
               return new ObjectRestriction_AttributeTypeRestrictionParserRuleCall_3(lastRuleCallOrigin, this, 3, inst);
            default:
               return null;
         }
      }

      @Override
      public IEObjectConsumer tryConsume() {
         if (getEObject().eClass() != grammarAccess.getArtifactInstanceRestrictionRule().getType().getClassifier() && getEObject().eClass() != grammarAccess.getArtifactTypeRestrictionRule().getType().getClassifier() && getEObject().eClass() != grammarAccess.getAttributeTypeRestrictionRule().getType().getClassifier() && getEObject().eClass() != grammarAccess.getRelationTypeRestrictionRule().getType().getClassifier()) {
            return null;
         }
         return eObjectConsumer;
      }

   }

   // ArtifactInstanceRestriction
   protected class ObjectRestriction_ArtifactInstanceRestrictionParserRuleCall_0 extends RuleCallToken {

      public ObjectRestriction_ArtifactInstanceRestrictionParserRuleCall_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public RuleCall getGrammarElement() {
         return grammarAccess.getObjectRestrictionAccess().getArtifactInstanceRestrictionParserRuleCall_0();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new ArtifactInstanceRestriction_Group(this, this, 0, inst);
            default:
               return null;
         }
      }

      @Override
      public IEObjectConsumer tryConsume() {
         if (getEObject().eClass() != grammarAccess.getArtifactInstanceRestrictionRule().getType().getClassifier()) {
            return null;
         }
         if (checkForRecursion(ArtifactInstanceRestriction_Group.class, eObjectConsumer)) {
            return null;
         }
         return eObjectConsumer;
      }

      @Override
      public AbstractToken createFollowerAfterReturn(AbstractToken next, int actIndex, int index, IEObjectConsumer inst) {
         switch (index) {
            default:
               return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex, index, inst);
         }
      }
   }

   // ArtifactTypeRestriction
   protected class ObjectRestriction_ArtifactTypeRestrictionParserRuleCall_1 extends RuleCallToken {

      public ObjectRestriction_ArtifactTypeRestrictionParserRuleCall_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public RuleCall getGrammarElement() {
         return grammarAccess.getObjectRestrictionAccess().getArtifactTypeRestrictionParserRuleCall_1();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new ArtifactTypeRestriction_Group(this, this, 0, inst);
            default:
               return null;
         }
      }

      @Override
      public IEObjectConsumer tryConsume() {
         if (getEObject().eClass() != grammarAccess.getArtifactTypeRestrictionRule().getType().getClassifier()) {
            return null;
         }
         if (checkForRecursion(ArtifactTypeRestriction_Group.class, eObjectConsumer)) {
            return null;
         }
         return eObjectConsumer;
      }

      @Override
      public AbstractToken createFollowerAfterReturn(AbstractToken next, int actIndex, int index, IEObjectConsumer inst) {
         switch (index) {
            default:
               return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex, index, inst);
         }
      }
   }

   // RelationTypeRestriction
   protected class ObjectRestriction_RelationTypeRestrictionParserRuleCall_2 extends RuleCallToken {

      public ObjectRestriction_RelationTypeRestrictionParserRuleCall_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public RuleCall getGrammarElement() {
         return grammarAccess.getObjectRestrictionAccess().getRelationTypeRestrictionParserRuleCall_2();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new RelationTypeRestriction_Group(this, this, 0, inst);
            default:
               return null;
         }
      }

      @Override
      public IEObjectConsumer tryConsume() {
         if (getEObject().eClass() != grammarAccess.getRelationTypeRestrictionRule().getType().getClassifier()) {
            return null;
         }
         if (checkForRecursion(RelationTypeRestriction_Group.class, eObjectConsumer)) {
            return null;
         }
         return eObjectConsumer;
      }

      @Override
      public AbstractToken createFollowerAfterReturn(AbstractToken next, int actIndex, int index, IEObjectConsumer inst) {
         switch (index) {
            default:
               return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex, index, inst);
         }
      }
   }

   // AttributeTypeRestriction
   protected class ObjectRestriction_AttributeTypeRestrictionParserRuleCall_3 extends RuleCallToken {

      public ObjectRestriction_AttributeTypeRestrictionParserRuleCall_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public RuleCall getGrammarElement() {
         return grammarAccess.getObjectRestrictionAccess().getAttributeTypeRestrictionParserRuleCall_3();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new AttributeTypeRestriction_Group(this, this, 0, inst);
            default:
               return null;
         }
      }

      @Override
      public IEObjectConsumer tryConsume() {
         if (getEObject().eClass() != grammarAccess.getAttributeTypeRestrictionRule().getType().getClassifier()) {
            return null;
         }
         if (checkForRecursion(AttributeTypeRestriction_Group.class, eObjectConsumer)) {
            return null;
         }
         return eObjectConsumer;
      }

      @Override
      public AbstractToken createFollowerAfterReturn(AbstractToken next, int actIndex, int index, IEObjectConsumer inst) {
         switch (index) {
            default:
               return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex, index, inst);
         }
      }
   }

   /************ end Rule ObjectRestriction ****************/

   /************
    * begin Rule ArtifactInstanceRestriction **************** ArtifactInstanceRestriction:
    * permission=AccessPermissionEnum "edit" "artifact" artifactRef=[XArtifactRef|ARTIFACT_INSTANCE_REFERENCE] ";";
    **/

   // permission=AccessPermissionEnum "edit" "artifact" artifactRef=[XArtifactRef|ARTIFACT_INSTANCE_REFERENCE] ";"
   protected class ArtifactInstanceRestriction_Group extends GroupToken {

      public ArtifactInstanceRestriction_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Group getGrammarElement() {
         return grammarAccess.getArtifactInstanceRestrictionAccess().getGroup();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new ArtifactInstanceRestriction_SemicolonKeyword_4(lastRuleCallOrigin, this, 0, inst);
            default:
               return null;
         }
      }

      @Override
      public IEObjectConsumer tryConsume() {
         if (getEObject().eClass() != grammarAccess.getArtifactInstanceRestrictionRule().getType().getClassifier()) {
            return null;
         }
         return eObjectConsumer;
      }

   }

   // permission=AccessPermissionEnum
   protected class ArtifactInstanceRestriction_PermissionAssignment_0 extends AssignmentToken {

      public ArtifactInstanceRestriction_PermissionAssignment_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Assignment getGrammarElement() {
         return grammarAccess.getArtifactInstanceRestrictionAccess().getPermissionAssignment_0();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            default:
               return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
         }
      }

      @Override
      public IEObjectConsumer tryConsume() {
         if ((value = eObjectConsumer.getConsumable("permission", true)) == null) {
            return null;
         }
         IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("permission");
         if (enumLitSerializer.isValid(obj.getEObject(),
            grammarAccess.getArtifactInstanceRestrictionAccess().getPermissionAccessPermissionEnumEnumRuleCall_0_0(),
            value, null)) {
            type = AssignmentType.ENUM_RULE_CALL;
            element =
               grammarAccess.getArtifactInstanceRestrictionAccess().getPermissionAccessPermissionEnumEnumRuleCall_0_0();
            return obj;
         }
         return null;
      }

   }

   // "edit"
   protected class ArtifactInstanceRestriction_EditKeyword_1 extends KeywordToken {

      public ArtifactInstanceRestriction_EditKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Keyword getGrammarElement() {
         return grammarAccess.getArtifactInstanceRestrictionAccess().getEditKeyword_1();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new ArtifactInstanceRestriction_PermissionAssignment_0(lastRuleCallOrigin, this, 0, inst);
            default:
               return null;
         }
      }

   }

   // "artifact"
   protected class ArtifactInstanceRestriction_ArtifactKeyword_2 extends KeywordToken {

      public ArtifactInstanceRestriction_ArtifactKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Keyword getGrammarElement() {
         return grammarAccess.getArtifactInstanceRestrictionAccess().getArtifactKeyword_2();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new ArtifactInstanceRestriction_EditKeyword_1(lastRuleCallOrigin, this, 0, inst);
            default:
               return null;
         }
      }

   }

   // artifactRef=[XArtifactRef|ARTIFACT_INSTANCE_REFERENCE]
   protected class ArtifactInstanceRestriction_ArtifactRefAssignment_3 extends AssignmentToken {

      public ArtifactInstanceRestriction_ArtifactRefAssignment_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Assignment getGrammarElement() {
         return grammarAccess.getArtifactInstanceRestrictionAccess().getArtifactRefAssignment_3();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new ArtifactInstanceRestriction_ArtifactKeyword_2(lastRuleCallOrigin, this, 0, inst);
            default:
               return null;
         }
      }

      @Override
      public IEObjectConsumer tryConsume() {
         if ((value = eObjectConsumer.getConsumable("artifactRef", true)) == null) {
            return null;
         }
         IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("artifactRef");
         if (value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
            IEObjectConsumer param = createEObjectConsumer((EObject) value);
            if (param.isInstanceOf(grammarAccess.getArtifactInstanceRestrictionAccess().getArtifactRefXArtifactRefCrossReference_3_0().getType().getClassifier())) {
               type = AssignmentType.CROSS_REFERENCE;
               element =
                  grammarAccess.getArtifactInstanceRestrictionAccess().getArtifactRefXArtifactRefCrossReference_3_0();
               return obj;
            }
         }
         return null;
      }

   }

   // ";"
   protected class ArtifactInstanceRestriction_SemicolonKeyword_4 extends KeywordToken {

      public ArtifactInstanceRestriction_SemicolonKeyword_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Keyword getGrammarElement() {
         return grammarAccess.getArtifactInstanceRestrictionAccess().getSemicolonKeyword_4();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new ArtifactInstanceRestriction_ArtifactRefAssignment_3(lastRuleCallOrigin, this, 0, inst);
            default:
               return null;
         }
      }

   }

   /************ end Rule ArtifactInstanceRestriction ****************/

   /************
    * begin Rule ArtifactTypeRestriction **************** ArtifactTypeRestriction: permission=AccessPermissionEnum
    * "edit" "artifactType" artifactTypeRef=[XArtifactType|ARTIFACT_TYPE_REFERENCE] ";";
    **/

   // permission=AccessPermissionEnum "edit" "artifactType" artifactTypeRef=[XArtifactType|ARTIFACT_TYPE_REFERENCE] ";"
   protected class ArtifactTypeRestriction_Group extends GroupToken {

      public ArtifactTypeRestriction_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Group getGrammarElement() {
         return grammarAccess.getArtifactTypeRestrictionAccess().getGroup();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new ArtifactTypeRestriction_SemicolonKeyword_4(lastRuleCallOrigin, this, 0, inst);
            default:
               return null;
         }
      }

      @Override
      public IEObjectConsumer tryConsume() {
         if (getEObject().eClass() != grammarAccess.getArtifactTypeRestrictionRule().getType().getClassifier()) {
            return null;
         }
         return eObjectConsumer;
      }

   }

   // permission=AccessPermissionEnum
   protected class ArtifactTypeRestriction_PermissionAssignment_0 extends AssignmentToken {

      public ArtifactTypeRestriction_PermissionAssignment_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Assignment getGrammarElement() {
         return grammarAccess.getArtifactTypeRestrictionAccess().getPermissionAssignment_0();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            default:
               return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
         }
      }

      @Override
      public IEObjectConsumer tryConsume() {
         if ((value = eObjectConsumer.getConsumable("permission", true)) == null) {
            return null;
         }
         IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("permission");
         if (enumLitSerializer.isValid(obj.getEObject(),
            grammarAccess.getArtifactTypeRestrictionAccess().getPermissionAccessPermissionEnumEnumRuleCall_0_0(),
            value, null)) {
            type = AssignmentType.ENUM_RULE_CALL;
            element =
               grammarAccess.getArtifactTypeRestrictionAccess().getPermissionAccessPermissionEnumEnumRuleCall_0_0();
            return obj;
         }
         return null;
      }

   }

   // "edit"
   protected class ArtifactTypeRestriction_EditKeyword_1 extends KeywordToken {

      public ArtifactTypeRestriction_EditKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Keyword getGrammarElement() {
         return grammarAccess.getArtifactTypeRestrictionAccess().getEditKeyword_1();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new ArtifactTypeRestriction_PermissionAssignment_0(lastRuleCallOrigin, this, 0, inst);
            default:
               return null;
         }
      }

   }

   // "artifactType"
   protected class ArtifactTypeRestriction_ArtifactTypeKeyword_2 extends KeywordToken {

      public ArtifactTypeRestriction_ArtifactTypeKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Keyword getGrammarElement() {
         return grammarAccess.getArtifactTypeRestrictionAccess().getArtifactTypeKeyword_2();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new ArtifactTypeRestriction_EditKeyword_1(lastRuleCallOrigin, this, 0, inst);
            default:
               return null;
         }
      }

   }

   // artifactTypeRef=[XArtifactType|ARTIFACT_TYPE_REFERENCE]
   protected class ArtifactTypeRestriction_ArtifactTypeRefAssignment_3 extends AssignmentToken {

      public ArtifactTypeRestriction_ArtifactTypeRefAssignment_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Assignment getGrammarElement() {
         return grammarAccess.getArtifactTypeRestrictionAccess().getArtifactTypeRefAssignment_3();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new ArtifactTypeRestriction_ArtifactTypeKeyword_2(lastRuleCallOrigin, this, 0, inst);
            default:
               return null;
         }
      }

      @Override
      public IEObjectConsumer tryConsume() {
         if ((value = eObjectConsumer.getConsumable("artifactTypeRef", true)) == null) {
            return null;
         }
         IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("artifactTypeRef");
         if (value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
            IEObjectConsumer param = createEObjectConsumer((EObject) value);
            if (param.isInstanceOf(grammarAccess.getArtifactTypeRestrictionAccess().getArtifactTypeRefXArtifactTypeCrossReference_3_0().getType().getClassifier())) {
               type = AssignmentType.CROSS_REFERENCE;
               element =
                  grammarAccess.getArtifactTypeRestrictionAccess().getArtifactTypeRefXArtifactTypeCrossReference_3_0();
               return obj;
            }
         }
         return null;
      }

   }

   // ";"
   protected class ArtifactTypeRestriction_SemicolonKeyword_4 extends KeywordToken {

      public ArtifactTypeRestriction_SemicolonKeyword_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Keyword getGrammarElement() {
         return grammarAccess.getArtifactTypeRestrictionAccess().getSemicolonKeyword_4();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new ArtifactTypeRestriction_ArtifactTypeRefAssignment_3(lastRuleCallOrigin, this, 0, inst);
            default:
               return null;
         }
      }

   }

   /************ end Rule ArtifactTypeRestriction ****************/

   /************
    * begin Rule AttributeTypeRestriction **************** AttributeTypeRestriction: permission=AccessPermissionEnum
    * "edit" "attributeType" attributeTypeRef=[XAttributeType|ATTRIBUTE_TYPE_REFERENCE] ("of" "artifactType"
    * artifactTypeRef=[XArtifactType|ARTIFACT_TYPE_REFERENCE])? ";";
    **/

   // permission=AccessPermissionEnum "edit" "attributeType" attributeTypeRef=[XAttributeType|ATTRIBUTE_TYPE_REFERENCE] ("of"
   // "artifactType" artifactTypeRef=[XArtifactType|ARTIFACT_TYPE_REFERENCE])? ";"
   protected class AttributeTypeRestriction_Group extends GroupToken {

      public AttributeTypeRestriction_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Group getGrammarElement() {
         return grammarAccess.getAttributeTypeRestrictionAccess().getGroup();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new AttributeTypeRestriction_SemicolonKeyword_5(lastRuleCallOrigin, this, 0, inst);
            default:
               return null;
         }
      }

      @Override
      public IEObjectConsumer tryConsume() {
         if (getEObject().eClass() != grammarAccess.getAttributeTypeRestrictionRule().getType().getClassifier()) {
            return null;
         }
         return eObjectConsumer;
      }

   }

   // permission=AccessPermissionEnum
   protected class AttributeTypeRestriction_PermissionAssignment_0 extends AssignmentToken {

      public AttributeTypeRestriction_PermissionAssignment_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Assignment getGrammarElement() {
         return grammarAccess.getAttributeTypeRestrictionAccess().getPermissionAssignment_0();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            default:
               return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
         }
      }

      @Override
      public IEObjectConsumer tryConsume() {
         if ((value = eObjectConsumer.getConsumable("permission", true)) == null) {
            return null;
         }
         IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("permission");
         if (enumLitSerializer.isValid(obj.getEObject(),
            grammarAccess.getAttributeTypeRestrictionAccess().getPermissionAccessPermissionEnumEnumRuleCall_0_0(),
            value, null)) {
            type = AssignmentType.ENUM_RULE_CALL;
            element =
               grammarAccess.getAttributeTypeRestrictionAccess().getPermissionAccessPermissionEnumEnumRuleCall_0_0();
            return obj;
         }
         return null;
      }

   }

   // "edit"
   protected class AttributeTypeRestriction_EditKeyword_1 extends KeywordToken {

      public AttributeTypeRestriction_EditKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Keyword getGrammarElement() {
         return grammarAccess.getAttributeTypeRestrictionAccess().getEditKeyword_1();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new AttributeTypeRestriction_PermissionAssignment_0(lastRuleCallOrigin, this, 0, inst);
            default:
               return null;
         }
      }

   }

   // "attributeType"
   protected class AttributeTypeRestriction_AttributeTypeKeyword_2 extends KeywordToken {

      public AttributeTypeRestriction_AttributeTypeKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Keyword getGrammarElement() {
         return grammarAccess.getAttributeTypeRestrictionAccess().getAttributeTypeKeyword_2();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new AttributeTypeRestriction_EditKeyword_1(lastRuleCallOrigin, this, 0, inst);
            default:
               return null;
         }
      }

   }

   // attributeTypeRef=[XAttributeType|ATTRIBUTE_TYPE_REFERENCE]
   protected class AttributeTypeRestriction_AttributeTypeRefAssignment_3 extends AssignmentToken {

      public AttributeTypeRestriction_AttributeTypeRefAssignment_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Assignment getGrammarElement() {
         return grammarAccess.getAttributeTypeRestrictionAccess().getAttributeTypeRefAssignment_3();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new AttributeTypeRestriction_AttributeTypeKeyword_2(lastRuleCallOrigin, this, 0, inst);
            default:
               return null;
         }
      }

      @Override
      public IEObjectConsumer tryConsume() {
         if ((value = eObjectConsumer.getConsumable("attributeTypeRef", true)) == null) {
            return null;
         }
         IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("attributeTypeRef");
         if (value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
            IEObjectConsumer param = createEObjectConsumer((EObject) value);
            if (param.isInstanceOf(grammarAccess.getAttributeTypeRestrictionAccess().getAttributeTypeRefXAttributeTypeCrossReference_3_0().getType().getClassifier())) {
               type = AssignmentType.CROSS_REFERENCE;
               element =
                  grammarAccess.getAttributeTypeRestrictionAccess().getAttributeTypeRefXAttributeTypeCrossReference_3_0();
               return obj;
            }
         }
         return null;
      }

   }

   // ("of" "artifactType" artifactTypeRef=[XArtifactType|ARTIFACT_TYPE_REFERENCE])?
   protected class AttributeTypeRestriction_Group_4 extends GroupToken {

      public AttributeTypeRestriction_Group_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Group getGrammarElement() {
         return grammarAccess.getAttributeTypeRestrictionAccess().getGroup_4();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new AttributeTypeRestriction_ArtifactTypeRefAssignment_4_2(lastRuleCallOrigin, this, 0, inst);
            default:
               return null;
         }
      }

   }

   // "of"
   protected class AttributeTypeRestriction_OfKeyword_4_0 extends KeywordToken {

      public AttributeTypeRestriction_OfKeyword_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Keyword getGrammarElement() {
         return grammarAccess.getAttributeTypeRestrictionAccess().getOfKeyword_4_0();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new AttributeTypeRestriction_AttributeTypeRefAssignment_3(lastRuleCallOrigin, this, 0, inst);
            default:
               return null;
         }
      }

   }

   // "artifactType"
   protected class AttributeTypeRestriction_ArtifactTypeKeyword_4_1 extends KeywordToken {

      public AttributeTypeRestriction_ArtifactTypeKeyword_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Keyword getGrammarElement() {
         return grammarAccess.getAttributeTypeRestrictionAccess().getArtifactTypeKeyword_4_1();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new AttributeTypeRestriction_OfKeyword_4_0(lastRuleCallOrigin, this, 0, inst);
            default:
               return null;
         }
      }

   }

   // artifactTypeRef=[XArtifactType|ARTIFACT_TYPE_REFERENCE]
   protected class AttributeTypeRestriction_ArtifactTypeRefAssignment_4_2 extends AssignmentToken {

      public AttributeTypeRestriction_ArtifactTypeRefAssignment_4_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Assignment getGrammarElement() {
         return grammarAccess.getAttributeTypeRestrictionAccess().getArtifactTypeRefAssignment_4_2();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new AttributeTypeRestriction_ArtifactTypeKeyword_4_1(lastRuleCallOrigin, this, 0, inst);
            default:
               return null;
         }
      }

      @Override
      public IEObjectConsumer tryConsume() {
         if ((value = eObjectConsumer.getConsumable("artifactTypeRef", false)) == null) {
            return null;
         }
         IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("artifactTypeRef");
         if (value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
            IEObjectConsumer param = createEObjectConsumer((EObject) value);
            if (param.isInstanceOf(grammarAccess.getAttributeTypeRestrictionAccess().getArtifactTypeRefXArtifactTypeCrossReference_4_2_0().getType().getClassifier())) {
               type = AssignmentType.CROSS_REFERENCE;
               element =
                  grammarAccess.getAttributeTypeRestrictionAccess().getArtifactTypeRefXArtifactTypeCrossReference_4_2_0();
               return obj;
            }
         }
         return null;
      }

   }

   // ";"
   protected class AttributeTypeRestriction_SemicolonKeyword_5 extends KeywordToken {

      public AttributeTypeRestriction_SemicolonKeyword_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Keyword getGrammarElement() {
         return grammarAccess.getAttributeTypeRestrictionAccess().getSemicolonKeyword_5();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new AttributeTypeRestriction_Group_4(lastRuleCallOrigin, this, 0, inst);
            case 1:
               return new AttributeTypeRestriction_AttributeTypeRefAssignment_3(lastRuleCallOrigin, this, 1, inst);
            default:
               return null;
         }
      }

   }

   /************ end Rule AttributeTypeRestriction ****************/

   /************
    * begin Rule RelationTypeRestriction **************** RelationTypeRestriction: permission=AccessPermissionEnum
    * "edit" "relationType" relationTypeRef=[XRelationType|RELATION_TYPE_REFERENCE] restrictedToSide=XRelationSideEnum
    * ";";
    **/

   // permission=AccessPermissionEnum "edit" "relationType" relationTypeRef=[XRelationType|RELATION_TYPE_REFERENCE]
   // restrictedToSide=XRelationSideEnum ";"
   protected class RelationTypeRestriction_Group extends GroupToken {

      public RelationTypeRestriction_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Group getGrammarElement() {
         return grammarAccess.getRelationTypeRestrictionAccess().getGroup();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new RelationTypeRestriction_SemicolonKeyword_5(lastRuleCallOrigin, this, 0, inst);
            default:
               return null;
         }
      }

      @Override
      public IEObjectConsumer tryConsume() {
         if (getEObject().eClass() != grammarAccess.getRelationTypeRestrictionRule().getType().getClassifier()) {
            return null;
         }
         return eObjectConsumer;
      }

   }

   // permission=AccessPermissionEnum
   protected class RelationTypeRestriction_PermissionAssignment_0 extends AssignmentToken {

      public RelationTypeRestriction_PermissionAssignment_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Assignment getGrammarElement() {
         return grammarAccess.getRelationTypeRestrictionAccess().getPermissionAssignment_0();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            default:
               return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
         }
      }

      @Override
      public IEObjectConsumer tryConsume() {
         if ((value = eObjectConsumer.getConsumable("permission", true)) == null) {
            return null;
         }
         IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("permission");
         if (enumLitSerializer.isValid(obj.getEObject(),
            grammarAccess.getRelationTypeRestrictionAccess().getPermissionAccessPermissionEnumEnumRuleCall_0_0(),
            value, null)) {
            type = AssignmentType.ENUM_RULE_CALL;
            element =
               grammarAccess.getRelationTypeRestrictionAccess().getPermissionAccessPermissionEnumEnumRuleCall_0_0();
            return obj;
         }
         return null;
      }

   }

   // "edit"
   protected class RelationTypeRestriction_EditKeyword_1 extends KeywordToken {

      public RelationTypeRestriction_EditKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Keyword getGrammarElement() {
         return grammarAccess.getRelationTypeRestrictionAccess().getEditKeyword_1();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new RelationTypeRestriction_PermissionAssignment_0(lastRuleCallOrigin, this, 0, inst);
            default:
               return null;
         }
      }

   }

   // "relationType"
   protected class RelationTypeRestriction_RelationTypeKeyword_2 extends KeywordToken {

      public RelationTypeRestriction_RelationTypeKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Keyword getGrammarElement() {
         return grammarAccess.getRelationTypeRestrictionAccess().getRelationTypeKeyword_2();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new RelationTypeRestriction_EditKeyword_1(lastRuleCallOrigin, this, 0, inst);
            default:
               return null;
         }
      }

   }

   // relationTypeRef=[XRelationType|RELATION_TYPE_REFERENCE]
   protected class RelationTypeRestriction_RelationTypeRefAssignment_3 extends AssignmentToken {

      public RelationTypeRestriction_RelationTypeRefAssignment_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Assignment getGrammarElement() {
         return grammarAccess.getRelationTypeRestrictionAccess().getRelationTypeRefAssignment_3();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new RelationTypeRestriction_RelationTypeKeyword_2(lastRuleCallOrigin, this, 0, inst);
            default:
               return null;
         }
      }

      @Override
      public IEObjectConsumer tryConsume() {
         if ((value = eObjectConsumer.getConsumable("relationTypeRef", true)) == null) {
            return null;
         }
         IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("relationTypeRef");
         if (value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
            IEObjectConsumer param = createEObjectConsumer((EObject) value);
            if (param.isInstanceOf(grammarAccess.getRelationTypeRestrictionAccess().getRelationTypeRefXRelationTypeCrossReference_3_0().getType().getClassifier())) {
               type = AssignmentType.CROSS_REFERENCE;
               element =
                  grammarAccess.getRelationTypeRestrictionAccess().getRelationTypeRefXRelationTypeCrossReference_3_0();
               return obj;
            }
         }
         return null;
      }

   }

   // restrictedToSide=XRelationSideEnum
   protected class RelationTypeRestriction_RestrictedToSideAssignment_4 extends AssignmentToken {

      public RelationTypeRestriction_RestrictedToSideAssignment_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Assignment getGrammarElement() {
         return grammarAccess.getRelationTypeRestrictionAccess().getRestrictedToSideAssignment_4();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new RelationTypeRestriction_RelationTypeRefAssignment_3(lastRuleCallOrigin, this, 0, inst);
            default:
               return null;
         }
      }

      @Override
      public IEObjectConsumer tryConsume() {
         if ((value = eObjectConsumer.getConsumable("restrictedToSide", true)) == null) {
            return null;
         }
         IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("restrictedToSide");
         if (enumLitSerializer.isValid(obj.getEObject(),
            grammarAccess.getRelationTypeRestrictionAccess().getRestrictedToSideXRelationSideEnumEnumRuleCall_4_0(),
            value, null)) {
            type = AssignmentType.ENUM_RULE_CALL;
            element =
               grammarAccess.getRelationTypeRestrictionAccess().getRestrictedToSideXRelationSideEnumEnumRuleCall_4_0();
            return obj;
         }
         return null;
      }

   }

   // ";"
   protected class RelationTypeRestriction_SemicolonKeyword_5 extends KeywordToken {

      public RelationTypeRestriction_SemicolonKeyword_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
         super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
      }

      @Override
      public Keyword getGrammarElement() {
         return grammarAccess.getRelationTypeRestrictionAccess().getSemicolonKeyword_5();
      }

      @Override
      public AbstractToken createFollower(int index, IEObjectConsumer inst) {
         switch (index) {
            case 0:
               return new RelationTypeRestriction_RestrictedToSideAssignment_4(lastRuleCallOrigin, this, 0, inst);
            default:
               return null;
         }
      }

   }

   /************ end Rule RelationTypeRestriction ****************/

}
