/*
* generated by Xtext
*/
package org.eclipse.osee.framework.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import org.eclipse.osee.framework.services.OseeTypesGrammarAccess;

public class OseeTypesParser extends AbstractContentAssistParser {
	
	@Inject
	private OseeTypesGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected org.eclipse.osee.framework.ui.contentassist.antlr.internal.InternalOseeTypesParser createParser() {
		org.eclipse.osee.framework.ui.contentassist.antlr.internal.InternalOseeTypesParser result = new org.eclipse.osee.framework.ui.contentassist.antlr.internal.InternalOseeTypesParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getOseeTypeModelAccess().getAlternatives_1(), "rule__OseeTypeModel__Alternatives_1");
					put(grammarAccess.getOseeElementAccess().getAlternatives(), "rule__OseeElement__Alternatives");
					put(grammarAccess.getOseeTypeAccess().getAlternatives(), "rule__OseeType__Alternatives");
					put(grammarAccess.getXAttributeTypeAccess().getDataProviderAlternatives_8_0(), "rule__XAttributeType__DataProviderAlternatives_8_0");
					put(grammarAccess.getXAttributeTypeAccess().getMaxAlternatives_12_0(), "rule__XAttributeType__MaxAlternatives_12_0");
					put(grammarAccess.getXAttributeTypeAccess().getTaggerIdAlternatives_13_1_0(), "rule__XAttributeType__TaggerIdAlternatives_13_1_0");
					put(grammarAccess.getAttributeBaseTypeAccess().getAlternatives(), "rule__AttributeBaseType__Alternatives");
					put(grammarAccess.getOverrideOptionAccess().getAlternatives(), "rule__OverrideOption__Alternatives");
					put(grammarAccess.getRelationOrderTypeAccess().getAlternatives(), "rule__RelationOrderType__Alternatives");
					put(grammarAccess.getRelationMultiplicityEnumAccess().getAlternatives(), "rule__RelationMultiplicityEnum__Alternatives");
					put(grammarAccess.getOseeTypeModelAccess().getGroup(), "rule__OseeTypeModel__Group__0");
					put(grammarAccess.getImportAccess().getGroup(), "rule__Import__Group__0");
					put(grammarAccess.getQUALIFIED_NAMEAccess().getGroup(), "rule__QUALIFIED_NAME__Group__0");
					put(grammarAccess.getQUALIFIED_NAMEAccess().getGroup_1(), "rule__QUALIFIED_NAME__Group_1__0");
					put(grammarAccess.getXArtifactTypeAccess().getGroup(), "rule__XArtifactType__Group__0");
					put(grammarAccess.getXArtifactTypeAccess().getGroup_3(), "rule__XArtifactType__Group_3__0");
					put(grammarAccess.getXArtifactTypeAccess().getGroup_3_2(), "rule__XArtifactType__Group_3_2__0");
					put(grammarAccess.getXAttributeTypeRefAccess().getGroup(), "rule__XAttributeTypeRef__Group__0");
					put(grammarAccess.getXAttributeTypeRefAccess().getGroup_2(), "rule__XAttributeTypeRef__Group_2__0");
					put(grammarAccess.getXAttributeTypeAccess().getGroup(), "rule__XAttributeType__Group__0");
					put(grammarAccess.getXAttributeTypeAccess().getGroup_2(), "rule__XAttributeType__Group_2__0");
					put(grammarAccess.getXAttributeTypeAccess().getGroup_3(), "rule__XAttributeType__Group_3__0");
					put(grammarAccess.getXAttributeTypeAccess().getGroup_13(), "rule__XAttributeType__Group_13__0");
					put(grammarAccess.getXAttributeTypeAccess().getGroup_14(), "rule__XAttributeType__Group_14__0");
					put(grammarAccess.getXAttributeTypeAccess().getGroup_15(), "rule__XAttributeType__Group_15__0");
					put(grammarAccess.getXAttributeTypeAccess().getGroup_16(), "rule__XAttributeType__Group_16__0");
					put(grammarAccess.getXAttributeTypeAccess().getGroup_17(), "rule__XAttributeType__Group_17__0");
					put(grammarAccess.getXOseeEnumTypeAccess().getGroup(), "rule__XOseeEnumType__Group__0");
					put(grammarAccess.getXOseeEnumEntryAccess().getGroup(), "rule__XOseeEnumEntry__Group__0");
					put(grammarAccess.getXOseeEnumEntryAccess().getGroup_3(), "rule__XOseeEnumEntry__Group_3__0");
					put(grammarAccess.getXOseeEnumOverrideAccess().getGroup(), "rule__XOseeEnumOverride__Group__0");
					put(grammarAccess.getAddEnumAccess().getGroup(), "rule__AddEnum__Group__0");
					put(grammarAccess.getAddEnumAccess().getGroup_3(), "rule__AddEnum__Group_3__0");
					put(grammarAccess.getRemoveEnumAccess().getGroup(), "rule__RemoveEnum__Group__0");
					put(grammarAccess.getXRelationTypeAccess().getGroup(), "rule__XRelationType__Group__0");
					put(grammarAccess.getOseeTypeModelAccess().getImportsAssignment_0(), "rule__OseeTypeModel__ImportsAssignment_0");
					put(grammarAccess.getOseeTypeModelAccess().getArtifactTypesAssignment_1_0(), "rule__OseeTypeModel__ArtifactTypesAssignment_1_0");
					put(grammarAccess.getOseeTypeModelAccess().getRelationTypesAssignment_1_1(), "rule__OseeTypeModel__RelationTypesAssignment_1_1");
					put(grammarAccess.getOseeTypeModelAccess().getAttributeTypesAssignment_1_2(), "rule__OseeTypeModel__AttributeTypesAssignment_1_2");
					put(grammarAccess.getOseeTypeModelAccess().getEnumTypesAssignment_1_3(), "rule__OseeTypeModel__EnumTypesAssignment_1_3");
					put(grammarAccess.getOseeTypeModelAccess().getEnumOverridesAssignment_1_4(), "rule__OseeTypeModel__EnumOverridesAssignment_1_4");
					put(grammarAccess.getImportAccess().getImportURIAssignment_1(), "rule__Import__ImportURIAssignment_1");
					put(grammarAccess.getXArtifactTypeAccess().getAbstractAssignment_0(), "rule__XArtifactType__AbstractAssignment_0");
					put(grammarAccess.getXArtifactTypeAccess().getNameAssignment_2(), "rule__XArtifactType__NameAssignment_2");
					put(grammarAccess.getXArtifactTypeAccess().getSuperArtifactTypesAssignment_3_1(), "rule__XArtifactType__SuperArtifactTypesAssignment_3_1");
					put(grammarAccess.getXArtifactTypeAccess().getSuperArtifactTypesAssignment_3_2_1(), "rule__XArtifactType__SuperArtifactTypesAssignment_3_2_1");
					put(grammarAccess.getXArtifactTypeAccess().getTypeGuidAssignment_6(), "rule__XArtifactType__TypeGuidAssignment_6");
					put(grammarAccess.getXArtifactTypeAccess().getValidAttributeTypesAssignment_7(), "rule__XArtifactType__ValidAttributeTypesAssignment_7");
					put(grammarAccess.getXAttributeTypeRefAccess().getValidAttributeTypeAssignment_1(), "rule__XAttributeTypeRef__ValidAttributeTypeAssignment_1");
					put(grammarAccess.getXAttributeTypeRefAccess().getBranchGuidAssignment_2_1(), "rule__XAttributeTypeRef__BranchGuidAssignment_2_1");
					put(grammarAccess.getXAttributeTypeAccess().getNameAssignment_1(), "rule__XAttributeType__NameAssignment_1");
					put(grammarAccess.getXAttributeTypeAccess().getBaseAttributeTypeAssignment_2_1(), "rule__XAttributeType__BaseAttributeTypeAssignment_2_1");
					put(grammarAccess.getXAttributeTypeAccess().getOverrideAssignment_3_1(), "rule__XAttributeType__OverrideAssignment_3_1");
					put(grammarAccess.getXAttributeTypeAccess().getTypeGuidAssignment_6(), "rule__XAttributeType__TypeGuidAssignment_6");
					put(grammarAccess.getXAttributeTypeAccess().getDataProviderAssignment_8(), "rule__XAttributeType__DataProviderAssignment_8");
					put(grammarAccess.getXAttributeTypeAccess().getMinAssignment_10(), "rule__XAttributeType__MinAssignment_10");
					put(grammarAccess.getXAttributeTypeAccess().getMaxAssignment_12(), "rule__XAttributeType__MaxAssignment_12");
					put(grammarAccess.getXAttributeTypeAccess().getTaggerIdAssignment_13_1(), "rule__XAttributeType__TaggerIdAssignment_13_1");
					put(grammarAccess.getXAttributeTypeAccess().getEnumTypeAssignment_14_1(), "rule__XAttributeType__EnumTypeAssignment_14_1");
					put(grammarAccess.getXAttributeTypeAccess().getDescriptionAssignment_15_1(), "rule__XAttributeType__DescriptionAssignment_15_1");
					put(grammarAccess.getXAttributeTypeAccess().getDefaultValueAssignment_16_1(), "rule__XAttributeType__DefaultValueAssignment_16_1");
					put(grammarAccess.getXAttributeTypeAccess().getFileExtensionAssignment_17_1(), "rule__XAttributeType__FileExtensionAssignment_17_1");
					put(grammarAccess.getXOseeEnumTypeAccess().getNameAssignment_1(), "rule__XOseeEnumType__NameAssignment_1");
					put(grammarAccess.getXOseeEnumTypeAccess().getTypeGuidAssignment_4(), "rule__XOseeEnumType__TypeGuidAssignment_4");
					put(grammarAccess.getXOseeEnumTypeAccess().getEnumEntriesAssignment_5(), "rule__XOseeEnumType__EnumEntriesAssignment_5");
					put(grammarAccess.getXOseeEnumEntryAccess().getNameAssignment_1(), "rule__XOseeEnumEntry__NameAssignment_1");
					put(grammarAccess.getXOseeEnumEntryAccess().getOrdinalAssignment_2(), "rule__XOseeEnumEntry__OrdinalAssignment_2");
					put(grammarAccess.getXOseeEnumEntryAccess().getEntryGuidAssignment_3_1(), "rule__XOseeEnumEntry__EntryGuidAssignment_3_1");
					put(grammarAccess.getXOseeEnumOverrideAccess().getOverridenEnumTypeAssignment_1(), "rule__XOseeEnumOverride__OverridenEnumTypeAssignment_1");
					put(grammarAccess.getXOseeEnumOverrideAccess().getInheritAllAssignment_3(), "rule__XOseeEnumOverride__InheritAllAssignment_3");
					put(grammarAccess.getXOseeEnumOverrideAccess().getOverrideOptionsAssignment_4(), "rule__XOseeEnumOverride__OverrideOptionsAssignment_4");
					put(grammarAccess.getAddEnumAccess().getEnumEntryAssignment_1(), "rule__AddEnum__EnumEntryAssignment_1");
					put(grammarAccess.getAddEnumAccess().getOrdinalAssignment_2(), "rule__AddEnum__OrdinalAssignment_2");
					put(grammarAccess.getAddEnumAccess().getEntryGuidAssignment_3_1(), "rule__AddEnum__EntryGuidAssignment_3_1");
					put(grammarAccess.getRemoveEnumAccess().getEnumEntryAssignment_1(), "rule__RemoveEnum__EnumEntryAssignment_1");
					put(grammarAccess.getXRelationTypeAccess().getNameAssignment_1(), "rule__XRelationType__NameAssignment_1");
					put(grammarAccess.getXRelationTypeAccess().getTypeGuidAssignment_4(), "rule__XRelationType__TypeGuidAssignment_4");
					put(grammarAccess.getXRelationTypeAccess().getSideANameAssignment_6(), "rule__XRelationType__SideANameAssignment_6");
					put(grammarAccess.getXRelationTypeAccess().getSideAArtifactTypeAssignment_8(), "rule__XRelationType__SideAArtifactTypeAssignment_8");
					put(grammarAccess.getXRelationTypeAccess().getSideBNameAssignment_10(), "rule__XRelationType__SideBNameAssignment_10");
					put(grammarAccess.getXRelationTypeAccess().getSideBArtifactTypeAssignment_12(), "rule__XRelationType__SideBArtifactTypeAssignment_12");
					put(grammarAccess.getXRelationTypeAccess().getDefaultOrderTypeAssignment_14(), "rule__XRelationType__DefaultOrderTypeAssignment_14");
					put(grammarAccess.getXRelationTypeAccess().getMultiplicityAssignment_16(), "rule__XRelationType__MultiplicityAssignment_16");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			org.eclipse.osee.framework.ui.contentassist.antlr.internal.InternalOseeTypesParser typedParser = (org.eclipse.osee.framework.ui.contentassist.antlr.internal.InternalOseeTypesParser) parser;
			typedParser.entryRuleOseeTypeModel();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public OseeTypesGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(OseeTypesGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
