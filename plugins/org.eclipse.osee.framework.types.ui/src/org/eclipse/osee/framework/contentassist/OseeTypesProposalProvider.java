/*
 * generated by Xtext
 */
package org.eclipse.osee.framework.contentassist;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.jface.text.contentassist.ICompletionProposal;
import org.eclipse.osee.framework.jdk.core.util.GUID;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.ui.core.editor.contentassist.ContentAssistContext;
import org.eclipse.xtext.ui.core.editor.contentassist.ICompletionProposalAcceptor;

/**
 * see http://www.eclipse.org/Xtext/documentation/latest/xtext.html#contentAssist on how to customize content assistant
 */
public class OseeTypesProposalProvider extends AbstractOseeTypesProposalProvider {

   @Override
   public void completeXOseeEnumEntry_EntryGuid(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
      super.completeXOseeEnumEntry_EntryGuid(model, assignment, context, acceptor);
      completeGuidGeneration((RuleCall) assignment.getTerminal(), context, acceptor);
   }

   @Override
   public void completeXArtifactType_TypeGuid(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
      super.completeXArtifactType_TypeGuid(model, assignment, context, acceptor);
      completeGuidGeneration((RuleCall) assignment.getTerminal(), context, acceptor);
   }

   @Override
   public void completeXAttributeType_TypeGuid(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
      super.completeXAttributeType_TypeGuid(model, assignment, context, acceptor);
      completeGuidGeneration((RuleCall) assignment.getTerminal(), context, acceptor);
   }

   @Override
   public void completeXAttributeTypeRef_BranchGuid(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
      super.completeXAttributeTypeRef_BranchGuid(model, assignment, context, acceptor);
      completeGuidGeneration((RuleCall) assignment.getTerminal(), context, acceptor);
   }

   @Override
   public void completeXOseeEnumType_TypeGuid(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
      super.completeXOseeEnumType_TypeGuid(model, assignment, context, acceptor);
      completeGuidGeneration((RuleCall) assignment.getTerminal(), context, acceptor);
   }

   @Override
   public void completeXRelationType_TypeGuid(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
      super.completeXRelationType_TypeGuid(model, assignment, context, acceptor);
      completeGuidGeneration((RuleCall) assignment.getTerminal(), context, acceptor);
   }

   private void completeGuidGeneration(RuleCall ruleCall, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
      if (acceptor.canAcceptMoreProposals()) {
         String generatedGUID = String.format("\"%s\"", GUID.create());
         String displayProposalAs = generatedGUID + "- GUID";
         ICompletionProposal proposal = createCompletionProposal(generatedGUID, displayProposalAs, null, context);
         acceptor.accept(proposal);
      }
   }

   @Override
   public void completeAddEnum_EntryGuid(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
      super.completeAddEnum_EntryGuid(model, assignment, context, acceptor);
      completeGuidGeneration((RuleCall) assignment.getTerminal(), context, acceptor);
   }
}
