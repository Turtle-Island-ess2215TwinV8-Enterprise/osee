/*
 * generated by Xtext
 */
package org.eclipse.osee.framework.core.dsl.ui.contentassist;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.common.ui.contentassist.TerminalsProposalProvider;
import org.eclipse.xtext.ui.editor.contentassist.ContentAssistContext;
import org.eclipse.xtext.ui.editor.contentassist.ICompletionProposalAcceptor;

/**
 * Represents a generated, default implementation of interface {@link IProposalProvider}. Methods are dynamically
 * dispatched on the first parameter, i.e., you can override them with a more concrete subtype.
 */
@SuppressWarnings("all")
public class AbstractOseeDslProposalProvider extends TerminalsProposalProvider {

   public void completeOseeDsl_Imports(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
      completeRuleCall(((RuleCall) assignment.getTerminal()), context, acceptor);
   }

   public void completeOseeDsl_ArtifactTypes(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
      completeRuleCall(((RuleCall) assignment.getTerminal()), context, acceptor);
   }

   public void completeOseeDsl_RelationTypes(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
      completeRuleCall(((RuleCall) assignment.getTerminal()), context, acceptor);
   }

   public void completeOseeDsl_AttributeTypes(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
      completeRuleCall(((RuleCall) assignment.getTerminal()), context, acceptor);
   }

   public void completeOseeDsl_EnumTypes(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
      completeRuleCall(((RuleCall) assignment.getTerminal()), context, acceptor);
   }

   public void completeOseeDsl_EnumOverrides(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
      completeRuleCall(((RuleCall) assignment.getTerminal()), context, acceptor);
   }

   public void completeOseeDsl_BranchRefs(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
      completeRuleCall(((RuleCall) assignment.getTerminal()), context, acceptor);
   }

   public void completeOseeDsl_ArtifactRefs(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
      completeRuleCall(((RuleCall) assignment.getTerminal()), context, acceptor);
   }

   public void completeOseeDsl_AccessDeclarations(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
      completeRuleCall(((RuleCall) assignment.getTerminal()), context, acceptor);
   }

   public void completeImport_ImportURI(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
      completeRuleCall(((RuleCall) assignment.getTerminal()), context, acceptor);
   }

   public void completeXArtifactType_Abstract(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
      // subclasses may override
   }

   public void completeXArtifactType_Name(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
      completeRuleCall(((RuleCall) assignment.getTerminal()), context, acceptor);
   }

   public void completeXArtifactType_SuperArtifactTypes(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
      lookupCrossReference(((CrossReference) assignment.getTerminal()), context, acceptor);
   }

   public void completeXArtifactType_TypeGuid(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
      completeRuleCall(((RuleCall) assignment.getTerminal()), context, acceptor);
   }

   public void completeXArtifactType_ValidAttributeTypes(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
      completeRuleCall(((RuleCall) assignment.getTerminal()), context, acceptor);
   }

   public void completeXAttributeTypeRef_ValidAttributeType(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
      lookupCrossReference(((CrossReference) assignment.getTerminal()), context, acceptor);
   }

   public void completeXAttributeTypeRef_BranchGuid(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
      completeRuleCall(((RuleCall) assignment.getTerminal()), context, acceptor);
   }

   public void completeXAttributeType_Name(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
      completeRuleCall(((RuleCall) assignment.getTerminal()), context, acceptor);
   }

   public void completeXAttributeType_BaseAttributeType(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
      completeRuleCall(((RuleCall) assignment.getTerminal()), context, acceptor);
   }

   public void completeXAttributeType_Override(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
      lookupCrossReference(((CrossReference) assignment.getTerminal()), context, acceptor);
   }

   public void completeXAttributeType_TypeGuid(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
      completeRuleCall(((RuleCall) assignment.getTerminal()), context, acceptor);
   }

   public void completeXAttributeType_DataProvider(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
      // subclasses may override
      // subclasses may override
      completeRuleCall(((RuleCall) ((Alternatives) assignment.getTerminal()).getElements().get(2)), context, acceptor);
   }

   public void completeXAttributeType_Min(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
      completeRuleCall(((RuleCall) assignment.getTerminal()), context, acceptor);
   }

   public void completeXAttributeType_Max(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
      completeRuleCall(((RuleCall) ((Alternatives) assignment.getTerminal()).getElements().get(0)), context, acceptor);
      // subclasses may override
   }

   public void completeXAttributeType_TaggerId(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
      // subclasses may override
      completeRuleCall(((RuleCall) ((Alternatives) assignment.getTerminal()).getElements().get(1)), context, acceptor);
   }

   public void completeXAttributeType_EnumType(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
      lookupCrossReference(((CrossReference) assignment.getTerminal()), context, acceptor);
   }

   public void completeXAttributeType_Description(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
      completeRuleCall(((RuleCall) assignment.getTerminal()), context, acceptor);
   }

   public void completeXAttributeType_DefaultValue(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
      completeRuleCall(((RuleCall) assignment.getTerminal()), context, acceptor);
   }

   public void completeXAttributeType_FileExtension(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
      completeRuleCall(((RuleCall) assignment.getTerminal()), context, acceptor);
   }

   public void completeXOseeEnumType_Name(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
      completeRuleCall(((RuleCall) assignment.getTerminal()), context, acceptor);
   }

   public void completeXOseeEnumType_TypeGuid(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
      completeRuleCall(((RuleCall) assignment.getTerminal()), context, acceptor);
   }

   public void completeXOseeEnumType_EnumEntries(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
      completeRuleCall(((RuleCall) assignment.getTerminal()), context, acceptor);
   }

   public void completeXOseeEnumEntry_Name(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
      completeRuleCall(((RuleCall) assignment.getTerminal()), context, acceptor);
   }

   public void completeXOseeEnumEntry_Ordinal(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
      completeRuleCall(((RuleCall) assignment.getTerminal()), context, acceptor);
   }

   public void completeXOseeEnumEntry_EntryGuid(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
      completeRuleCall(((RuleCall) assignment.getTerminal()), context, acceptor);
   }

   public void completeXOseeEnumOverride_OverridenEnumType(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
      lookupCrossReference(((CrossReference) assignment.getTerminal()), context, acceptor);
   }

   public void completeXOseeEnumOverride_InheritAll(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
      // subclasses may override
   }

   public void completeXOseeEnumOverride_OverrideOptions(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
      completeRuleCall(((RuleCall) assignment.getTerminal()), context, acceptor);
   }

   public void completeAddEnum_EnumEntry(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
      completeRuleCall(((RuleCall) assignment.getTerminal()), context, acceptor);
   }

   public void completeAddEnum_Ordinal(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
      completeRuleCall(((RuleCall) assignment.getTerminal()), context, acceptor);
   }

   public void completeAddEnum_EntryGuid(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
      completeRuleCall(((RuleCall) assignment.getTerminal()), context, acceptor);
   }

   public void completeRemoveEnum_EnumEntry(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
      lookupCrossReference(((CrossReference) assignment.getTerminal()), context, acceptor);
   }

   public void completeXRelationType_Name(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
      completeRuleCall(((RuleCall) assignment.getTerminal()), context, acceptor);
   }

   public void completeXRelationType_TypeGuid(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
      completeRuleCall(((RuleCall) assignment.getTerminal()), context, acceptor);
   }

   public void completeXRelationType_SideAName(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
      completeRuleCall(((RuleCall) assignment.getTerminal()), context, acceptor);
   }

   public void completeXRelationType_SideAArtifactType(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
      lookupCrossReference(((CrossReference) assignment.getTerminal()), context, acceptor);
   }

   public void completeXRelationType_SideBName(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
      completeRuleCall(((RuleCall) assignment.getTerminal()), context, acceptor);
   }

   public void completeXRelationType_SideBArtifactType(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
      lookupCrossReference(((CrossReference) assignment.getTerminal()), context, acceptor);
   }

   public void completeXRelationType_DefaultOrderType(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
      completeRuleCall(((RuleCall) assignment.getTerminal()), context, acceptor);
   }

   public void completeXRelationType_Multiplicity(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
      completeRuleCall(((RuleCall) assignment.getTerminal()), context, acceptor);
   }

   public void completeXArtifactRef_Name(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
      completeRuleCall(((RuleCall) assignment.getTerminal()), context, acceptor);
   }

   public void completeXArtifactRef_Guid(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
      completeRuleCall(((RuleCall) assignment.getTerminal()), context, acceptor);
   }

   public void completeXBranchRef_Name(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
      completeRuleCall(((RuleCall) assignment.getTerminal()), context, acceptor);
   }

   public void completeXBranchRef_Guid(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
      completeRuleCall(((RuleCall) assignment.getTerminal()), context, acceptor);
   }

   public void completeAccessContext_Name(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
      completeRuleCall(((RuleCall) assignment.getTerminal()), context, acceptor);
   }

   public void completeAccessContext_SuperAccessContexts(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
      lookupCrossReference(((CrossReference) assignment.getTerminal()), context, acceptor);
   }

   public void completeAccessContext_Guid(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
      completeRuleCall(((RuleCall) assignment.getTerminal()), context, acceptor);
   }

   public void completeAccessContext_AccessRules(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
      completeRuleCall(((RuleCall) assignment.getTerminal()), context, acceptor);
   }

   public void completeAccessContext_HierarchyRestrictions(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
      completeRuleCall(((RuleCall) assignment.getTerminal()), context, acceptor);
   }

   public void completeHierarchyRestriction_Artifact(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
      lookupCrossReference(((CrossReference) assignment.getTerminal()), context, acceptor);
   }

   public void completeHierarchyRestriction_AccessRules(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
      completeRuleCall(((RuleCall) assignment.getTerminal()), context, acceptor);
   }

   public void completeArtifactInstanceRestriction_Permission(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
      completeRuleCall(((RuleCall) assignment.getTerminal()), context, acceptor);
   }

   public void completeArtifactInstanceRestriction_ArtifactRef(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
      lookupCrossReference(((CrossReference) assignment.getTerminal()), context, acceptor);
   }

   public void completeArtifactTypeRestriction_Permission(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
      completeRuleCall(((RuleCall) assignment.getTerminal()), context, acceptor);
   }

   public void completeArtifactTypeRestriction_ArtifactTypeRef(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
      lookupCrossReference(((CrossReference) assignment.getTerminal()), context, acceptor);
   }

   public void completeAttributeTypeRestriction_Permission(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
      completeRuleCall(((RuleCall) assignment.getTerminal()), context, acceptor);
   }

   public void completeAttributeTypeRestriction_AttributeTypeRef(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
      lookupCrossReference(((CrossReference) assignment.getTerminal()), context, acceptor);
   }

   public void completeAttributeTypeRestriction_ArtifactTypeRef(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
      lookupCrossReference(((CrossReference) assignment.getTerminal()), context, acceptor);
   }

   public void completeRelationTypeRestriction_Permission(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
      completeRuleCall(((RuleCall) assignment.getTerminal()), context, acceptor);
   }

   public void completeRelationTypeRestriction_RelationTypeRef(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
      lookupCrossReference(((CrossReference) assignment.getTerminal()), context, acceptor);
   }

   public void completeRelationTypeRestriction_RestrictedToSide(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
      completeRuleCall(((RuleCall) assignment.getTerminal()), context, acceptor);
   }

   public void complete_OseeDsl(EObject model, RuleCall ruleCall, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
      // subclasses may override
   }

   public void complete_Import(EObject model, RuleCall ruleCall, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
      // subclasses may override
   }

   public void complete_WHOLE_NUM_STR(EObject model, RuleCall ruleCall, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
      // subclasses may override
   }

   public void complete_NAME_REFERENCE(EObject model, RuleCall ruleCall, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
      // subclasses may override
   }

   public void complete_ATTRIBUTE_TYPE_REFERENCE(EObject model, RuleCall ruleCall, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
      // subclasses may override
   }

   public void complete_ARTIFACT_TYPE_REFERENCE(EObject model, RuleCall ruleCall, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
      // subclasses may override
   }

   public void complete_RELATION_TYPE_REFERENCE(EObject model, RuleCall ruleCall, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
      // subclasses may override
   }

   public void complete_ENUM_TYPE_REFERENCE(EObject model, RuleCall ruleCall, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
      // subclasses may override
   }

   public void complete_ENUM_ENTRY_TYPE_REFERENCE(EObject model, RuleCall ruleCall, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
      // subclasses may override
   }

   public void complete_QUALIFIED_NAME(EObject model, RuleCall ruleCall, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
      // subclasses may override
   }

   public void complete_OseeElement(EObject model, RuleCall ruleCall, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
      // subclasses may override
   }

   public void complete_OseeType(EObject model, RuleCall ruleCall, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
      // subclasses may override
   }

   public void complete_XArtifactType(EObject model, RuleCall ruleCall, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
      // subclasses may override
   }

   public void complete_XAttributeTypeRef(EObject model, RuleCall ruleCall, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
      // subclasses may override
   }

   public void complete_XAttributeType(EObject model, RuleCall ruleCall, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
      // subclasses may override
   }

   public void complete_AttributeBaseType(EObject model, RuleCall ruleCall, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
      // subclasses may override
   }

   public void complete_XOseeEnumType(EObject model, RuleCall ruleCall, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
      // subclasses may override
   }

   public void complete_XOseeEnumEntry(EObject model, RuleCall ruleCall, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
      // subclasses may override
   }

   public void complete_XOseeEnumOverride(EObject model, RuleCall ruleCall, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
      // subclasses may override
   }

   public void complete_OverrideOption(EObject model, RuleCall ruleCall, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
      // subclasses may override
   }

   public void complete_AddEnum(EObject model, RuleCall ruleCall, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
      // subclasses may override
   }

   public void complete_RemoveEnum(EObject model, RuleCall ruleCall, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
      // subclasses may override
   }

   public void complete_XRelationType(EObject model, RuleCall ruleCall, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
      // subclasses may override
   }

   public void complete_RelationMultiplicityEnum(EObject model, RuleCall ruleCall, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
      // subclasses may override
   }

   public void complete_RelationOrderType(EObject model, RuleCall ruleCall, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
      // subclasses may override
   }

   public void complete_ARTIFACT_INSTANCE_REFERENCE(EObject model, RuleCall ruleCall, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
      // subclasses may override
   }

   public void complete_XArtifactRef(EObject model, RuleCall ruleCall, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
      // subclasses may override
   }

   public void complete_BRANCH_INSTANCE_REFERENCE(EObject model, RuleCall ruleCall, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
      // subclasses may override
   }

   public void complete_XBranchRef(EObject model, RuleCall ruleCall, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
      // subclasses may override
   }

   public void complete_ACCESS_CONTEXT_TYPE_REFRENCE(EObject model, RuleCall ruleCall, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
      // subclasses may override
   }

   public void complete_AccessContext(EObject model, RuleCall ruleCall, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
      // subclasses may override
   }

   public void complete_HierarchyRestriction(EObject model, RuleCall ruleCall, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
      // subclasses may override
   }

   public void complete_AccessPermissionEnum(EObject model, RuleCall ruleCall, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
      // subclasses may override
   }

   public void complete_ObjectRestriction(EObject model, RuleCall ruleCall, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
      // subclasses may override
   }

   public void complete_ArtifactInstanceRestriction(EObject model, RuleCall ruleCall, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
      // subclasses may override
   }

   public void complete_ArtifactTypeRestriction(EObject model, RuleCall ruleCall, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
      // subclasses may override
   }

   public void complete_AttributeTypeRestriction(EObject model, RuleCall ruleCall, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
      // subclasses may override
   }

   public void complete_RelationTypeRestriction(EObject model, RuleCall ruleCall, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
      // subclasses may override
   }

   public void complete_XRelationSideEnum(EObject model, RuleCall ruleCall, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
      // subclasses may override
   }
}
