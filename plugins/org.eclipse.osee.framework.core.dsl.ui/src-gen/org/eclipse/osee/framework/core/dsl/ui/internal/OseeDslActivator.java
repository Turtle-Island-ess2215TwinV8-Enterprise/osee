/*
 * generated by Xtext
 */
package org.eclipse.osee.framework.core.dsl.ui.internal;

import java.util.HashMap;
import java.util.Map;
import org.apache.log4j.Logger;
import org.eclipse.ui.plugin.AbstractUIPlugin;
import org.osgi.framework.BundleContext;
import com.google.inject.Guice;
import com.google.inject.Injector;
import com.google.inject.Module;
import com.google.inject.util.Modules;

/**
 * Generated
 */
public class OseeDslActivator extends AbstractUIPlugin {

   private final Map<String, Injector> injectors = new HashMap<String, Injector>();
   private static OseeDslActivator INSTANCE;

   public Injector getInjector(String languageName) {
      return injectors.get(languageName);
   }

   @Override
   public void start(BundleContext context) throws Exception {
      super.start(context);
      INSTANCE = this;
      try {

         injectors.put(
            "org.eclipse.osee.framework.core.dsl.OseeDsl",
            Guice.createInjector(Modules.override(
               Modules.override(getRuntimeModule("org.eclipse.osee.framework.core.dsl.OseeDsl")).with(
                  getUiModule("org.eclipse.osee.framework.core.dsl.OseeDsl"))).with(getSharedStateModule())));

      } catch (Exception e) {
         Logger.getLogger(getClass()).error(e.getMessage(), e);
         throw e;
      }
   }

   public static OseeDslActivator getInstance() {
      return INSTANCE;
   }

   protected Module getRuntimeModule(String grammar) {

      if ("org.eclipse.osee.framework.core.dsl.OseeDsl".equals(grammar)) {
         return new org.eclipse.osee.framework.core.dsl.OseeDslRuntimeModule();
      }

      throw new IllegalArgumentException(grammar);
   }

   protected Module getUiModule(String grammar) {

      if ("org.eclipse.osee.framework.core.dsl.OseeDsl".equals(grammar)) {
         return new org.eclipse.osee.framework.core.dsl.ui.OseeDslUiModule(this);
      }

      throw new IllegalArgumentException(grammar);
   }

   protected Module getSharedStateModule() {
      return new org.eclipse.xtext.ui.shared.SharedStateModule();
   }

}
